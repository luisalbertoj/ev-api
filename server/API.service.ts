/* tslint:disable */
/* eslint-disable */
//  This file was automatically generated and should not be edited.
import { Client, generateClient, GraphQLResult } from 'aws-amplify/api';
import { Observable } from 'rxjs';
import { Connector } from './utils/connector';

Connector.configure();

export type __SubscriptionContainer = {
  onCreateEvolinciteCompetence: OnCreateEvolinciteCompetenceSubscription;
  onUpdateEvolinciteCompetence: OnUpdateEvolinciteCompetenceSubscription;
  onDeleteEvolinciteCompetence: OnDeleteEvolinciteCompetenceSubscription;
  onCreateEvolinciteCourse: OnCreateEvolinciteCourseSubscription;
  onUpdateEvolinciteCourse: OnUpdateEvolinciteCourseSubscription;
  onDeleteEvolinciteCourse: OnDeleteEvolinciteCourseSubscription;
  onCreateEvolinciteSyllabus: OnCreateEvolinciteSyllabusSubscription;
  onUpdateEvolinciteSyllabus: OnUpdateEvolinciteSyllabusSubscription;
  onDeleteEvolinciteSyllabus: OnDeleteEvolinciteSyllabusSubscription;
  onCreateEvolinciteUserAnswers: OnCreateEvolinciteUserAnswersSubscription;
  onUpdateEvolinciteUserAnswers: OnUpdateEvolinciteUserAnswersSubscription;
  onDeleteEvolinciteUserAnswers: OnDeleteEvolinciteUserAnswersSubscription;
  onCreateEvolinciteProcessType: OnCreateEvolinciteProcessTypeSubscription;
  onUpdateEvolinciteProcessType: OnUpdateEvolinciteProcessTypeSubscription;
  onDeleteEvolinciteProcessType: OnDeleteEvolinciteProcessTypeSubscription;
  onCreateEvolinciteExpenseType: OnCreateEvolinciteExpenseTypeSubscription;
  onUpdateEvolinciteExpenseType: OnUpdateEvolinciteExpenseTypeSubscription;
  onDeleteEvolinciteExpenseType: OnDeleteEvolinciteExpenseTypeSubscription;
  onCreateEvolinciteExpense: OnCreateEvolinciteExpenseSubscription;
  onUpdateEvolinciteExpense: OnUpdateEvolinciteExpenseSubscription;
  onDeleteEvolinciteExpense: OnDeleteEvolinciteExpenseSubscription;
  onCreateEvolinciteUserEvolinciteJobTitle: OnCreateEvolinciteUserEvolinciteJobTitleSubscription;
  onUpdateEvolinciteUserEvolinciteJobTitle: OnUpdateEvolinciteUserEvolinciteJobTitleSubscription;
  onDeleteEvolinciteUserEvolinciteJobTitle: OnDeleteEvolinciteUserEvolinciteJobTitleSubscription;
  onCreateEvolinciteJobTitle: OnCreateEvolinciteJobTitleSubscription;
  onUpdateEvolinciteJobTitle: OnUpdateEvolinciteJobTitleSubscription;
  onDeleteEvolinciteJobTitle: OnDeleteEvolinciteJobTitleSubscription;
  onCreateEvolinciteWalletPayment: OnCreateEvolinciteWalletPaymentSubscription;
  onUpdateEvolinciteWalletPayment: OnUpdateEvolinciteWalletPaymentSubscription;
  onDeleteEvolinciteWalletPayment: OnDeleteEvolinciteWalletPaymentSubscription;
  onCreateEvolinciteCrmNegotiationField: OnCreateEvolinciteCrmNegotiationFieldSubscription;
  onUpdateEvolinciteCrmNegotiationField: OnUpdateEvolinciteCrmNegotiationFieldSubscription;
  onDeleteEvolinciteCrmNegotiationField: OnDeleteEvolinciteCrmNegotiationFieldSubscription;
  onCreateEvolinciteCrmNegotiationSection: OnCreateEvolinciteCrmNegotiationSectionSubscription;
  onUpdateEvolinciteCrmNegotiationSection: OnUpdateEvolinciteCrmNegotiationSectionSubscription;
  onDeleteEvolinciteCrmNegotiationSection: OnDeleteEvolinciteCrmNegotiationSectionSubscription;
  onCreateEvolinciteCrmAutomation: OnCreateEvolinciteCrmAutomationSubscription;
  onUpdateEvolinciteCrmAutomation: OnUpdateEvolinciteCrmAutomationSubscription;
  onDeleteEvolinciteCrmAutomation: OnDeleteEvolinciteCrmAutomationSubscription;
  onCreateEvolinciteComment: OnCreateEvolinciteCommentSubscription;
  onUpdateEvolinciteComment: OnUpdateEvolinciteCommentSubscription;
  onDeleteEvolinciteComment: OnDeleteEvolinciteCommentSubscription;
  onCreateEvolinciteActivity: OnCreateEvolinciteActivitySubscription;
  onUpdateEvolinciteActivity: OnUpdateEvolinciteActivitySubscription;
  onDeleteEvolinciteActivity: OnDeleteEvolinciteActivitySubscription;
  onCreateEvolincitePermissions: OnCreateEvolincitePermissionsSubscription;
  onUpdateEvolincitePermissions: OnUpdateEvolincitePermissionsSubscription;
  onDeleteEvolincitePermissions: OnDeleteEvolincitePermissionsSubscription;
  onCreateEvolinciteDepartment: OnCreateEvolinciteDepartmentSubscription;
  onUpdateEvolinciteDepartment: OnUpdateEvolinciteDepartmentSubscription;
  onDeleteEvolinciteDepartment: OnDeleteEvolinciteDepartmentSubscription;
  onCreateEvolinciteSubscription: OnCreateEvolinciteSubscriptionSubscription;
  onUpdateEvolinciteSubscription: OnUpdateEvolinciteSubscriptionSubscription;
  onDeleteEvolinciteSubscription: OnDeleteEvolinciteSubscriptionSubscription;
  onCreateEvolinciteModule: OnCreateEvolinciteModuleSubscription;
  onUpdateEvolinciteModule: OnUpdateEvolinciteModuleSubscription;
  onDeleteEvolinciteModule: OnDeleteEvolinciteModuleSubscription;
  onCreateEvolinciteFunctionality: OnCreateEvolinciteFunctionalitySubscription;
  onUpdateEvolinciteFunctionality: OnUpdateEvolinciteFunctionalitySubscription;
  onDeleteEvolinciteFunctionality: OnDeleteEvolinciteFunctionalitySubscription;
  onCreateEvolinciteRol: OnCreateEvolinciteRolSubscription;
  onUpdateEvolinciteRol: OnUpdateEvolinciteRolSubscription;
  onDeleteEvolinciteRol: OnDeleteEvolinciteRolSubscription;
  onCreateEvolinciteCustomer: OnCreateEvolinciteCustomerSubscription;
  onUpdateEvolinciteCustomer: OnUpdateEvolinciteCustomerSubscription;
  onDeleteEvolinciteCustomer: OnDeleteEvolinciteCustomerSubscription;
  onCreateEvolinciteUserSettings: OnCreateEvolinciteUserSettingsSubscription;
  onUpdateEvolinciteUserSettings: OnUpdateEvolinciteUserSettingsSubscription;
  onDeleteEvolinciteUserSettings: OnDeleteEvolinciteUserSettingsSubscription;
  onCreateEvolinciteCrmPipeline: OnCreateEvolinciteCrmPipelineSubscription;
  onUpdateEvolinciteCrmPipeline: OnUpdateEvolinciteCrmPipelineSubscription;
  onDeleteEvolinciteCrmPipeline: OnDeleteEvolinciteCrmPipelineSubscription;
  onCreateEvolinciteCrmState: OnCreateEvolinciteCrmStateSubscription;
  onUpdateEvolinciteCrmState: OnUpdateEvolinciteCrmStateSubscription;
  onDeleteEvolinciteCrmState: OnDeleteEvolinciteCrmStateSubscription;
  onCreateEvolinciteCrmNegotiationLog: OnCreateEvolinciteCrmNegotiationLogSubscription;
  onUpdateEvolinciteCrmNegotiationLog: OnUpdateEvolinciteCrmNegotiationLogSubscription;
  onDeleteEvolinciteCrmNegotiationLog: OnDeleteEvolinciteCrmNegotiationLogSubscription;
  onCreateEvolinciteCrmNegotiation: OnCreateEvolinciteCrmNegotiationSubscription;
  onUpdateEvolinciteCrmNegotiation: OnUpdateEvolinciteCrmNegotiationSubscription;
  onDeleteEvolinciteCrmNegotiation: OnDeleteEvolinciteCrmNegotiationSubscription;
  onCreateEvolinciteRoom: OnCreateEvolinciteRoomSubscription;
  onUpdateEvolinciteRoom: OnUpdateEvolinciteRoomSubscription;
  onDeleteEvolinciteRoom: OnDeleteEvolinciteRoomSubscription;
  onCreateEvolinciteMessage: OnCreateEvolinciteMessageSubscription;
  onUpdateEvolinciteMessage: OnUpdateEvolinciteMessageSubscription;
  onDeleteEvolinciteMessage: OnDeleteEvolinciteMessageSubscription;
  onCreateEvolinciteCrmNegotiationFieldValue: OnCreateEvolinciteCrmNegotiationFieldValueSubscription;
  onUpdateEvolinciteCrmNegotiationFieldValue: OnUpdateEvolinciteCrmNegotiationFieldValueSubscription;
  onDeleteEvolinciteCrmNegotiationFieldValue: OnDeleteEvolinciteCrmNegotiationFieldValueSubscription;
  onCreateEvolinciteEmail: OnCreateEvolinciteEmailSubscription;
  onUpdateEvolinciteEmail: OnUpdateEvolinciteEmailSubscription;
  onDeleteEvolinciteEmail: OnDeleteEvolinciteEmailSubscription;
  onCreateEvolinciteEmailTemplate: OnCreateEvolinciteEmailTemplateSubscription;
  onUpdateEvolinciteEmailTemplate: OnUpdateEvolinciteEmailTemplateSubscription;
  onDeleteEvolinciteEmailTemplate: OnDeleteEvolinciteEmailTemplateSubscription;
  onCreateEvolinciteNotification: OnCreateEvolinciteNotificationSubscription;
  onUpdateEvolinciteNotification: OnUpdateEvolinciteNotificationSubscription;
  onDeleteEvolinciteNotification: OnDeleteEvolinciteNotificationSubscription;
  onCreateEvolinciteUserDepartment: OnCreateEvolinciteUserDepartmentSubscription;
  onUpdateEvolinciteUserDepartment: OnUpdateEvolinciteUserDepartmentSubscription;
  onDeleteEvolinciteUserDepartment: OnDeleteEvolinciteUserDepartmentSubscription;
  onCreateEvolinciteUserEvolinciteCompany: OnCreateEvolinciteUserEvolinciteCompanySubscription;
  onUpdateEvolinciteUserEvolinciteCompany: OnUpdateEvolinciteUserEvolinciteCompanySubscription;
  onDeleteEvolinciteUserEvolinciteCompany: OnDeleteEvolinciteUserEvolinciteCompanySubscription;
  onCreateEvolinciteUser: OnCreateEvolinciteUserSubscription;
  onUpdateEvolinciteUser: OnUpdateEvolinciteUserSubscription;
  onDeleteEvolinciteUser: OnDeleteEvolinciteUserSubscription;
  onCreateEvolinciteCompany: OnCreateEvolinciteCompanySubscription;
  onUpdateEvolinciteCompany: OnUpdateEvolinciteCompanySubscription;
  onDeleteEvolinciteCompany: OnDeleteEvolinciteCompanySubscription;
  onCreateEvolinciteGoal: OnCreateEvolinciteGoalSubscription;
  onUpdateEvolinciteGoal: OnUpdateEvolinciteGoalSubscription;
  onDeleteEvolinciteGoal: OnDeleteEvolinciteGoalSubscription;
  onCreateEvolinciteWalletPaymentLog: OnCreateEvolinciteWalletPaymentLogSubscription;
  onUpdateEvolinciteWalletPaymentLog: OnUpdateEvolinciteWalletPaymentLogSubscription;
  onDeleteEvolinciteWalletPaymentLog: OnDeleteEvolinciteWalletPaymentLogSubscription;
  onCreateEvolinciteExpenseLog: OnCreateEvolinciteExpenseLogSubscription;
  onUpdateEvolinciteExpenseLog: OnUpdateEvolinciteExpenseLogSubscription;
  onDeleteEvolinciteExpenseLog: OnDeleteEvolinciteExpenseLogSubscription;
  onCreateEvolinciteTicket: OnCreateEvolinciteTicketSubscription;
  onUpdateEvolinciteTicket: OnUpdateEvolinciteTicketSubscription;
  onDeleteEvolinciteTicket: OnDeleteEvolinciteTicketSubscription;
  onCreateEvolinciteTicketLog: OnCreateEvolinciteTicketLogSubscription;
  onUpdateEvolinciteTicketLog: OnUpdateEvolinciteTicketLogSubscription;
  onDeleteEvolinciteTicketLog: OnDeleteEvolinciteTicketLogSubscription;
  onCreateEvolinciteFile: OnCreateEvolinciteFileSubscription;
  onUpdateEvolinciteFile: OnUpdateEvolinciteFileSubscription;
  onDeleteEvolinciteFile: OnDeleteEvolinciteFileSubscription;
  onCreateEvolinciteFolder: OnCreateEvolinciteFolderSubscription;
  onUpdateEvolinciteFolder: OnUpdateEvolinciteFolderSubscription;
  onDeleteEvolinciteFolder: OnDeleteEvolinciteFolderSubscription;
  onCreateEvolinciteArticle: OnCreateEvolinciteArticleSubscription;
  onUpdateEvolinciteArticle: OnUpdateEvolinciteArticleSubscription;
  onDeleteEvolinciteArticle: OnDeleteEvolinciteArticleSubscription;
  onCreateEvolinciteArticleComment: OnCreateEvolinciteArticleCommentSubscription;
  onUpdateEvolinciteArticleComment: OnUpdateEvolinciteArticleCommentSubscription;
  onDeleteEvolinciteArticleComment: OnDeleteEvolinciteArticleCommentSubscription;
  onCreateEvolinciteFormConfiguration: OnCreateEvolinciteFormConfigurationSubscription;
  onUpdateEvolinciteFormConfiguration: OnUpdateEvolinciteFormConfigurationSubscription;
  onDeleteEvolinciteFormConfiguration: OnDeleteEvolinciteFormConfigurationSubscription;
  onCreateEvolinciteFormAnswer: OnCreateEvolinciteFormAnswerSubscription;
  onUpdateEvolinciteFormAnswer: OnUpdateEvolinciteFormAnswerSubscription;
  onDeleteEvolinciteFormAnswer: OnDeleteEvolinciteFormAnswerSubscription;
  onCreateEvolincitePaymentAutomation: OnCreateEvolincitePaymentAutomationSubscription;
  onUpdateEvolincitePaymentAutomation: OnUpdateEvolincitePaymentAutomationSubscription;
  onDeleteEvolincitePaymentAutomation: OnDeleteEvolincitePaymentAutomationSubscription;
  onCreateEvolinciteMail: OnCreateEvolinciteMailSubscription;
  onUpdateEvolinciteMail: OnUpdateEvolinciteMailSubscription;
  onDeleteEvolinciteMail: OnDeleteEvolinciteMailSubscription;
  onCreateEvolinciteMailConfiguration: OnCreateEvolinciteMailConfigurationSubscription;
  onUpdateEvolinciteMailConfiguration: OnUpdateEvolinciteMailConfigurationSubscription;
  onDeleteEvolinciteMailConfiguration: OnDeleteEvolinciteMailConfigurationSubscription;
  onCreateEvolinciteMailTemplate: OnCreateEvolinciteMailTemplateSubscription;
  onUpdateEvolinciteMailTemplate: OnUpdateEvolinciteMailTemplateSubscription;
  onDeleteEvolinciteMailTemplate: OnDeleteEvolinciteMailTemplateSubscription;
  onCreateEvolinciteMailTemplateLog: OnCreateEvolinciteMailTemplateLogSubscription;
  onUpdateEvolinciteMailTemplateLog: OnUpdateEvolinciteMailTemplateLogSubscription;
  onDeleteEvolinciteMailTemplateLog: OnDeleteEvolinciteMailTemplateLogSubscription;
  onCreateEvolincitePackage: OnCreateEvolincitePackageSubscription;
  onUpdateEvolincitePackage: OnUpdateEvolincitePackageSubscription;
  onDeleteEvolincitePackage: OnDeleteEvolincitePackageSubscription;
  onCreateEvolinciteCompanySubscription: OnCreateEvolinciteCompanySubscriptionSubscription;
  onUpdateEvolinciteCompanySubscription: OnUpdateEvolinciteCompanySubscriptionSubscription;
  onDeleteEvolinciteCompanySubscription: OnDeleteEvolinciteCompanySubscriptionSubscription;
  onCreateEvolinciteEmployeeObservation: OnCreateEvolinciteEmployeeObservationSubscription;
  onUpdateEvolinciteEmployeeObservation: OnUpdateEvolinciteEmployeeObservationSubscription;
  onDeleteEvolinciteEmployeeObservation: OnDeleteEvolinciteEmployeeObservationSubscription;
  onCreateEvolinciteTag: OnCreateEvolinciteTagSubscription;
  onUpdateEvolinciteTag: OnUpdateEvolinciteTagSubscription;
  onDeleteEvolinciteTag: OnDeleteEvolinciteTagSubscription;
  onCreateEvolinciteMilestone: OnCreateEvolinciteMilestoneSubscription;
  onUpdateEvolinciteMilestone: OnUpdateEvolinciteMilestoneSubscription;
  onDeleteEvolinciteMilestone: OnDeleteEvolinciteMilestoneSubscription;
  onCreateEvolinciteUserLog: OnCreateEvolinciteUserLogSubscription;
  onUpdateEvolinciteUserLog: OnUpdateEvolinciteUserLogSubscription;
  onDeleteEvolinciteUserLog: OnDeleteEvolinciteUserLogSubscription;
  onCreateEvolinciteUserTimeTracking: OnCreateEvolinciteUserTimeTrackingSubscription;
  onUpdateEvolinciteUserTimeTracking: OnUpdateEvolinciteUserTimeTrackingSubscription;
  onDeleteEvolinciteUserTimeTracking: OnDeleteEvolinciteUserTimeTrackingSubscription;
  onCreateEvolinciteSchedule: OnCreateEvolinciteScheduleSubscription;
  onUpdateEvolinciteSchedule: OnUpdateEvolinciteScheduleSubscription;
  onDeleteEvolinciteSchedule: OnDeleteEvolinciteScheduleSubscription;
  onCreateEvolinciteTemplateRequest: OnCreateEvolinciteTemplateRequestSubscription;
  onUpdateEvolinciteTemplateRequest: OnUpdateEvolinciteTemplateRequestSubscription;
  onDeleteEvolinciteTemplateRequest: OnDeleteEvolinciteTemplateRequestSubscription;
  onCreateEvolinciteRequest: OnCreateEvolinciteRequestSubscription;
  onUpdateEvolinciteRequest: OnUpdateEvolinciteRequestSubscription;
  onDeleteEvolinciteRequest: OnDeleteEvolinciteRequestSubscription;
  onCreateEvolinciteActivityEvolinciteUser: OnCreateEvolinciteActivityEvolinciteUserSubscription;
  onUpdateEvolinciteActivityEvolinciteUser: OnUpdateEvolinciteActivityEvolinciteUserSubscription;
  onDeleteEvolinciteActivityEvolinciteUser: OnDeleteEvolinciteActivityEvolinciteUserSubscription;
  onCreateEvolinciteUserEvolinciteCrmNegotiation: OnCreateEvolinciteUserEvolinciteCrmNegotiationSubscription;
  onUpdateEvolinciteUserEvolinciteCrmNegotiation: OnUpdateEvolinciteUserEvolinciteCrmNegotiationSubscription;
  onDeleteEvolinciteUserEvolinciteCrmNegotiation: OnDeleteEvolinciteUserEvolinciteCrmNegotiationSubscription;
  onCreateEvolinciteRoomEvolinciteUser: OnCreateEvolinciteRoomEvolinciteUserSubscription;
  onUpdateEvolinciteRoomEvolinciteUser: OnUpdateEvolinciteRoomEvolinciteUserSubscription;
  onDeleteEvolinciteRoomEvolinciteUser: OnDeleteEvolinciteRoomEvolinciteUserSubscription;
};

export type CreateEvolinciteCompetenceInput = {
  id?: string | null;
  name?: string | null;
  description?: string | null;
  content?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  evolinciteCompetenceEvolinciteSyllabusId?: string | null;
};

export enum EvolinciteApplication {
  LEADS_UP = 'LEADS_UP',
  ACADEMY = 'ACADEMY',
  LANDING = 'LANDING',
}

export enum EvolinciteStates {
  INACTIVE = 'INACTIVE',
  ACTIVE = 'ACTIVE',
}

export type ModelEvolinciteCompetenceConditionInput = {
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  content?: ModelStringInput | null;
  application?: ModelEvolinciteApplicationInput | null;
  state?: ModelEvolinciteStatesInput | null;
  and?: Array<ModelEvolinciteCompetenceConditionInput | null> | null;
  or?: Array<ModelEvolinciteCompetenceConditionInput | null> | null;
  not?: ModelEvolinciteCompetenceConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  evolinciteCompetenceEvolinciteSyllabusId?: ModelIDInput | null;
};

export type ModelStringInput = {
  ne?: string | null;
  eq?: string | null;
  le?: string | null;
  lt?: string | null;
  ge?: string | null;
  gt?: string | null;
  contains?: string | null;
  notContains?: string | null;
  between?: Array<string | null> | null;
  beginsWith?: string | null;
  attributeExists?: boolean | null;
  attributeType?: ModelAttributeTypes | null;
  size?: ModelSizeInput | null;
};

export enum ModelAttributeTypes {
  binary = 'binary',
  binarySet = 'binarySet',
  bool = 'bool',
  list = 'list',
  map = 'map',
  number = 'number',
  numberSet = 'numberSet',
  string = 'string',
  stringSet = 'stringSet',
  _null = '_null',
}

export type ModelSizeInput = {
  ne?: number | null;
  eq?: number | null;
  le?: number | null;
  lt?: number | null;
  ge?: number | null;
  gt?: number | null;
  between?: Array<number | null> | null;
};

export type ModelEvolinciteApplicationInput = {
  eq?: EvolinciteApplication | null;
  ne?: EvolinciteApplication | null;
};

export type ModelEvolinciteStatesInput = {
  eq?: EvolinciteStates | null;
  ne?: EvolinciteStates | null;
};

export type ModelIDInput = {
  ne?: string | null;
  eq?: string | null;
  le?: string | null;
  lt?: string | null;
  ge?: string | null;
  gt?: string | null;
  contains?: string | null;
  notContains?: string | null;
  between?: Array<string | null> | null;
  beginsWith?: string | null;
  attributeExists?: boolean | null;
  attributeType?: ModelAttributeTypes | null;
  size?: ModelSizeInput | null;
};

export type EvolinciteCompetence = {
  __typename: 'EvolinciteCompetence';
  id: string;
  name?: string | null;
  description?: string | null;
  content?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteSyllabus?: EvolinciteSyllabus | null;
  createdAt: string;
  updatedAt: string;
  evolinciteCompetenceEvolinciteSyllabusId?: string | null;
};

export type EvolinciteSyllabus = {
  __typename: 'EvolinciteSyllabus';
  id: string;
  name?: string | null;
  description?: string | null;
  content?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteCompetence?: EvolinciteCompetence | null;
  createdAt: string;
  updatedAt: string;
  evolinciteSyllabusEvolinciteCompetenceId?: string | null;
};

export type UpdateEvolinciteCompetenceInput = {
  id: string;
  name?: string | null;
  description?: string | null;
  content?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  evolinciteCompetenceEvolinciteSyllabusId?: string | null;
};

export type DeleteEvolinciteCompetenceInput = {
  id: string;
};

export type CreateEvolinciteCourseInput = {
  id?: string | null;
  name?: string | null;
  description?: string | null;
  durationUnit?: string | null;
  duration?: number | null;
  objectives?: Array<string | null> | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  evolinciteCourseEvolinciteSyllabusId?: string | null;
};

export type ModelEvolinciteCourseConditionInput = {
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  durationUnit?: ModelStringInput | null;
  duration?: ModelIntInput | null;
  objectives?: ModelStringInput | null;
  application?: ModelEvolinciteApplicationInput | null;
  state?: ModelEvolinciteStatesInput | null;
  and?: Array<ModelEvolinciteCourseConditionInput | null> | null;
  or?: Array<ModelEvolinciteCourseConditionInput | null> | null;
  not?: ModelEvolinciteCourseConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  evolinciteCourseEvolinciteSyllabusId?: ModelIDInput | null;
};

export type ModelIntInput = {
  ne?: number | null;
  eq?: number | null;
  le?: number | null;
  lt?: number | null;
  ge?: number | null;
  gt?: number | null;
  between?: Array<number | null> | null;
  attributeExists?: boolean | null;
  attributeType?: ModelAttributeTypes | null;
};

export type EvolinciteCourse = {
  __typename: 'EvolinciteCourse';
  id: string;
  name?: string | null;
  description?: string | null;
  durationUnit?: string | null;
  duration?: number | null;
  objectives?: Array<string | null> | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteSyllabus?: EvolinciteSyllabus | null;
  createdAt: string;
  updatedAt: string;
  evolinciteCourseEvolinciteSyllabusId?: string | null;
};

export type UpdateEvolinciteCourseInput = {
  id: string;
  name?: string | null;
  description?: string | null;
  durationUnit?: string | null;
  duration?: number | null;
  objectives?: Array<string | null> | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  evolinciteCourseEvolinciteSyllabusId?: string | null;
};

export type DeleteEvolinciteCourseInput = {
  id: string;
};

export type CreateEvolinciteSyllabusInput = {
  id?: string | null;
  name?: string | null;
  description?: string | null;
  content?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  evolinciteSyllabusEvolinciteCompetenceId?: string | null;
};

export type ModelEvolinciteSyllabusConditionInput = {
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  content?: ModelStringInput | null;
  application?: ModelEvolinciteApplicationInput | null;
  state?: ModelEvolinciteStatesInput | null;
  and?: Array<ModelEvolinciteSyllabusConditionInput | null> | null;
  or?: Array<ModelEvolinciteSyllabusConditionInput | null> | null;
  not?: ModelEvolinciteSyllabusConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  evolinciteSyllabusEvolinciteCompetenceId?: ModelIDInput | null;
};

export type UpdateEvolinciteSyllabusInput = {
  id: string;
  name?: string | null;
  description?: string | null;
  content?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  evolinciteSyllabusEvolinciteCompetenceId?: string | null;
};

export type DeleteEvolinciteSyllabusInput = {
  id: string;
};

export type CreateEvolinciteUserAnswersInput = {
  id?: string | null;
  answers?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  evolinciteUserAnswersEvolinciteUserId?: string | null;
  evolinciteUserAnswersEvolinciteSyllabusId?: string | null;
};

export type ModelEvolinciteUserAnswersConditionInput = {
  answers?: ModelStringInput | null;
  application?: ModelEvolinciteApplicationInput | null;
  state?: ModelEvolinciteStatesInput | null;
  and?: Array<ModelEvolinciteUserAnswersConditionInput | null> | null;
  or?: Array<ModelEvolinciteUserAnswersConditionInput | null> | null;
  not?: ModelEvolinciteUserAnswersConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  evolinciteUserAnswersEvolinciteUserId?: ModelIDInput | null;
  evolinciteUserAnswersEvolinciteSyllabusId?: ModelIDInput | null;
};

export type EvolinciteUserAnswers = {
  __typename: 'EvolinciteUserAnswers';
  id: string;
  answers?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteUser?: EvolinciteUser | null;
  EvolinciteSyllabus?: EvolinciteSyllabus | null;
  createdAt: string;
  updatedAt: string;
  evolinciteUserAnswersEvolinciteUserId?: string | null;
  evolinciteUserAnswersEvolinciteSyllabusId?: string | null;
};

export type EvolinciteUser = {
  __typename: 'EvolinciteUser';
  id: string;
  name?: string | null;
  nit?: string | null;
  phone?: string | null;
  picture?: string | null;
  email?: string | null;
  sub?: string | null;
  meta?: string | null;
  cv?: string | null;
  contract?: string | null;
  memos?: Array<string | null> | null;
  personalMail?: string | null;
  personalPhone?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteUserEvolinciteCompanies?: ModelEvolinciteUserEvolinciteCompanyConnection | null;
  EvolinciteActivitiesOwner?: ModelEvolinciteActivityConnection | null;
  EvolinciteActivitiesParticipants?: ModelEvolinciteActivityEvolinciteUserConnection | null;
  EvolinciteRooms?: ModelEvolinciteRoomEvolinciteUserConnection | null;
  EvolinciteUserDepartments?: ModelEvolinciteUserDepartmentConnection | null;
  EvolinciteCrmNegotiationsOwner?: ModelEvolinciteCrmNegotiationConnection | null;
  EvolinciteCrmNegotiationsReferrer?: ModelEvolinciteCrmNegotiationConnection | null;
  EvolinciteCrmNegotiationsSeller?: ModelEvolinciteCrmNegotiationConnection | null;
  EvolincitePaymentsUserSeller?: ModelEvolinciteWalletPaymentConnection | null;
  EvolincitePaymentsUserReferrer?: ModelEvolinciteWalletPaymentConnection | null;
  EvolinciteNotifications?: ModelEvolinciteNotificationConnection | null;
  EvolinciteMessages?: ModelEvolinciteMessageConnection | null;
  EvolinciteCrmNegotiationLogs?: ModelEvolinciteCrmNegotiationLogConnection | null;
  EvolinciteComments?: ModelEvolinciteCommentConnection | null;
  EvolincitePermissions?: ModelEvolincitePermissionsConnection | null;
  EvolinciteUserSettings?: ModelEvolinciteUserSettingsConnection | null;
  EvolinciteCrmNegotiationsObserver?: ModelEvolinciteUserEvolinciteCrmNegotiationConnection | null;
  EvolinciteUserEvolinciteJobTitle?: ModelEvolinciteUserEvolinciteJobTitleConnection | null;
  EvolinciteWalletPaymentLogs?: ModelEvolinciteWalletPaymentLogConnection | null;
  EvolinciteExpenseLogs?: ModelEvolinciteExpenseLogConnection | null;
  EvolinciteExpenses?: ModelEvolinciteExpenseConnection | null;
  EvolinciteTicket?: ModelEvolinciteTicketConnection | null;
  EvolinciteTicketLogs?: ModelEvolinciteTicketLogConnection | null;
  EvolinciteFiles?: ModelEvolinciteFileConnection | null;
  EvolinciteFolders?: ModelEvolinciteFolderConnection | null;
  EvolinciteArticles?: ModelEvolinciteArticleConnection | null;
  EvolinciteArticleComments?: ModelEvolinciteArticleCommentConnection | null;
  EvolinciteFoldersOwner?: ModelEvolinciteFolderConnection | null;
  EvolinciteFormConfigurations?: ModelEvolinciteFormConfigurationConnection | null;
  EvolinciteFormAnswers?: ModelEvolinciteFormAnswerConnection | null;
  EvolinciteMails?: ModelEvolinciteMailConnection | null;
  EvolinciteEmployeeObservations?: ModelEvolinciteEmployeeObservationConnection | null;
  createdAt: string;
  updatedAt: string;
};

export type ModelEvolinciteUserEvolinciteCompanyConnection = {
  __typename: 'ModelEvolinciteUserEvolinciteCompanyConnection';
  items: Array<EvolinciteUserEvolinciteCompany | null>;
  nextToken?: string | null;
};

export type EvolinciteUserEvolinciteCompany = {
  __typename: 'EvolinciteUserEvolinciteCompany';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: EvolinciteUser | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  createdAt: string;
  updatedAt: string;
};

export type EvolinciteCompany = {
  __typename: 'EvolinciteCompany';
  id: string;
  name?: string | null;
  nit?: string | null;
  picture?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteUserEvolinciteCompanies?: ModelEvolinciteUserEvolinciteCompanyConnection | null;
  evolinciteSubscriptionID?: string | null;
  EvolinciteSubscription?: EvolinciteSubscription | null;
  EvolinciteWalletPayments?: ModelEvolinciteWalletPaymentConnection | null;
  EvolinciteCrmNegotiationFields?: ModelEvolinciteCrmNegotiationFieldConnection | null;
  EvolinciteCrmNegotiationSections?: ModelEvolinciteCrmNegotiationSectionConnection | null;
  EvolinciteCrmAutomations?: ModelEvolinciteCrmAutomationConnection | null;
  EvolinciteUserDepartments?: ModelEvolinciteUserDepartmentConnection | null;
  EvolinciteDepartments?: ModelEvolinciteDepartmentConnection | null;
  EvolinciteCustomers?: ModelEvolinciteCustomerConnection | null;
  EvolinciteCrmPipelines?: ModelEvolinciteCrmPipelineConnection | null;
  EvolinciteCrmStates?: ModelEvolinciteCrmStateConnection | null;
  EvolinciteCrmNegotiations?: ModelEvolinciteCrmNegotiationConnection | null;
  EvolinciteJobTitles?: ModelEvolinciteJobTitleConnection | null;
  EvolinciteNotifications?: ModelEvolinciteNotificationConnection | null;
  EvolinciteEmailTemplates?: ModelEvolinciteEmailTemplateConnection | null;
  EvolinciteEmails?: ModelEvolinciteEmailConnection | null;
  EvolinciteMessages?: ModelEvolinciteMessageConnection | null;
  EvolinciteCrmNegotiationLogs?: ModelEvolinciteCrmNegotiationLogConnection | null;
  EvolinciteActivities?: ModelEvolinciteActivityConnection | null;
  EvolincitePermissions?: ModelEvolincitePermissionsConnection | null;
  EvolinciteRoles?: ModelEvolinciteRolConnection | null;
  EvolinciteUserSettings?: ModelEvolinciteUserSettingsConnection | null;
  EvolinciteRooms?: ModelEvolinciteRoomConnection | null;
  EvolinciteUserEvolinciteJobTitle?: ModelEvolinciteUserEvolinciteJobTitleConnection | null;
  EvolinciteExpenseTypes?: ModelEvolinciteExpenseTypeConnection | null;
  EvolinciteExpenses?: ModelEvolinciteExpenseConnection | null;
  EvolinciteProcessTypes?: ModelEvolinciteProcessTypeConnection | null;
  EvolinciteGoal?: ModelEvolinciteGoalConnection | null;
  EvolinciteWalletPaymentLogs?: ModelEvolinciteWalletPaymentLogConnection | null;
  EvolinciteExpenseLogs?: ModelEvolinciteExpenseLogConnection | null;
  EvolinciteTicketOwner?: ModelEvolinciteTicketConnection | null;
  EvolinciteTicketOrigin?: ModelEvolinciteTicketConnection | null;
  EvolinciteTicketLogs?: ModelEvolinciteTicketLogConnection | null;
  EvolinciteFiles?: ModelEvolinciteFileConnection | null;
  EvolinciteFolders?: ModelEvolinciteFolderConnection | null;
  EvolinciteArticles?: ModelEvolinciteArticleConnection | null;
  EvolinciteFormConfigurations?: ModelEvolinciteFormConfigurationConnection | null;
  EvolincitePaymentAutomations?: ModelEvolincitePaymentAutomationConnection | null;
  EvolinciteMails?: ModelEvolinciteMailConnection | null;
  EvolinciteMailTemplates?: ModelEvolinciteMailTemplateConnection | null;
  EvolinciteCompanySubscriptions?: ModelEvolinciteCompanySubscriptionConnection | null;
  EvolinciteFormAnswers?: ModelEvolinciteFormAnswerConnection | null;
  EvolinciteEmployeeObservations?: ModelEvolinciteEmployeeObservationConnection | null;
  createdAt: string;
  updatedAt: string;
};

export type EvolinciteSubscription = {
  __typename: 'EvolinciteSubscription';
  id: string;
  name?: string | null;
  price?: number | null;
  dateInitial?: string | null;
  dateFinal?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteCompanies?: ModelEvolinciteCompanyConnection | null;
  createdAt: string;
  updatedAt: string;
};

export type ModelEvolinciteCompanyConnection = {
  __typename: 'ModelEvolinciteCompanyConnection';
  items: Array<EvolinciteCompany | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteWalletPaymentConnection = {
  __typename: 'ModelEvolinciteWalletPaymentConnection';
  items: Array<EvolinciteWalletPayment | null>;
  nextToken?: string | null;
};

export type EvolinciteWalletPayment = {
  __typename: 'EvolinciteWalletPayment';
  id: string;
  amount?: number | null;
  scheduledDate?: string | null;
  datePayment?: string | null;
  paymentStatus?: EvolinciteWalletPaymentStatus | null;
  prePayment?: string | null;
  postPayment?: string | null;
  observations?: string | null;
  voucher?: Array<string | null> | null;
  transactionType?: EvolinciteTransactionType | null;
  reference?: string | null;
  amountInterest?: number | null;
  amountCollection?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  evolinciteUserReferrerID?: string | null;
  EvolinciteUserReferrer?: EvolinciteUser | null;
  evolinciteUserSellerID?: string | null;
  EvolinciteUserSeller?: EvolinciteUser | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: EvolinciteCrmNegotiation | null;
  evolinciteCustomerID?: string | null;
  EvolinciteCustomer?: EvolinciteCustomer | null;
  EvolinciteWalletPaymentLogs?: ModelEvolinciteWalletPaymentLogConnection | null;
  evolinciteUserResponsibleID?: string | null;
  EvolinciteUserResponsible?: EvolinciteUser | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export enum EvolinciteWalletPaymentStatus {
  PAID = 'PAID',
  PENDING = 'PENDING',
  VALIDATE = 'VALIDATE',
  REVERTED = 'REVERTED',
}

export enum EvolinciteTransactionType {
  CREDIT_CARD = 'CREDIT_CARD',
  WIRE_TRANSFER = 'WIRE_TRANSFER',
  CASH = 'CASH',
  WEB_PAY = 'WEB_PAY',
  BANK_DEPOSIT = 'BANK_DEPOSIT',
  CORRESPONDENT_DEPOSIT = 'CORRESPONDENT_DEPOSIT',
}

export type EvolinciteCrmNegotiation = {
  __typename: 'EvolinciteCrmNegotiation';
  id: string;
  name?: string | null;
  value?: number | null;
  due?: number | null;
  parent?: string | null;
  date?: string | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  frozen?: boolean | null;
  valueInterest?: number | null;
  valueCollection?: number | null;
  observers?: Array<string | null> | null;
  exitDate?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  evolinciteUserSellerID?: string | null;
  EvolinciteUserSeller?: EvolinciteUser | null;
  evolinciteUserReferrerID?: string | null;
  EvolinciteUserReferrer?: EvolinciteUser | null;
  evolinciteUserOwnerID?: string | null;
  EvolinciteUserOwner?: EvolinciteUser | null;
  EvolinciteCrmNegotiationFieldValues?: ModelEvolinciteCrmNegotiationFieldValueConnection | null;
  evolinciteCrmStateID?: string | null;
  EvolinciteCrmState?: EvolinciteCrmState | null;
  EvolinciteWalletPayments?: ModelEvolinciteWalletPaymentConnection | null;
  evolinciteCustomerID?: string | null;
  EvolinciteCustomer?: EvolinciteCustomer | null;
  EvolinciteCrmNegotiationLogs?: ModelEvolinciteCrmNegotiationLogConnection | null;
  EvolinciteComments?: ModelEvolinciteCommentConnection | null;
  EvolinciteActivities?: ModelEvolinciteActivityConnection | null;
  EvolinciteUsersObserver?: ModelEvolinciteUserEvolinciteCrmNegotiationConnection | null;
  EvolinciteExpenses?: ModelEvolinciteExpenseConnection | null;
  evolinciteProcessTypeID?: string | null;
  EvolinciteProcessType?: EvolinciteProcessType | null;
  initialGoalID?: string | null;
  InitialGoal?: EvolinciteGoal | null;
  finalGoalID?: string | null;
  FinalGoal?: EvolinciteGoal | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteCrmNegotiationFieldValueConnection = {
  __typename: 'ModelEvolinciteCrmNegotiationFieldValueConnection';
  items: Array<EvolinciteCrmNegotiationFieldValue | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmNegotiationFieldValue = {
  __typename: 'EvolinciteCrmNegotiationFieldValue';
  id: string;
  value?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCrmNegotiationFieldID?: string | null;
  EvolinciteCrmNegotiationField?: EvolinciteCrmNegotiationField | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: EvolinciteCrmNegotiation | null;
  createdAt: string;
  updatedAt: string;
};

export type EvolinciteCrmNegotiationField = {
  __typename: 'EvolinciteCrmNegotiationField';
  id: string;
  field?: string | null;
  type?: EvolinciteField | null;
  required?: boolean | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolinciteCrmNegotiationFieldValues?: ModelEvolinciteCrmNegotiationFieldValueConnection | null;
  evolinciteCrmNegotiationSectionID?: string | null;
  EvolinciteCrmNegotiationSection?: EvolinciteCrmNegotiationSection | null;
  createdAt: string;
  updatedAt: string;
};

export enum EvolinciteField {
  STRING = 'STRING',
  NUMBER = 'NUMBER',
  SELECT_LIST = 'SELECT_LIST',
  DOCUMENT = 'DOCUMENT',
  DATE = 'DATE',
}

export type EvolinciteCrmNegotiationSection = {
  __typename: 'EvolinciteCrmNegotiationSection';
  id: string;
  name?: string | null;
  order?: number | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolinciteCrmNegotiationFields?: ModelEvolinciteCrmNegotiationFieldConnection | null;
  createdAt: string;
  updatedAt: string;
};

export type ModelEvolinciteCrmNegotiationFieldConnection = {
  __typename: 'ModelEvolinciteCrmNegotiationFieldConnection';
  items: Array<EvolinciteCrmNegotiationField | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmState = {
  __typename: 'EvolinciteCrmState';
  id: string;
  name?: string | null;
  description?: string | null;
  publicDescription?: string | null;
  color?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolinciteCrmNegotiations?: ModelEvolinciteCrmNegotiationConnection | null;
  EvolinciteCrmAutomations?: ModelEvolinciteCrmAutomationConnection | null;
  evolinciteCrmPipelineID?: string | null;
  EvolinciteCrmPipeline?: EvolinciteCrmPipeline | null;
  createdAt: string;
  updatedAt: string;
};

export type ModelEvolinciteCrmNegotiationConnection = {
  __typename: 'ModelEvolinciteCrmNegotiationConnection';
  items: Array<EvolinciteCrmNegotiation | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteCrmAutomationConnection = {
  __typename: 'ModelEvolinciteCrmAutomationConnection';
  items: Array<EvolinciteCrmAutomation | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmAutomation = {
  __typename: 'EvolinciteCrmAutomation';
  id: string;
  name?: string | null;
  rule?: EvolinciteRule | null;
  setting?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  evolinciteCrmStateID?: string | null;
  EvolinciteCrmState?: EvolinciteCrmState | null;
  createdAt: string;
  updatedAt: string;
};

export enum EvolinciteRule {
  MOVE = 'MOVE',
  COPY = 'COPY',
  CHANGE_ATTRIBUTE = 'CHANGE_ATTRIBUTE',
  CREATE_PAYMENT = 'CREATE_PAYMENT',
  CREATE_EXPENSE = 'CREATE_EXPENSE',
  VALIDATE_FIELD = 'VALIDATE_FIELD',
  FROZEN_NEGOTIATION = 'FROZEN_NEGOTIATION',
  ASSIGN_GOAL_INITIAL = 'ASSIGN_GOAL_INITIAL',
  ASSIGN_GOAL_FINAL = 'ASSIGN_GOAL_FINAL',
  CREATE_NEGOTIATION = 'CREATE_NEGOTIATION',
  VALIDATE_TOTAL_TASKS = 'VALIDATE_TOTAL_TASKS',
  VALIDATE_TASK_STATE = 'VALIDATE_TASK_STATE',
  VALIDATE_TASKS_SPECIFIC_STATE = 'VALIDATE_TASKS_SPECIFIC_STATE',
  SEND_PRE_MADE_EMAIL = 'SEND_PRE_MADE_EMAIL',
  SEND_CREATE_EMAIL = 'SEND_CREATE_EMAIL',
  GENERATE_DOCUMENT = 'GENERATE_DOCUMENT',
  CONTROL_CRM_STATES = 'CONTROL_CRM_STATES',
  CONTROL_CRM_STATES_MOVE = 'CONTROL_CRM_STATES_MOVE',
}

export type EvolinciteCrmPipeline = {
  __typename: 'EvolinciteCrmPipeline';
  id: string;
  name?: string | null;
  description?: string | null;
  publicDescription?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolinciteCrmStates?: ModelEvolinciteCrmStateConnection | null;
  createdAt: string;
  updatedAt: string;
};

export type ModelEvolinciteCrmStateConnection = {
  __typename: 'ModelEvolinciteCrmStateConnection';
  items: Array<EvolinciteCrmState | null>;
  nextToken?: string | null;
};

export type EvolinciteCustomer = {
  __typename: 'EvolinciteCustomer';
  id: string;
  name?: string | null;
  lastName?: string | null;
  documentType?: EvolinciteDocumentType | null;
  documentNumber?: string | null;
  phone?: string | null;
  optionalPhone?: string | null;
  email?: string | null;
  picture?: string | null;
  birthDate?: string | null;
  municipality?: EvolinciteMunicipality | null;
  documents?: Array<string | null> | null;
  address?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolinciteCrmNegotiations?: ModelEvolinciteCrmNegotiationConnection | null;
  EvolinciteWalletPayments?: ModelEvolinciteWalletPaymentConnection | null;
  createdAt: string;
  updatedAt: string;
};

export enum EvolinciteDocumentType {
  CC = 'CC',
  NIT = 'NIT',
}

export enum EvolinciteMunicipality {
  CUCUTA = 'CUCUTA',
  BUCARAMANGA = 'BUCARAMANGA',
  LETICIA = 'LETICIA',
  MEDELLIN = 'MEDELLIN',
  ARAUCA = 'ARAUCA',
  BARRANQUILLA = 'BARRANQUILLA',
  BOGOTA = 'BOGOTA',
  CARTAGENA = 'CARTAGENA',
  TUNJA = 'TUNJA',
  MANIZALES = 'MANIZALES',
  FLORENCIA = 'FLORENCIA',
  YOPAL = 'YOPAL',
  POPAYAN = 'POPAYAN',
  VALLEDUPAR = 'VALLEDUPAR',
  QUIBDO = 'QUIBDO',
  MONTERIA = 'MONTERIA',
  INIRIDA = 'INIRIDA',
  SAN_JOSE_DEL_GUAVIARE = 'SAN_JOSE_DEL_GUAVIARE',
  NEIVA = 'NEIVA',
  RIOACHA = 'RIOACHA',
  SANTA_MARTA = 'SANTA_MARTA',
  VILLAVICENCIO = 'VILLAVICENCIO',
  PASTO = 'PASTO',
  MOCOA = 'MOCOA',
  ARMENIA = 'ARMENIA',
  PEREIRA = 'PEREIRA',
  SAN_ANDRES = 'SAN_ANDRES',
  SINCELEJO = 'SINCELEJO',
  IBAGUE = 'IBAGUE',
  CALI = 'CALI',
  MITU = 'MITU',
  PUERTO_CARRENO = 'PUERTO_CARRENO',
}

export type ModelEvolinciteCrmNegotiationLogConnection = {
  __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
  items: Array<EvolinciteCrmNegotiationLog | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmNegotiationLog = {
  __typename: 'EvolinciteCrmNegotiationLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolinciteUser?: EvolinciteUser | null;
  EvolinciteCrmNegotiation?: EvolinciteCrmNegotiation | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteCommentConnection = {
  __typename: 'ModelEvolinciteCommentConnection';
  items: Array<EvolinciteComment | null>;
  nextToken?: string | null;
};

export type EvolinciteComment = {
  __typename: 'EvolinciteComment';
  id: string;
  files?: Array<string | null> | null;
  content?: string | null;
  pinned?: boolean | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: EvolinciteCrmNegotiation | null;
  EvolinciteUser?: EvolinciteUser | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteActivityConnection = {
  __typename: 'ModelEvolinciteActivityConnection';
  items: Array<EvolinciteActivity | null>;
  nextToken?: string | null;
};

export type EvolinciteActivity = {
  __typename: 'EvolinciteActivity';
  id: string;
  name?: string | null;
  description?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  color?: string | null;
  type?: EvolinciteActivityTypes | null;
  priority?: number | null;
  meta?: string | null;
  taskState?: EvolinciteTaskStates | null;
  documents?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUserOwner?: EvolinciteUser | null;
  Participants?: ModelEvolinciteActivityEvolinciteUserConnection | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolinciteCrmNegotiation?: EvolinciteCrmNegotiation | null;
  createdAt: string;
  updatedAt: string;
};

export enum EvolinciteActivityTypes {
  TASK = 'TASK',
  MEETING = 'MEETING',
}

export enum EvolinciteTaskStates {
  PENDING = 'PENDING',
  IN_PROGRESS = 'IN_PROGRESS',
  REVIEW = 'REVIEW',
  COMPLETE = 'COMPLETE',
}

export type ModelEvolinciteActivityEvolinciteUserConnection = {
  __typename: 'ModelEvolinciteActivityEvolinciteUserConnection';
  items: Array<EvolinciteActivityEvolinciteUser | null>;
  nextToken?: string | null;
};

export type EvolinciteActivityEvolinciteUser = {
  __typename: 'EvolinciteActivityEvolinciteUser';
  id: string;
  evolinciteActivityId: string;
  evolinciteUserId: string;
  evolinciteActivity: EvolinciteActivity;
  evolinciteUser: EvolinciteUser;
  createdAt: string;
  updatedAt: string;
};

export type ModelEvolinciteUserEvolinciteCrmNegotiationConnection = {
  __typename: 'ModelEvolinciteUserEvolinciteCrmNegotiationConnection';
  items: Array<EvolinciteUserEvolinciteCrmNegotiation | null>;
  nextToken?: string | null;
};

export type EvolinciteUserEvolinciteCrmNegotiation = {
  __typename: 'EvolinciteUserEvolinciteCrmNegotiation';
  id: string;
  evolinciteCrmNegotiationId: string;
  evolinciteUserId: string;
  evolinciteCrmNegotiation: EvolinciteCrmNegotiation;
  evolinciteUser: EvolinciteUser;
  createdAt: string;
  updatedAt: string;
};

export type ModelEvolinciteExpenseConnection = {
  __typename: 'ModelEvolinciteExpenseConnection';
  items: Array<EvolinciteExpense | null>;
  nextToken?: string | null;
};

export type EvolinciteExpense = {
  __typename: 'EvolinciteExpense';
  id: string;
  amount?: number | null;
  process?: string | null;
  expenseState?: EvolinciteExpenseStates | null;
  expenseDate?: string | null;
  observations?: string | null;
  voucher?: Array<string | null> | null;
  transactionType?: EvolinciteTransactionType | null;
  reference?: string | null;
  state?: EvolinciteStates | null;
  evolinciteExpenseTypeID?: string | null;
  EvolinciteExpenseType?: EvolinciteExpenseType | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: EvolinciteCrmNegotiation | null;
  evolinciteCompanyID?: string | null;
  EvolinciteExpenseLogs?: ModelEvolinciteExpenseLogConnection | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: EvolinciteUser | null;
  evolinciteUserResponsibleID?: string | null;
  EvolinciteUserResponsible?: EvolinciteUser | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export enum EvolinciteExpenseStates {
  PENDING = 'PENDING',
  PAID = 'PAID',
  VALIDATE = 'VALIDATE',
}

export type EvolinciteExpenseType = {
  __typename: 'EvolinciteExpenseType';
  id: string;
  name?: string | null;
  type?: EvolinciteField | null;
  setting?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteExpenses?: ModelEvolinciteExpenseConnection | null;
  evolinciteCompanyID?: string | null;
  createdAt: string;
  updatedAt: string;
};

export type ModelEvolinciteExpenseLogConnection = {
  __typename: 'ModelEvolinciteExpenseLogConnection';
  items: Array<EvolinciteExpenseLog | null>;
  nextToken?: string | null;
};

export type EvolinciteExpenseLog = {
  __typename: 'EvolinciteExpenseLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteExpenseID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolinciteUser?: EvolinciteUser | null;
  EvolinciteExpense?: EvolinciteExpense | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type EvolinciteProcessType = {
  __typename: 'EvolinciteProcessType';
  id: string;
  name?: string | null;
  order?: number | null;
  sellerCommission?: number | null;
  referrerCommission?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolinciteCrmNegotiations?: ModelEvolinciteCrmNegotiationConnection | null;
  createdAt: string;
  updatedAt: string;
};

export type EvolinciteGoal = {
  __typename: 'EvolinciteGoal';
  id: string;
  name?: string | null;
  description?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolinciteCrmNegotiationsInitial?: ModelEvolinciteCrmNegotiationConnection | null;
  EvolinciteCrmNegotiationsFinal?: ModelEvolinciteCrmNegotiationConnection | null;
  createdAt: string;
  updatedAt: string;
};

export type ModelEvolinciteWalletPaymentLogConnection = {
  __typename: 'ModelEvolinciteWalletPaymentLogConnection';
  items: Array<EvolinciteWalletPaymentLog | null>;
  nextToken?: string | null;
};

export type EvolinciteWalletPaymentLog = {
  __typename: 'EvolinciteWalletPaymentLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteWalletPaymentID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolinciteUser?: EvolinciteUser | null;
  EvolinciteWalletPayment?: EvolinciteWalletPayment | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteCrmNegotiationSectionConnection = {
  __typename: 'ModelEvolinciteCrmNegotiationSectionConnection';
  items: Array<EvolinciteCrmNegotiationSection | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteUserDepartmentConnection = {
  __typename: 'ModelEvolinciteUserDepartmentConnection';
  items: Array<EvolinciteUserDepartment | null>;
  nextToken?: string | null;
};

export type EvolinciteUserDepartment = {
  __typename: 'EvolinciteUserDepartment';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: EvolinciteUser | null;
  evolinciteDepartmentID?: string | null;
  EvolinciteDepartment?: EvolinciteDepartment | null;
  createdAt: string;
  updatedAt: string;
};

export type EvolinciteDepartment = {
  __typename: 'EvolinciteDepartment';
  id: string;
  name?: string | null;
  parent?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolincitePermissions?: ModelEvolincitePermissionsConnection | null;
  EvolinciteUserDepartments?: ModelEvolinciteUserDepartmentConnection | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolincitePermissionsConnection = {
  __typename: 'ModelEvolincitePermissionsConnection';
  items: Array<EvolincitePermissions | null>;
  nextToken?: string | null;
};

export type EvolincitePermissions = {
  __typename: 'EvolincitePermissions';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  evolinciteDepartmentID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolinciteUser?: EvolinciteUser | null;
  EvolinciteDepartment?: EvolinciteDepartment | null;
  evolinciteRolID?: string | null;
  EvolinciteRol?: EvolinciteRol | null;
  createdAt: string;
  updatedAt: string;
};

export type EvolinciteRol = {
  __typename: 'EvolinciteRol';
  id: string;
  name?: string | null;
  permissions?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolincitePermissions?: ModelEvolincitePermissionsConnection | null;
  createdAt: string;
  updatedAt: string;
};

export type ModelEvolinciteDepartmentConnection = {
  __typename: 'ModelEvolinciteDepartmentConnection';
  items: Array<EvolinciteDepartment | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteCustomerConnection = {
  __typename: 'ModelEvolinciteCustomerConnection';
  items: Array<EvolinciteCustomer | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteCrmPipelineConnection = {
  __typename: 'ModelEvolinciteCrmPipelineConnection';
  items: Array<EvolinciteCrmPipeline | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteJobTitleConnection = {
  __typename: 'ModelEvolinciteJobTitleConnection';
  items: Array<EvolinciteJobTitle | null>;
  nextToken?: string | null;
};

export type EvolinciteJobTitle = {
  __typename: 'EvolinciteJobTitle';
  id: string;
  name?: string | null;
  salary?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolinciteUserEvolinciteJobTitle?: ModelEvolinciteUserEvolinciteJobTitleConnection | null;
  createdAt: string;
  updatedAt: string;
};

export type ModelEvolinciteUserEvolinciteJobTitleConnection = {
  __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
  items: Array<EvolinciteUserEvolinciteJobTitle | null>;
  nextToken?: string | null;
};

export type EvolinciteUserEvolinciteJobTitle = {
  __typename: 'EvolinciteUserEvolinciteJobTitle';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteJobTitleID?: string | null;
  EvolinciteJobTitle?: EvolinciteJobTitle | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: EvolinciteUser | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  createdAt: string;
  updatedAt: string;
};

export type ModelEvolinciteNotificationConnection = {
  __typename: 'ModelEvolinciteNotificationConnection';
  items: Array<EvolinciteNotification | null>;
  nextToken?: string | null;
};

export type EvolinciteNotification = {
  __typename: 'EvolinciteNotification';
  id: string;
  content?: string | null;
  title?: string | null;
  priority?: EvolinciteNotificationPriority | null;
  type?: EvolunciteNotificationType | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolinciteUser?: EvolinciteUser | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export enum EvolinciteNotificationPriority {
  HIGH = 'HIGH',
  MEDIUM = 'MEDIUM',
  LOW = 'LOW',
}

export enum EvolunciteNotificationType {
  GENERAL = 'GENERAL',
  NEGOTIATION = 'NEGOTIATION',
  CHAT = 'CHAT',
}

export type ModelEvolinciteEmailTemplateConnection = {
  __typename: 'ModelEvolinciteEmailTemplateConnection';
  items: Array<EvolinciteEmailTemplate | null>;
  nextToken?: string | null;
};

export type EvolinciteEmailTemplate = {
  __typename: 'EvolinciteEmailTemplate';
  id: string;
  content?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  createdAt: string;
  updatedAt: string;
};

export type ModelEvolinciteEmailConnection = {
  __typename: 'ModelEvolinciteEmailConnection';
  items: Array<EvolinciteEmail | null>;
  nextToken?: string | null;
};

export type EvolinciteEmail = {
  __typename: 'EvolinciteEmail';
  id: string;
  from?: string | null;
  to?: string | null;
  content?: string | null;
  subject?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  createdAt: string;
  updatedAt: string;
};

export type ModelEvolinciteMessageConnection = {
  __typename: 'ModelEvolinciteMessageConnection';
  items: Array<EvolinciteMessage | null>;
  nextToken?: string | null;
};

export type EvolinciteMessage = {
  __typename: 'EvolinciteMessage';
  id: string;
  content?: string | null;
  type?: EvolinciteMessageType | null;
  state?: EvolinciteStates | null;
  createdAt?: string | null;
  updatedAt?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: EvolinciteUser | null;
  evolinciteRoomID?: string | null;
  EvolinciteRoom?: EvolinciteRoom | null;
};

export enum EvolinciteMessageType {
  TEXT = 'TEXT',
  IMG = 'IMG',
  FILE = 'FILE',
  VIDEO = 'VIDEO',
}

export type EvolinciteRoom = {
  __typename: 'EvolinciteRoom';
  id: string;
  Key?: string | null;
  name?: string | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  EvolinciteUsers?: ModelEvolinciteRoomEvolinciteUserConnection | null;
  EvolinciteMessages?: ModelEvolinciteMessageConnection | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  createdAt: string;
  updatedAt: string;
};

export type ModelEvolinciteRoomEvolinciteUserConnection = {
  __typename: 'ModelEvolinciteRoomEvolinciteUserConnection';
  items: Array<EvolinciteRoomEvolinciteUser | null>;
  nextToken?: string | null;
};

export type EvolinciteRoomEvolinciteUser = {
  __typename: 'EvolinciteRoomEvolinciteUser';
  id: string;
  evolinciteRoomId: string;
  evolinciteUserId: string;
  evolinciteRoom: EvolinciteRoom;
  evolinciteUser: EvolinciteUser;
  createdAt: string;
  updatedAt: string;
};

export type ModelEvolinciteRolConnection = {
  __typename: 'ModelEvolinciteRolConnection';
  items: Array<EvolinciteRol | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteUserSettingsConnection = {
  __typename: 'ModelEvolinciteUserSettingsConnection';
  items: Array<EvolinciteUserSettings | null>;
  nextToken?: string | null;
};

export type EvolinciteUserSettings = {
  __typename: 'EvolinciteUserSettings';
  id: string;
  settings?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteUser?: EvolinciteUser | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  createdAt: string;
  updatedAt: string;
};

export type ModelEvolinciteRoomConnection = {
  __typename: 'ModelEvolinciteRoomConnection';
  items: Array<EvolinciteRoom | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteExpenseTypeConnection = {
  __typename: 'ModelEvolinciteExpenseTypeConnection';
  items: Array<EvolinciteExpenseType | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteProcessTypeConnection = {
  __typename: 'ModelEvolinciteProcessTypeConnection';
  items: Array<EvolinciteProcessType | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteGoalConnection = {
  __typename: 'ModelEvolinciteGoalConnection';
  items: Array<EvolinciteGoal | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteTicketConnection = {
  __typename: 'ModelEvolinciteTicketConnection';
  items: Array<EvolinciteTicket | null>;
  nextToken?: string | null;
};

export type EvolinciteTicket = {
  __typename: 'EvolinciteTicket';
  id: string;
  name?: string | null;
  description?: string | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  ticketState?: EvolinciteTicketState | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyOwnerID?: string | null;
  evolinciteCompanyOriginID?: string | null;
  EvolinciteCompanyOwner?: EvolinciteCompany | null;
  EvolinciteCompanyOrigin?: EvolinciteCompany | null;
  EvolinciteUser?: EvolinciteUser | null;
  EvolinciteTicketLogs?: ModelEvolinciteTicketLogConnection | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export enum EvolinciteTicketState {
  OPEN = 'OPEN',
  SOLVING = 'SOLVING',
  CLOSED = 'CLOSED',
}

export type ModelEvolinciteTicketLogConnection = {
  __typename: 'ModelEvolinciteTicketLogConnection';
  items: Array<EvolinciteTicketLog | null>;
  nextToken?: string | null;
};

export type EvolinciteTicketLog = {
  __typename: 'EvolinciteTicketLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteTicketID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolinciteUser?: EvolinciteUser | null;
  EvolinciteTicket?: EvolinciteTicket | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteFileConnection = {
  __typename: 'ModelEvolinciteFileConnection';
  items: Array<EvolinciteFile | null>;
  nextToken?: string | null;
};

export type EvolinciteFile = {
  __typename: 'EvolinciteFile';
  id: string;
  name?: string | null;
  size?: number | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteFolderID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolinciteUser?: EvolinciteUser | null;
  EvolinciteFolder?: EvolinciteFolder | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type EvolinciteFolder = {
  __typename: 'EvolinciteFolder';
  id: string;
  parent?: string | null;
  name?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteUserOwnerID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolinciteUser?: EvolinciteUser | null;
  EvolinciteUserOwner?: EvolinciteUser | null;
  EvolinciteFiles?: ModelEvolinciteFileConnection | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteFolderConnection = {
  __typename: 'ModelEvolinciteFolderConnection';
  items: Array<EvolinciteFolder | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteArticleConnection = {
  __typename: 'ModelEvolinciteArticleConnection';
  items: Array<EvolinciteArticle | null>;
  nextToken?: string | null;
};

export type EvolinciteArticle = {
  __typename: 'EvolinciteArticle';
  id: string;
  front?: string | null;
  cover?: Array<string | null> | null;
  title?: string | null;
  content?: string | null;
  articleState?: EvolinciteArticleStates | null;
  visibility?: Array<string | null> | null;
  publicationDate?: string | null;
  meta?: string | null;
  files?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolinciteUser?: EvolinciteUser | null;
  EvolinciteArticleComments?: ModelEvolinciteArticleCommentConnection | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export enum EvolinciteArticleStates {
  INTERNAL = 'INTERNAL',
  EXTERNAL = 'EXTERNAL',
}

export type ModelEvolinciteArticleCommentConnection = {
  __typename: 'ModelEvolinciteArticleCommentConnection';
  items: Array<EvolinciteArticleComment | null>;
  nextToken?: string | null;
};

export type EvolinciteArticleComment = {
  __typename: 'EvolinciteArticleComment';
  id: string;
  content?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: EvolinciteUser | null;
  evolinciteArticleID?: string | null;
  EvolinciteArticle?: EvolinciteArticle | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteFormConfigurationConnection = {
  __typename: 'ModelEvolinciteFormConfigurationConnection';
  items: Array<EvolinciteFormConfiguration | null>;
  nextToken?: string | null;
};

export type EvolinciteFormConfiguration = {
  __typename: 'EvolinciteFormConfiguration';
  id: string;
  key?: string | null;
  name?: string | null;
  config?: string | null;
  meta?: string | null;
  title?: string | null;
  description?: string | null;
  observations?: string | null;
  front?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  EvolinciteUser?: EvolinciteUser | null;
  EvolinciteFormAnswers?: ModelEvolinciteFormAnswerConnection | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteFormAnswerConnection = {
  __typename: 'ModelEvolinciteFormAnswerConnection';
  items: Array<EvolinciteFormAnswer | null>;
  nextToken?: string | null;
};

export type EvolinciteFormAnswer = {
  __typename: 'EvolinciteFormAnswer';
  id: string;
  meta?: string | null;
  answerState?: EvolinciteSurveyAnswerState | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteFormConfigurationID?: string | null;
  EvolinciteFormConfiguration?: EvolinciteFormConfiguration | null;
  EvolinciteUser?: EvolinciteUser | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export enum EvolinciteSurveyAnswerState {
  PROCESS = 'PROCESS',
  NO_PROCESS = 'NO_PROCESS',
  NO_CRM = 'NO_CRM',
}

export type ModelEvolincitePaymentAutomationConnection = {
  __typename: 'ModelEvolincitePaymentAutomationConnection';
  items: Array<EvolincitePaymentAutomation | null>;
  nextToken?: string | null;
};

export type EvolincitePaymentAutomation = {
  __typename: 'EvolincitePaymentAutomation';
  id: string;
  name?: string | null;
  setting?: string | null;
  order?: number | null;
  repeat?: boolean | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  createdAt: string;
  updatedAt: string;
};

export type ModelEvolinciteMailConnection = {
  __typename: 'ModelEvolinciteMailConnection';
  items: Array<EvolinciteMail | null>;
  nextToken?: string | null;
};

export type EvolinciteMail = {
  __typename: 'EvolinciteMail';
  id: string;
  destinations?: Array<string | null> | null;
  subject?: string | null;
  content?: string | null;
  submissionStatus?: EvolinciteMailStates | null;
  setting?: string | null;
  response?: string | null;
  files?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: EvolinciteUser | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export enum EvolinciteMailStates {
  PENDING = 'PENDING',
  SENT = 'SENT',
  REJECTED = 'REJECTED',
}

export type ModelEvolinciteMailTemplateConnection = {
  __typename: 'ModelEvolinciteMailTemplateConnection';
  items: Array<EvolinciteMailTemplate | null>;
  nextToken?: string | null;
};

export type EvolinciteMailTemplate = {
  __typename: 'EvolinciteMailTemplate';
  id: string;
  destinations?: Array<string | null> | null;
  subject?: string | null;
  content?: string | null;
  files?: Array<string | null> | null;
  transmitter?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  createdAt: string;
  updatedAt: string;
};

export type ModelEvolinciteCompanySubscriptionConnection = {
  __typename: 'ModelEvolinciteCompanySubscriptionConnection';
  items: Array<EvolinciteCompanySubscription | null>;
  nextToken?: string | null;
};

export type EvolinciteCompanySubscription = {
  __typename: 'EvolinciteCompanySubscription';
  id: string;
  name?: string | null;
  price?: number | null;
  dateInitial?: string | null;
  dateFinal?: string | null;
  activatorUser?: string | null;
  state?: EvolinciteStates | null;
  evolincitePackageID?: string | null;
  EvolincitePackage?: EvolincitePackage | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  createdAt: string;
  updatedAt: string;
};

export type EvolincitePackage = {
  __typename: 'EvolincitePackage';
  id: string;
  name?: string | null;
  description?: string | null;
  goal?: string | null;
  duration?: number | null;
  state?: EvolinciteStates | null;
  EvolinciteFunctionalities?: ModelEvolinciteFunctionalityConnection | null;
  EvolinciteCompanySubscriptions?: ModelEvolinciteCompanySubscriptionConnection | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteFunctionalityConnection = {
  __typename: 'ModelEvolinciteFunctionalityConnection';
  items: Array<EvolinciteFunctionality | null>;
  nextToken?: string | null;
};

export type EvolinciteFunctionality = {
  __typename: 'EvolinciteFunctionality';
  id: string;
  name?: string | null;
  functionalities?: Array<EvolinciteFunctionalities | null> | null;
  state?: EvolinciteStates | null;
  evolincitePackageID?: string | null;
  EvolincitePackage?: EvolincitePackage | null;
  createdAt: string;
  updatedAt: string;
};

export enum EvolinciteFunctionalities {
  WALLET_CORE_ROUTE = 'WALLET_CORE_ROUTE',
  WALLET_PAYMENT_ROUTE = 'WALLET_PAYMENT_ROUTE',
  WALLET_PAYMENT_LOAD_ALL = 'WALLET_PAYMENT_LOAD_ALL',
  WALLET_PAYMENT_CREATE = 'WALLET_PAYMENT_CREATE',
  WALLET_PAYMENT_EDIT = 'WALLET_PAYMENT_EDIT',
  WALLET_PAYMENT_DELETE = 'WALLET_PAYMENT_DELETE',
  WALLET_PAYMENT_PROCESS = 'WALLET_PAYMENT_PROCESS',
  WALLET_PAYMENT_REVERT = 'WALLET_PAYMENT_REVERT',
  WALLET_PAYMENT_UPLOAD_FILES = 'WALLET_PAYMENT_UPLOAD_FILES',
  WALLET_PAYMENT_EXPORT_FILES = 'WALLET_PAYMENT_EXPORT_FILES',
  WALLET_PAYMENT_LOAD_PERSONAL = 'WALLET_PAYMENT_LOAD_PERSONAL',
  WALLET_EXPENSE_ROUTE = 'WALLET_EXPENSE_ROUTE',
  WALLET_EXPENSE_LOAD_ALL = 'WALLET_EXPENSE_LOAD_ALL',
  WALLET_EXPENSE_CREATE = 'WALLET_EXPENSE_CREATE',
  WALLET_EXPENSE_EDIT = 'WALLET_EXPENSE_EDIT',
  WALLET_EXPENSE_DELETE = 'WALLET_EXPENSE_DELETE',
  WALLET_EXPENSE_PROCESS = 'WALLET_EXPENSE_PROCESS',
  WALLET_EXPENSE_TYPE_ROUTE = 'WALLET_EXPENSE_TYPE_ROUTE',
  WALLET_EXPENSE_TYPE_CREATE = 'WALLET_EXPENSE_TYPE_CREATE',
  WALLET_EXPENSE_TYPE_EDIT = 'WALLET_EXPENSE_TYPE_EDIT',
  WALLET_EXPENSE_TYPE_DELETE = 'WALLET_EXPENSE_TYPE_DELETE',
  WALLET_EXPENSE_REVERT = 'WALLET_EXPENSE_REVERT',
  WALLET_EXPENSE_LOAD_PERSONAL = 'WALLET_EXPENSE_LOAD_PERSONAL',
  WALLET_SALARY_ROUTE = 'WALLET_SALARY_ROUTE',
  WALLET_SALARY_PROCESS = 'WALLET_SALARY_PROCESS',
  WALLET_REPORTS_PAYMENTS_ACCESS = 'WALLET_REPORTS_PAYMENTS_ACCESS',
  WALLET_REPORTS_EXPENSES_ACCESS = 'WALLET_REPORTS_EXPENSES_ACCESS',
  WALLET_REPORTS_NEGOTIATIONS_ACCESS = 'WALLET_REPORTS_NEGOTIATIONS_ACCESS',
  WALLET_NEGOTIATIONS_DUPLICATED = 'WALLET_NEGOTIATIONS_DUPLICATED',
  WALLET_NEGOTIATIONS_EXPENSE = 'WALLET_NEGOTIATIONS_EXPENSE',
  CRM_CORE_ROUTE = 'CRM_CORE_ROUTE',
  CRM_PROCESS_ROUTE = 'CRM_PROCESS_ROUTE',
  CRM_STATE_CREATE = 'CRM_STATE_CREATE',
  CRM_STATE_EDIT = 'CRM_STATE_EDIT',
  CRM_STATE_DELETE = 'CRM_STATE_DELETE',
  CRM_PIPELINE_CREATE = 'CRM_PIPELINE_CREATE',
  CRM_PIPELINE_EDIT = 'CRM_PIPELINE_EDIT',
  CRM_PIPELINE_DELETE = 'CRM_PIPELINE_DELETE',
  CRM_COMMENTARY_CREATE = 'CRM_COMMENTARY_CREATE',
  CRM_COMMENTARY_SELECT_FILE = 'CRM_COMMENTARY_SELECT_FILE',
  CRM_COMMENTARY_SELECT_EMOJI = 'CRM_COMMENTARY_SELECT_EMOJI',
  CRM_COMMENTARY_DELETE_ALL = 'CRM_COMMENTARY_DELETE_ALL',
  CRM_COPY_NEGOTIATION = 'CRM_COPY_NEGOTIATION',
  CRM_MOVE_NEGOTIATION = 'CRM_MOVE_NEGOTIATION',
  CRM_COPY_NEGOTIATION_MASSIVE = 'CRM_COPY_NEGOTIATION_MASSIVE',
  CRM_MOVE_NEGOTIATION_MASSIVE = 'CRM_MOVE_NEGOTIATION_MASSIVE',
  CRM_FROZEN_NEGOTIATION = 'CRM_FROZEN_NEGOTIATION',
  CRM_FIELD_MANAGER_CORE_ROUTE = 'CRM_FIELD_MANAGER_CORE_ROUTE',
  CRM_FIELD_MANAGER_SECTION_CREATE = 'CRM_FIELD_MANAGER_SECTION_CREATE',
  CRM_FIELD_MANAGER_FIELD_CREATE = 'CRM_FIELD_MANAGER_FIELD_CREATE',
  CRM_FIELD_MANAGER_FIELD_AND_SECTION_EDIT = 'CRM_FIELD_MANAGER_FIELD_AND_SECTION_EDIT',
  CRM_FIELD_MANAGER_FIELD_AND_SECTION_DELETE = 'CRM_FIELD_MANAGER_FIELD_AND_SECTION_DELETE',
  CRM_AUTOMATION_CORE_ROUTE = 'CRM_AUTOMATION_CORE_ROUTE',
  CRM_AUTOMATION_CREATE = 'CRM_AUTOMATION_CREATE',
  CRM_AUTOMATION_EDIT = 'CRM_AUTOMATION_EDIT',
  CRM_AUTOMATION_DELETE = 'CRM_AUTOMATION_DELETE',
  CRM_CONFIGURATIONS_ACCESS_PERMITS_CRM = 'CRM_CONFIGURATIONS_ACCESS_PERMITS_CRM',
  CRM_PROCESS_TYPE_CORE_ROUTE = 'CRM_PROCESS_TYPE_CORE_ROUTE',
  CRM_PROCESS_TYPE_CREATE = 'CRM_PROCESS_TYPE_CREATE',
  CRM_PROCESS_TYPE_EDIT = 'CRM_PROCESS_TYPE_EDIT',
  CRM_PROCESS_TYPE_DELETE = 'CRM_PROCESS_TYPE_DELETE',
  CRM_NEGOTIATION_CREATE = 'CRM_NEGOTIATION_CREATE',
  CRM_NEGOTIATION_EDIT = 'CRM_NEGOTIATION_EDIT',
  CRM_NEGOTIATION_DELETE = 'CRM_NEGOTIATION_DELETE',
  CRM_NEGOTIATION_PARENT_ACCESS = 'CRM_NEGOTIATION_PARENT_ACCESS',
  CRM_NEGOTIATION_PARENT_CHANGE = 'CRM_NEGOTIATION_PARENT_CHANGE',
  CRM_NEGOTIATION_PARENT_UNLINK = 'CRM_NEGOTIATION_PARENT_UNLINK',
  CRM_NEGOTIATION_EDIT_AMOUNTS = 'CRM_NEGOTIATION_EDIT_AMOUNTS',
  CRM_NEGOTIATION_GOAL_CREATE = 'CRM_NEGOTIATION_GOAL_CREATE',
  CRM_NEGOTIATION_GOAL_EDIT = 'CRM_NEGOTIATION_GOAL_EDIT',
  CRM_NEGOTIATION_GOAL_DELETE = 'CRM_NEGOTIATION_GOAL_DELETE',
  CRM_NEGOTIATION_GOAL_ADD = 'CRM_NEGOTIATION_GOAL_ADD',
  CRM_NEGOTIATION_GOAL_CHANGE = 'CRM_NEGOTIATION_GOAL_CHANGE',
  CRM_NEGOTIATION_VIEW_GENERAL_INFORMATION = 'CRM_NEGOTIATION_VIEW_GENERAL_INFORMATION',
  CRM_CUSTOMER_CREATE = 'CRM_CUSTOMER_CREATE',
  CRM_CUSTOMER_EDIT = 'CRM_CUSTOMER_EDIT',
  CRM_CUSTOMER_DELETE = 'CRM_CUSTOMER_DELETE',
  CALENDAR_CORE_ROUTE = 'CALENDAR_CORE_ROUTE',
  CALENDAR_ACTIVITY_CREATE = 'CALENDAR_ACTIVITY_CREATE',
  CALENDAR_ACTIVITY_EDIT = 'CALENDAR_ACTIVITY_EDIT',
  CALENDAR_ACTIVITY_DELETE = 'CALENDAR_ACTIVITY_DELETE',
  CALENDAR_VIEW_OTHER_USER = 'CALENDAR_VIEW_OTHER_USER',
  TASK_CORE_ROUTE = 'TASK_CORE_ROUTE',
  TASK_CHANGE_STATE = 'TASK_CHANGE_STATE',
  TASK_KANBAN_CORE_ROUTE = 'TASK_KANBAN_CORE_ROUTE',
  TASK_LIST_VIEW_CORE_ROUTE = 'TASK_LIST_VIEW_CORE_ROUTE',
  TASK_KANBAN_VIEW_CORE_ROUTE = 'TASK_KANBAN_VIEW_CORE_ROUTE',
  COMPANY_CORE_ROUTE = 'COMPANY_CORE_ROUTE',
  COMPANY_ORGANIZATION_ROUTE = 'COMPANY_ORGANIZATION_ROUTE',
  COMPANY_DEPARTMENT_CREATE = 'COMPANY_DEPARTMENT_CREATE',
  COMPANY_DEPARTMENT_EDIT = 'COMPANY_DEPARTMENT_EDIT',
  COMPANY_DEPARTMENT_DELETE = 'COMPANY_DEPARTMENT_DELETE',
  COMPANY_EMPLOYEES_ROUTE = 'COMPANY_EMPLOYEES_ROUTE',
  COMPANY_EMPLOYEE_CREATE = 'COMPANY_EMPLOYEE_CREATE',
  COMPANY_EMPLOYEE_EDIT = 'COMPANY_EMPLOYEE_EDIT',
  COMPANY_EMPLOYEE_DELETE = 'COMPANY_EMPLOYEE_DELETE',
  COMPANY_EMPLOYEE_INVITE_USER = 'COMPANY_EMPLOYEE_INVITE_USER',
  COMPANY_EMPLOYEE_JOB_CREATE = 'COMPANY_EMPLOYEE_JOB_CREATE',
  COMPANY_EMPLOYEE_JOB_EDIT = 'COMPANY_EMPLOYEE_JOB_EDIT',
  COMPANY_EMPLOYEE_JOB_DELETE = 'COMPANY_EMPLOYEE_JOB_DELETE',
  COMPANY_REASSIGN_DATA = 'COMPANY_REASSIGN_DATA',
  CHAT_CORE_ROUTE = 'CHAT_CORE_ROUTE',
  CHAT_SELECT_EMOJI = 'CHAT_SELECT_EMOJI',
  CHAT_SELECT_FILE = 'CHAT_SELECT_FILE',
  CHAT_SEND_MESSAGE = 'CHAT_SEND_MESSAGE',
  MAIL_CORE_ROUTE = 'MAIL_CORE_ROUTE',
  MAIL_INBOX_ROUTE = 'MAIL_INBOX_ROUTE',
  MAIL_COMPOSE_ROUTE = 'MAIL_COMPOSE_ROUTE',
  MAIL_DETAIL_ROUTE = 'MAIL_DETAIL_ROUTE',
  FILES_CORE_ROUTE = 'FILES_CORE_ROUTE',
  FILES_CREATE_FILE = 'FILES_CREATE_FILE',
  FILES_EDIT_FILE = 'FILES_EDIT_FILE',
  FILES_DELETE_FILE = 'FILES_DELETE_FILE',
  FILES_CREATE_FILE_ALL = 'FILES_CREATE_FILE_ALL',
  FILES_EDIT_FILE_ALL = 'FILES_EDIT_FILE_ALL',
  FILES_DELETE_FILE_ALL = 'FILES_DELETE_FILE_ALL',
  FILES_VIEW_FILE = 'FILES_VIEW_FILE',
  FILES_CREATE_FOLDER = 'FILES_CREATE_FOLDER',
  FILES_EDIT_FOLDER = 'FILES_EDIT_FOLDER',
  FILES_DELETE_FOLDER = 'FILES_DELETE_FOLDER',
  FILES_CREATE_FOLDER_ALL = 'FILES_CREATE_FOLDER_ALL',
  FILES_EDIT_FOLDER_ALL = 'FILES_EDIT_FOLDER_ALL',
  FILES_DELETE_FOLDER_ALL = 'FILES_DELETE_FOLDER_ALL',
  FILES_MOVE_FILE_AND_FOLDER = 'FILES_MOVE_FILE_AND_FOLDER',
  FILES_MOVE_FILE_AND_FOLDER_ALL = 'FILES_MOVE_FILE_AND_FOLDER_ALL',
  FORUM_CORE_ROUTE = 'FORUM_CORE_ROUTE',
  FORUM_CREATE_ARTICLE = 'FORUM_CREATE_ARTICLE',
  FORUM_EDIT_ARTICLE = 'FORUM_EDIT_ARTICLE',
  FORUM_DELETE_ARTICLE = 'FORUM_DELETE_ARTICLE',
  FORUM_EDIT_ARTICLE_ALL = 'FORUM_EDIT_ARTICLE_ALL',
  FORUM_DELETE_ARTICLE_ALL = 'FORUM_DELETE_ARTICLE_ALL',
  SURVEY_CORE_ROUTE = 'SURVEY_CORE_ROUTE',
  SURVEY_VIEW_FORM = 'SURVEY_VIEW_FORM',
  SURVEY_CREATE_FORM = 'SURVEY_CREATE_FORM',
  SURVEY_EDIT_FORM = 'SURVEY_EDIT_FORM',
  SURVEY_DELETE_FORM = 'SURVEY_DELETE_FORM',
  SURVEY_VIEW_ANSWERS = 'SURVEY_VIEW_ANSWERS',
  SURVEY_DELETE_ANSWER = 'SURVEY_DELETE_ANSWER',
  SURVEY_PROCESS_ANSWER = 'SURVEY_PROCESS_ANSWER',
  ACCESS_CORE_ROUTE = 'ACCESS_CORE_ROUTE',
  ACCESS_CREATE = 'ACCESS_CREATE',
  ACCESS_EDIT = 'ACCESS_EDIT',
  ACCESS_DELETE = 'ACCESS_DELETE',
  CONFIG_CORE_ROUTE = 'CONFIG_CORE_ROUTE',
  CONFIG_GENERAL = 'CONFIG_GENERAL',
  CONFIG_PROCESS_TYPE = 'CONFIG_PROCESS_TYPE',
  CONFIG_GOALS = 'CONFIG_GOALS',
  CONFIG_JOB_TITLE = 'CONFIG_JOB_TITLE',
  CONFIG_CUSTOMER = 'CONFIG_CUSTOMER',
  CONFIG_CUSTOMER_DELETE = 'CONFIG_CUSTOMER_DELETE',
  CONFIG_PAYMENT_AUTOMATION = 'CONFIG_PAYMENT_AUTOMATION',
  CONFIG_PAYMENT_AUTOMATION_CREATE = 'CONFIG_PAYMENT_AUTOMATION_CREATE',
  CONFIG_PAYMENT_AUTOMATION_EDIT = 'CONFIG_PAYMENT_AUTOMATION_EDIT',
  CONFIG_PAYMENT_AUTOMATION_DELETE = 'CONFIG_PAYMENT_AUTOMATION_DELETE',
  CONFIG_DEPARTMENTS = 'CONFIG_DEPARTMENTS',
  CONFIG_DEPARTMENT_CREATE = 'CONFIG_DEPARTMENT_CREATE',
  CONFIG_DEPARTMENT_EDIT = 'CONFIG_DEPARTMENT_EDIT',
  CONFIG_DEPARTMENT_DELETE = 'CONFIG_DEPARTMENT_DELETE',
  CONFIG_NEGOTIATIONS = 'CONFIG_NEGOTIATIONS',
  CONFIG_NEGOTIATION_CREATE = 'CONFIG_NEGOTIATION_CREATE',
  CONFIG_NEGOTIATION_EDIT = 'CONFIG_NEGOTIATION_EDIT',
  CONFIG_NEGOTIATION_DELETE = 'CONFIG_NEGOTIATION_DELETE',
  TICKETS_VIEW_ALL = 'TICKETS_VIEW_ALL',
  ACADEMY_CORE_ROUTE = 'ACADEMY_CORE_ROUTE',
  ACADEMY_COURSES_ROUTE = 'ACADEMY_COURSES_ROUTE',
  ACADEMY_WORKSHOPS_ROUTE = 'ACADEMY_WORKSHOPS_ROUTE',
  ACADEMY_ANSWERS_ROUTE = 'ACADEMY_ANSWERS_ROUTE',
  ACADEMY_ADMIN_ANSWERS_ROUTE = 'ACADEMY_ADMIN_ANSWERS_ROUTE',
  ACADEMY_ADMIN_ANSWERS_ALL_ROUTE = 'ACADEMY_ADMIN_ANSWERS_ALL_ROUTE',
  CORPORATE_MANAGEMENT_CORE = 'CORPORATE_MANAGEMENT_CORE',
  CORPORATE_MANAGEMENT_TIME = 'CORPORATE_MANAGEMENT_TIME',
  CORPORATE_MANAGEMENT_TIME_CREATE = 'CORPORATE_MANAGEMENT_TIME_CREATE',
  CORPORATE_MANAGEMENT_TIME_EDIT = 'CORPORATE_MANAGEMENT_TIME_EDIT',
  CORPORATE_MANAGEMENT_TIME_DELETE = 'CORPORATE_MANAGEMENT_TIME_DELETE',
  CORPORATE_MANAGEMENT_MILESTONE = 'CORPORATE_MANAGEMENT_MILESTONE',
  CORPORATE_MANAGEMENT_MILESTONE_CREATE = 'CORPORATE_MANAGEMENT_MILESTONE_CREATE',
  CORPORATE_MANAGEMENT_MILESTONE_EDIT = 'CORPORATE_MANAGEMENT_MILESTONE_EDIT',
  CORPORATE_MANAGEMENT_MILESTONE_DELETE = 'CORPORATE_MANAGEMENT_MILESTONE_DELETE',
  CORPORATE_MANAGEMENT_MILESTONE_VIEW_DETAILS = 'CORPORATE_MANAGEMENT_MILESTONE_VIEW_DETAILS',
  REQUEST_TEMPLATE_CORE_ROUTE = 'REQUEST_TEMPLATE_CORE_ROUTE',
  REQUEST_TEMPLATE_CREATE = 'REQUEST_TEMPLATE_CREATE',
  REQUEST_TEMPLATE_EDIT = 'REQUEST_TEMPLATE_EDIT',
  REQUEST_TEMPLATE_DELETE = 'REQUEST_TEMPLATE_DELETE',
  REQUEST_CORE_ROUTE = 'REQUEST_CORE_ROUTE',
  REQUEST_CREATE = 'REQUEST_CREATE',
  REQUEST_EDIT = 'REQUEST_EDIT',
  REQUEST_DELETE = 'REQUEST_DELETE',
  TAG_CORE_ROUTE = 'TAG_CORE_ROUTE',
  TAG_CREATE = 'TAG_CREATE',
  TAG_EDIT = 'TAG_EDIT',
  TAG_DELETE = 'TAG_DELETE',
}

export type ModelEvolinciteEmployeeObservationConnection = {
  __typename: 'ModelEvolinciteEmployeeObservationConnection';
  items: Array<EvolinciteEmployeeObservation | null>;
  nextToken?: string | null;
};

export type EvolinciteEmployeeObservation = {
  __typename: 'EvolinciteEmployeeObservation';
  id: string;
  name?: string | null;
  content?: string | null;
  isPublic?: boolean | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: EvolinciteCompany | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: EvolinciteUser | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteUserAnswersInput = {
  id: string;
  answers?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  evolinciteUserAnswersEvolinciteUserId?: string | null;
  evolinciteUserAnswersEvolinciteSyllabusId?: string | null;
};

export type DeleteEvolinciteUserAnswersInput = {
  id: string;
};

export type CreateEvolinciteProcessTypeInput = {
  id?: string | null;
  name?: string | null;
  order?: number | null;
  sellerCommission?: number | null;
  referrerCommission?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type ModelEvolinciteProcessTypeConditionInput = {
  name?: ModelStringInput | null;
  order?: ModelIntInput | null;
  sellerCommission?: ModelFloatInput | null;
  referrerCommission?: ModelFloatInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteProcessTypeConditionInput | null> | null;
  or?: Array<ModelEvolinciteProcessTypeConditionInput | null> | null;
  not?: ModelEvolinciteProcessTypeConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type ModelFloatInput = {
  ne?: number | null;
  eq?: number | null;
  le?: number | null;
  lt?: number | null;
  ge?: number | null;
  gt?: number | null;
  between?: Array<number | null> | null;
  attributeExists?: boolean | null;
  attributeType?: ModelAttributeTypes | null;
};

export type UpdateEvolinciteProcessTypeInput = {
  id: string;
  name?: string | null;
  order?: number | null;
  sellerCommission?: number | null;
  referrerCommission?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type DeleteEvolinciteProcessTypeInput = {
  id: string;
};

export type CreateEvolinciteExpenseTypeInput = {
  id?: string | null;
  name?: string | null;
  type?: EvolinciteField | null;
  setting?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type ModelEvolinciteExpenseTypeConditionInput = {
  name?: ModelStringInput | null;
  type?: ModelEvolinciteFieldInput | null;
  setting?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteExpenseTypeConditionInput | null> | null;
  or?: Array<ModelEvolinciteExpenseTypeConditionInput | null> | null;
  not?: ModelEvolinciteExpenseTypeConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type ModelEvolinciteFieldInput = {
  eq?: EvolinciteField | null;
  ne?: EvolinciteField | null;
};

export type UpdateEvolinciteExpenseTypeInput = {
  id: string;
  name?: string | null;
  type?: EvolinciteField | null;
  setting?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type DeleteEvolinciteExpenseTypeInput = {
  id: string;
};

export type CreateEvolinciteExpenseInput = {
  id?: string | null;
  amount?: number | null;
  process?: string | null;
  expenseState?: EvolinciteExpenseStates | null;
  expenseDate?: string | null;
  observations?: string | null;
  voucher?: Array<string | null> | null;
  transactionType?: EvolinciteTransactionType | null;
  reference?: string | null;
  state?: EvolinciteStates | null;
  evolinciteExpenseTypeID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  evolinciteUserResponsibleID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteExpenseConditionInput = {
  amount?: ModelIntInput | null;
  process?: ModelStringInput | null;
  expenseState?: ModelEvolinciteExpenseStatesInput | null;
  expenseDate?: ModelStringInput | null;
  observations?: ModelStringInput | null;
  voucher?: ModelStringInput | null;
  transactionType?: ModelEvolinciteTransactionTypeInput | null;
  reference?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteExpenseTypeID?: ModelIDInput | null;
  evolinciteCrmNegotiationID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteUserResponsibleID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteExpenseConditionInput | null> | null;
  or?: Array<ModelEvolinciteExpenseConditionInput | null> | null;
  not?: ModelEvolinciteExpenseConditionInput | null;
};

export type ModelEvolinciteExpenseStatesInput = {
  eq?: EvolinciteExpenseStates | null;
  ne?: EvolinciteExpenseStates | null;
};

export type ModelEvolinciteTransactionTypeInput = {
  eq?: EvolinciteTransactionType | null;
  ne?: EvolinciteTransactionType | null;
};

export type UpdateEvolinciteExpenseInput = {
  id: string;
  amount?: number | null;
  process?: string | null;
  expenseState?: EvolinciteExpenseStates | null;
  expenseDate?: string | null;
  observations?: string | null;
  voucher?: Array<string | null> | null;
  transactionType?: EvolinciteTransactionType | null;
  reference?: string | null;
  state?: EvolinciteStates | null;
  evolinciteExpenseTypeID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  evolinciteUserResponsibleID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteExpenseInput = {
  id: string;
};

export type CreateEvolinciteUserEvolinciteJobTitleInput = {
  id?: string | null;
  state?: EvolinciteStates | null;
  evolinciteJobTitleID?: string | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
};

export type ModelEvolinciteUserEvolinciteJobTitleConditionInput = {
  state?: ModelEvolinciteStatesInput | null;
  evolinciteJobTitleID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteUserEvolinciteJobTitleConditionInput | null> | null;
  or?: Array<ModelEvolinciteUserEvolinciteJobTitleConditionInput | null> | null;
  not?: ModelEvolinciteUserEvolinciteJobTitleConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteUserEvolinciteJobTitleInput = {
  id: string;
  state?: EvolinciteStates | null;
  evolinciteJobTitleID?: string | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
};

export type DeleteEvolinciteUserEvolinciteJobTitleInput = {
  id: string;
};

export type CreateEvolinciteJobTitleInput = {
  id?: string | null;
  name?: string | null;
  salary?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type ModelEvolinciteJobTitleConditionInput = {
  name?: ModelStringInput | null;
  salary?: ModelIntInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteJobTitleConditionInput | null> | null;
  or?: Array<ModelEvolinciteJobTitleConditionInput | null> | null;
  not?: ModelEvolinciteJobTitleConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteJobTitleInput = {
  id: string;
  name?: string | null;
  salary?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type DeleteEvolinciteJobTitleInput = {
  id: string;
};

export type CreateEvolinciteWalletPaymentInput = {
  id?: string | null;
  amount?: number | null;
  scheduledDate?: string | null;
  datePayment?: string | null;
  paymentStatus?: EvolinciteWalletPaymentStatus | null;
  prePayment?: string | null;
  postPayment?: string | null;
  observations?: string | null;
  voucher?: Array<string | null> | null;
  transactionType?: EvolinciteTransactionType | null;
  reference?: string | null;
  amountInterest?: number | null;
  amountCollection?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserReferrerID?: string | null;
  evolinciteUserSellerID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  evolinciteCustomerID?: string | null;
  evolinciteUserResponsibleID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteWalletPaymentConditionInput = {
  amount?: ModelIntInput | null;
  scheduledDate?: ModelStringInput | null;
  datePayment?: ModelStringInput | null;
  paymentStatus?: ModelEvolinciteWalletPaymentStatusInput | null;
  prePayment?: ModelStringInput | null;
  postPayment?: ModelStringInput | null;
  observations?: ModelStringInput | null;
  voucher?: ModelStringInput | null;
  transactionType?: ModelEvolinciteTransactionTypeInput | null;
  reference?: ModelStringInput | null;
  amountInterest?: ModelIntInput | null;
  amountCollection?: ModelIntInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserReferrerID?: ModelIDInput | null;
  evolinciteUserSellerID?: ModelIDInput | null;
  evolinciteCrmNegotiationID?: ModelIDInput | null;
  evolinciteCustomerID?: ModelIDInput | null;
  evolinciteUserResponsibleID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteWalletPaymentConditionInput | null> | null;
  or?: Array<ModelEvolinciteWalletPaymentConditionInput | null> | null;
  not?: ModelEvolinciteWalletPaymentConditionInput | null;
};

export type ModelEvolinciteWalletPaymentStatusInput = {
  eq?: EvolinciteWalletPaymentStatus | null;
  ne?: EvolinciteWalletPaymentStatus | null;
};

export type UpdateEvolinciteWalletPaymentInput = {
  id: string;
  amount?: number | null;
  scheduledDate?: string | null;
  datePayment?: string | null;
  paymentStatus?: EvolinciteWalletPaymentStatus | null;
  prePayment?: string | null;
  postPayment?: string | null;
  observations?: string | null;
  voucher?: Array<string | null> | null;
  transactionType?: EvolinciteTransactionType | null;
  reference?: string | null;
  amountInterest?: number | null;
  amountCollection?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserReferrerID?: string | null;
  evolinciteUserSellerID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  evolinciteCustomerID?: string | null;
  evolinciteUserResponsibleID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteWalletPaymentInput = {
  id: string;
};

export type CreateEvolinciteCrmNegotiationFieldInput = {
  id?: string | null;
  field?: string | null;
  type?: EvolinciteField | null;
  required?: boolean | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationSectionID?: string | null;
};

export type ModelEvolinciteCrmNegotiationFieldConditionInput = {
  field?: ModelStringInput | null;
  type?: ModelEvolinciteFieldInput | null;
  required?: ModelBooleanInput | null;
  order?: ModelFloatInput | null;
  state?: ModelEvolinciteStatesInput | null;
  meta?: ModelStringInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteCrmNegotiationSectionID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteCrmNegotiationFieldConditionInput | null> | null;
  or?: Array<ModelEvolinciteCrmNegotiationFieldConditionInput | null> | null;
  not?: ModelEvolinciteCrmNegotiationFieldConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type ModelBooleanInput = {
  ne?: boolean | null;
  eq?: boolean | null;
  attributeExists?: boolean | null;
  attributeType?: ModelAttributeTypes | null;
};

export type UpdateEvolinciteCrmNegotiationFieldInput = {
  id: string;
  field?: string | null;
  type?: EvolinciteField | null;
  required?: boolean | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationSectionID?: string | null;
};

export type DeleteEvolinciteCrmNegotiationFieldInput = {
  id: string;
};

export type CreateEvolinciteCrmNegotiationSectionInput = {
  id?: string | null;
  name?: string | null;
  order?: number | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type ModelEvolinciteCrmNegotiationSectionConditionInput = {
  name?: ModelStringInput | null;
  order?: ModelFloatInput | null;
  meta?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteCrmNegotiationSectionConditionInput | null> | null;
  or?: Array<ModelEvolinciteCrmNegotiationSectionConditionInput | null> | null;
  not?: ModelEvolinciteCrmNegotiationSectionConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteCrmNegotiationSectionInput = {
  id: string;
  name?: string | null;
  order?: number | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type DeleteEvolinciteCrmNegotiationSectionInput = {
  id: string;
};

export type CreateEvolinciteCrmAutomationInput = {
  id?: string | null;
  name?: string | null;
  rule?: EvolinciteRule | null;
  setting?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmStateID?: string | null;
};

export type ModelEvolinciteCrmAutomationConditionInput = {
  name?: ModelStringInput | null;
  rule?: ModelEvolinciteRuleInput | null;
  setting?: ModelStringInput | null;
  order?: ModelFloatInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteCrmStateID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteCrmAutomationConditionInput | null> | null;
  or?: Array<ModelEvolinciteCrmAutomationConditionInput | null> | null;
  not?: ModelEvolinciteCrmAutomationConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type ModelEvolinciteRuleInput = {
  eq?: EvolinciteRule | null;
  ne?: EvolinciteRule | null;
};

export type UpdateEvolinciteCrmAutomationInput = {
  id: string;
  name?: string | null;
  rule?: EvolinciteRule | null;
  setting?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmStateID?: string | null;
};

export type DeleteEvolinciteCrmAutomationInput = {
  id: string;
};

export type CreateEvolinciteCommentInput = {
  id?: string | null;
  files?: Array<string | null> | null;
  content?: string | null;
  pinned?: boolean | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteCommentConditionInput = {
  files?: ModelStringInput | null;
  content?: ModelStringInput | null;
  pinned?: ModelBooleanInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCrmNegotiationID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteCommentConditionInput | null> | null;
  or?: Array<ModelEvolinciteCommentConditionInput | null> | null;
  not?: ModelEvolinciteCommentConditionInput | null;
};

export type UpdateEvolinciteCommentInput = {
  id: string;
  files?: Array<string | null> | null;
  content?: string | null;
  pinned?: boolean | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteCommentInput = {
  id: string;
};

export type CreateEvolinciteActivityInput = {
  id?: string | null;
  name?: string | null;
  description?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  color?: string | null;
  type?: EvolinciteActivityTypes | null;
  priority?: number | null;
  meta?: string | null;
  taskState?: EvolinciteTaskStates | null;
  documents?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
};

export type ModelEvolinciteActivityConditionInput = {
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  startDate?: ModelStringInput | null;
  endDate?: ModelStringInput | null;
  color?: ModelStringInput | null;
  type?: ModelEvolinciteActivityTypesInput | null;
  priority?: ModelIntInput | null;
  meta?: ModelStringInput | null;
  taskState?: ModelEvolinciteTaskStatesInput | null;
  documents?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteCrmNegotiationID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteActivityConditionInput | null> | null;
  or?: Array<ModelEvolinciteActivityConditionInput | null> | null;
  not?: ModelEvolinciteActivityConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type ModelEvolinciteActivityTypesInput = {
  eq?: EvolinciteActivityTypes | null;
  ne?: EvolinciteActivityTypes | null;
};

export type ModelEvolinciteTaskStatesInput = {
  eq?: EvolinciteTaskStates | null;
  ne?: EvolinciteTaskStates | null;
};

export type UpdateEvolinciteActivityInput = {
  id: string;
  name?: string | null;
  description?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  color?: string | null;
  type?: EvolinciteActivityTypes | null;
  priority?: number | null;
  meta?: string | null;
  taskState?: EvolinciteTaskStates | null;
  documents?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
};

export type DeleteEvolinciteActivityInput = {
  id: string;
};

export type CreateEvolincitePermissionsInput = {
  id?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  evolinciteDepartmentID?: string | null;
  evolinciteRolID?: string | null;
};

export type ModelEvolincitePermissionsConditionInput = {
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteDepartmentID?: ModelIDInput | null;
  evolinciteRolID?: ModelIDInput | null;
  and?: Array<ModelEvolincitePermissionsConditionInput | null> | null;
  or?: Array<ModelEvolincitePermissionsConditionInput | null> | null;
  not?: ModelEvolincitePermissionsConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolincitePermissionsInput = {
  id: string;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  evolinciteDepartmentID?: string | null;
  evolinciteRolID?: string | null;
};

export type DeleteEvolincitePermissionsInput = {
  id: string;
};

export type CreateEvolinciteDepartmentInput = {
  id?: string | null;
  name?: string | null;
  parent?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteDepartmentConditionInput = {
  name?: ModelStringInput | null;
  parent?: ModelIDInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteDepartmentConditionInput | null> | null;
  or?: Array<ModelEvolinciteDepartmentConditionInput | null> | null;
  not?: ModelEvolinciteDepartmentConditionInput | null;
};

export type UpdateEvolinciteDepartmentInput = {
  id: string;
  name?: string | null;
  parent?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteDepartmentInput = {
  id: string;
};

export type CreateEvolinciteSubscriptionInput = {
  id?: string | null;
  name?: string | null;
  price?: number | null;
  dateInitial?: string | null;
  dateFinal?: string | null;
  state?: EvolinciteStates | null;
};

export type ModelEvolinciteSubscriptionConditionInput = {
  name?: ModelStringInput | null;
  price?: ModelIntInput | null;
  dateInitial?: ModelStringInput | null;
  dateFinal?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  and?: Array<ModelEvolinciteSubscriptionConditionInput | null> | null;
  or?: Array<ModelEvolinciteSubscriptionConditionInput | null> | null;
  not?: ModelEvolinciteSubscriptionConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteSubscriptionInput = {
  id: string;
  name?: string | null;
  price?: number | null;
  dateInitial?: string | null;
  dateFinal?: string | null;
  state?: EvolinciteStates | null;
};

export type DeleteEvolinciteSubscriptionInput = {
  id: string;
};

export type CreateEvolinciteModuleInput = {
  id?: string | null;
  name?: string | null;
  state?: EvolinciteStates | null;
};

export type ModelEvolinciteModuleConditionInput = {
  name?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  and?: Array<ModelEvolinciteModuleConditionInput | null> | null;
  or?: Array<ModelEvolinciteModuleConditionInput | null> | null;
  not?: ModelEvolinciteModuleConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type EvolinciteModule = {
  __typename: 'EvolinciteModule';
  id: string;
  name?: string | null;
  state?: EvolinciteStates | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteModuleInput = {
  id: string;
  name?: string | null;
  state?: EvolinciteStates | null;
};

export type DeleteEvolinciteModuleInput = {
  id: string;
};

export type CreateEvolinciteFunctionalityInput = {
  id?: string | null;
  name?: string | null;
  functionalities?: Array<EvolinciteFunctionalities | null> | null;
  state?: EvolinciteStates | null;
  evolincitePackageID?: string | null;
};

export type ModelEvolinciteFunctionalityConditionInput = {
  name?: ModelStringInput | null;
  functionalities?: ModelEvolinciteFunctionalitiesListInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolincitePackageID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteFunctionalityConditionInput | null> | null;
  or?: Array<ModelEvolinciteFunctionalityConditionInput | null> | null;
  not?: ModelEvolinciteFunctionalityConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type ModelEvolinciteFunctionalitiesListInput = {
  eq?: Array<EvolinciteFunctionalities | null> | null;
  ne?: Array<EvolinciteFunctionalities | null> | null;
  contains?: EvolinciteFunctionalities | null;
  notContains?: EvolinciteFunctionalities | null;
};

export type UpdateEvolinciteFunctionalityInput = {
  id: string;
  name?: string | null;
  functionalities?: Array<EvolinciteFunctionalities | null> | null;
  state?: EvolinciteStates | null;
  evolincitePackageID?: string | null;
};

export type DeleteEvolinciteFunctionalityInput = {
  id: string;
};

export type CreateEvolinciteRolInput = {
  id?: string | null;
  name?: string | null;
  permissions?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type ModelEvolinciteRolConditionInput = {
  name?: ModelStringInput | null;
  permissions?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteRolConditionInput | null> | null;
  or?: Array<ModelEvolinciteRolConditionInput | null> | null;
  not?: ModelEvolinciteRolConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteRolInput = {
  id: string;
  name?: string | null;
  permissions?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type DeleteEvolinciteRolInput = {
  id: string;
};

export type CreateEvolinciteCustomerInput = {
  id?: string | null;
  name?: string | null;
  lastName?: string | null;
  documentType?: EvolinciteDocumentType | null;
  documentNumber?: string | null;
  phone?: string | null;
  optionalPhone?: string | null;
  email?: string | null;
  picture?: string | null;
  birthDate?: string | null;
  municipality?: EvolinciteMunicipality | null;
  documents?: Array<string | null> | null;
  address?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type ModelEvolinciteCustomerConditionInput = {
  name?: ModelStringInput | null;
  lastName?: ModelStringInput | null;
  documentType?: ModelEvolinciteDocumentTypeInput | null;
  documentNumber?: ModelStringInput | null;
  phone?: ModelStringInput | null;
  optionalPhone?: ModelStringInput | null;
  email?: ModelStringInput | null;
  picture?: ModelStringInput | null;
  birthDate?: ModelStringInput | null;
  municipality?: ModelEvolinciteMunicipalityInput | null;
  documents?: ModelStringInput | null;
  address?: ModelStringInput | null;
  meta?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteCustomerConditionInput | null> | null;
  or?: Array<ModelEvolinciteCustomerConditionInput | null> | null;
  not?: ModelEvolinciteCustomerConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type ModelEvolinciteDocumentTypeInput = {
  eq?: EvolinciteDocumentType | null;
  ne?: EvolinciteDocumentType | null;
};

export type ModelEvolinciteMunicipalityInput = {
  eq?: EvolinciteMunicipality | null;
  ne?: EvolinciteMunicipality | null;
};

export type UpdateEvolinciteCustomerInput = {
  id: string;
  name?: string | null;
  lastName?: string | null;
  documentType?: EvolinciteDocumentType | null;
  documentNumber?: string | null;
  phone?: string | null;
  optionalPhone?: string | null;
  email?: string | null;
  picture?: string | null;
  birthDate?: string | null;
  municipality?: EvolinciteMunicipality | null;
  documents?: Array<string | null> | null;
  address?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type DeleteEvolinciteCustomerInput = {
  id: string;
};

export type CreateEvolinciteUserSettingsInput = {
  id?: string | null;
  settings?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
};

export type ModelEvolinciteUserSettingsConditionInput = {
  settings?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteUserSettingsConditionInput | null> | null;
  or?: Array<ModelEvolinciteUserSettingsConditionInput | null> | null;
  not?: ModelEvolinciteUserSettingsConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteUserSettingsInput = {
  id: string;
  settings?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
};

export type DeleteEvolinciteUserSettingsInput = {
  id: string;
};

export type CreateEvolinciteCrmPipelineInput = {
  id?: string | null;
  name?: string | null;
  description?: string | null;
  publicDescription?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
};

export type ModelEvolinciteCrmPipelineConditionInput = {
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  publicDescription?: ModelStringInput | null;
  order?: ModelFloatInput | null;
  state?: ModelEvolinciteStatesInput | null;
  meta?: ModelStringInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteCrmPipelineConditionInput | null> | null;
  or?: Array<ModelEvolinciteCrmPipelineConditionInput | null> | null;
  not?: ModelEvolinciteCrmPipelineConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteCrmPipelineInput = {
  id: string;
  name?: string | null;
  description?: string | null;
  publicDescription?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
};

export type DeleteEvolinciteCrmPipelineInput = {
  id: string;
};

export type CreateEvolinciteCrmStateInput = {
  id?: string | null;
  name?: string | null;
  description?: string | null;
  publicDescription?: string | null;
  color?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmPipelineID?: string | null;
};

export type ModelEvolinciteCrmStateConditionInput = {
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  publicDescription?: ModelStringInput | null;
  color?: ModelStringInput | null;
  order?: ModelFloatInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteCrmPipelineID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteCrmStateConditionInput | null> | null;
  or?: Array<ModelEvolinciteCrmStateConditionInput | null> | null;
  not?: ModelEvolinciteCrmStateConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteCrmStateInput = {
  id: string;
  name?: string | null;
  description?: string | null;
  publicDescription?: string | null;
  color?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmPipelineID?: string | null;
};

export type DeleteEvolinciteCrmStateInput = {
  id: string;
};

export type CreateEvolinciteCrmNegotiationLogInput = {
  id?: string | null;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteCrmNegotiationLogConditionInput = {
  log?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteCrmNegotiationID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteCrmNegotiationLogConditionInput | null> | null;
  or?: Array<ModelEvolinciteCrmNegotiationLogConditionInput | null> | null;
  not?: ModelEvolinciteCrmNegotiationLogConditionInput | null;
};

export type UpdateEvolinciteCrmNegotiationLogInput = {
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteCrmNegotiationLogInput = {
  id: string;
};

export type CreateEvolinciteCrmNegotiationInput = {
  id?: string | null;
  name?: string | null;
  value?: number | null;
  due?: number | null;
  parent?: string | null;
  date?: string | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  frozen?: boolean | null;
  valueInterest?: number | null;
  valueCollection?: number | null;
  observers?: Array<string | null> | null;
  exitDate?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserSellerID?: string | null;
  evolinciteUserReferrerID?: string | null;
  evolinciteUserOwnerID?: string | null;
  evolinciteCrmStateID?: string | null;
  evolinciteCustomerID?: string | null;
  evolinciteProcessTypeID?: string | null;
  initialGoalID?: string | null;
  finalGoalID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteCrmNegotiationConditionInput = {
  name?: ModelStringInput | null;
  value?: ModelIntInput | null;
  due?: ModelIntInput | null;
  parent?: ModelIDInput | null;
  date?: ModelStringInput | null;
  documents?: ModelStringInput | null;
  meta?: ModelStringInput | null;
  frozen?: ModelBooleanInput | null;
  valueInterest?: ModelIntInput | null;
  valueCollection?: ModelIntInput | null;
  observers?: ModelIDInput | null;
  exitDate?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserSellerID?: ModelIDInput | null;
  evolinciteUserReferrerID?: ModelIDInput | null;
  evolinciteUserOwnerID?: ModelIDInput | null;
  evolinciteCrmStateID?: ModelIDInput | null;
  evolinciteCustomerID?: ModelIDInput | null;
  evolinciteProcessTypeID?: ModelIDInput | null;
  initialGoalID?: ModelIDInput | null;
  finalGoalID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteCrmNegotiationConditionInput | null> | null;
  or?: Array<ModelEvolinciteCrmNegotiationConditionInput | null> | null;
  not?: ModelEvolinciteCrmNegotiationConditionInput | null;
};

export type UpdateEvolinciteCrmNegotiationInput = {
  id: string;
  name?: string | null;
  value?: number | null;
  due?: number | null;
  parent?: string | null;
  date?: string | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  frozen?: boolean | null;
  valueInterest?: number | null;
  valueCollection?: number | null;
  observers?: Array<string | null> | null;
  exitDate?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserSellerID?: string | null;
  evolinciteUserReferrerID?: string | null;
  evolinciteUserOwnerID?: string | null;
  evolinciteCrmStateID?: string | null;
  evolinciteCustomerID?: string | null;
  evolinciteProcessTypeID?: string | null;
  initialGoalID?: string | null;
  finalGoalID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteCrmNegotiationInput = {
  id: string;
};

export type CreateEvolinciteRoomInput = {
  id?: string | null;
  Key?: string | null;
  name?: string | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
};

export type ModelEvolinciteRoomConditionInput = {
  Key?: ModelIDInput | null;
  name?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  meta?: ModelStringInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteRoomConditionInput | null> | null;
  or?: Array<ModelEvolinciteRoomConditionInput | null> | null;
  not?: ModelEvolinciteRoomConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteRoomInput = {
  id: string;
  Key?: string | null;
  name?: string | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
};

export type DeleteEvolinciteRoomInput = {
  id: string;
};

export type CreateEvolinciteMessageInput = {
  id?: string | null;
  content?: string | null;
  type?: EvolinciteMessageType | null;
  state?: EvolinciteStates | null;
  createdAt?: string | null;
  updatedAt?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  evolinciteRoomID?: string | null;
};

export type ModelEvolinciteMessageConditionInput = {
  content?: ModelStringInput | null;
  type?: ModelEvolinciteMessageTypeInput | null;
  state?: ModelEvolinciteStatesInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteRoomID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteMessageConditionInput | null> | null;
  or?: Array<ModelEvolinciteMessageConditionInput | null> | null;
  not?: ModelEvolinciteMessageConditionInput | null;
};

export type ModelEvolinciteMessageTypeInput = {
  eq?: EvolinciteMessageType | null;
  ne?: EvolinciteMessageType | null;
};

export type UpdateEvolinciteMessageInput = {
  id: string;
  content?: string | null;
  type?: EvolinciteMessageType | null;
  state?: EvolinciteStates | null;
  createdAt?: string | null;
  updatedAt?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  evolinciteRoomID?: string | null;
};

export type DeleteEvolinciteMessageInput = {
  id: string;
};

export type CreateEvolinciteCrmNegotiationFieldValueInput = {
  id?: string | null;
  value?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCrmNegotiationFieldID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
};

export type ModelEvolinciteCrmNegotiationFieldValueConditionInput = {
  value?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCrmNegotiationFieldID?: ModelIDInput | null;
  evolinciteCrmNegotiationID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteCrmNegotiationFieldValueConditionInput | null> | null;
  or?: Array<ModelEvolinciteCrmNegotiationFieldValueConditionInput | null> | null;
  not?: ModelEvolinciteCrmNegotiationFieldValueConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteCrmNegotiationFieldValueInput = {
  id: string;
  value?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCrmNegotiationFieldID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
};

export type DeleteEvolinciteCrmNegotiationFieldValueInput = {
  id: string;
};

export type CreateEvolinciteEmailInput = {
  id?: string | null;
  from?: string | null;
  to?: string | null;
  content?: string | null;
  subject?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type ModelEvolinciteEmailConditionInput = {
  from?: ModelStringInput | null;
  to?: ModelStringInput | null;
  content?: ModelStringInput | null;
  subject?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteEmailConditionInput | null> | null;
  or?: Array<ModelEvolinciteEmailConditionInput | null> | null;
  not?: ModelEvolinciteEmailConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteEmailInput = {
  id: string;
  from?: string | null;
  to?: string | null;
  content?: string | null;
  subject?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type DeleteEvolinciteEmailInput = {
  id: string;
};

export type CreateEvolinciteEmailTemplateInput = {
  id?: string | null;
  content?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type ModelEvolinciteEmailTemplateConditionInput = {
  content?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteEmailTemplateConditionInput | null> | null;
  or?: Array<ModelEvolinciteEmailTemplateConditionInput | null> | null;
  not?: ModelEvolinciteEmailTemplateConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteEmailTemplateInput = {
  id: string;
  content?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type DeleteEvolinciteEmailTemplateInput = {
  id: string;
};

export type CreateEvolinciteNotificationInput = {
  id?: string | null;
  content?: string | null;
  title?: string | null;
  priority?: EvolinciteNotificationPriority | null;
  type?: EvolunciteNotificationType | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteNotificationConditionInput = {
  content?: ModelStringInput | null;
  title?: ModelStringInput | null;
  priority?: ModelEvolinciteNotificationPriorityInput | null;
  type?: ModelEvolunciteNotificationTypeInput | null;
  meta?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteNotificationConditionInput | null> | null;
  or?: Array<ModelEvolinciteNotificationConditionInput | null> | null;
  not?: ModelEvolinciteNotificationConditionInput | null;
};

export type ModelEvolinciteNotificationPriorityInput = {
  eq?: EvolinciteNotificationPriority | null;
  ne?: EvolinciteNotificationPriority | null;
};

export type ModelEvolunciteNotificationTypeInput = {
  eq?: EvolunciteNotificationType | null;
  ne?: EvolunciteNotificationType | null;
};

export type UpdateEvolinciteNotificationInput = {
  id: string;
  content?: string | null;
  title?: string | null;
  priority?: EvolinciteNotificationPriority | null;
  type?: EvolunciteNotificationType | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteNotificationInput = {
  id: string;
};

export type CreateEvolinciteUserDepartmentInput = {
  id?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  evolinciteDepartmentID?: string | null;
};

export type ModelEvolinciteUserDepartmentConditionInput = {
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteDepartmentID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteUserDepartmentConditionInput | null> | null;
  or?: Array<ModelEvolinciteUserDepartmentConditionInput | null> | null;
  not?: ModelEvolinciteUserDepartmentConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteUserDepartmentInput = {
  id: string;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  evolinciteDepartmentID?: string | null;
};

export type DeleteEvolinciteUserDepartmentInput = {
  id: string;
};

export type CreateEvolinciteUserEvolinciteCompanyInput = {
  id?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
};

export type ModelEvolinciteUserEvolinciteCompanyConditionInput = {
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteUserEvolinciteCompanyConditionInput | null> | null;
  or?: Array<ModelEvolinciteUserEvolinciteCompanyConditionInput | null> | null;
  not?: ModelEvolinciteUserEvolinciteCompanyConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteUserEvolinciteCompanyInput = {
  id: string;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
};

export type DeleteEvolinciteUserEvolinciteCompanyInput = {
  id: string;
};

export type CreateEvolinciteUserInput = {
  id?: string | null;
  name?: string | null;
  nit?: string | null;
  phone?: string | null;
  picture?: string | null;
  email?: string | null;
  sub?: string | null;
  meta?: string | null;
  cv?: string | null;
  contract?: string | null;
  memos?: Array<string | null> | null;
  personalMail?: string | null;
  personalPhone?: string | null;
  state?: EvolinciteStates | null;
};

export type ModelEvolinciteUserConditionInput = {
  name?: ModelStringInput | null;
  nit?: ModelStringInput | null;
  phone?: ModelStringInput | null;
  picture?: ModelStringInput | null;
  email?: ModelStringInput | null;
  sub?: ModelIDInput | null;
  meta?: ModelStringInput | null;
  cv?: ModelStringInput | null;
  contract?: ModelStringInput | null;
  memos?: ModelStringInput | null;
  personalMail?: ModelStringInput | null;
  personalPhone?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  and?: Array<ModelEvolinciteUserConditionInput | null> | null;
  or?: Array<ModelEvolinciteUserConditionInput | null> | null;
  not?: ModelEvolinciteUserConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteUserInput = {
  id: string;
  name?: string | null;
  nit?: string | null;
  phone?: string | null;
  picture?: string | null;
  email?: string | null;
  sub?: string | null;
  meta?: string | null;
  cv?: string | null;
  contract?: string | null;
  memos?: Array<string | null> | null;
  personalMail?: string | null;
  personalPhone?: string | null;
  state?: EvolinciteStates | null;
};

export type DeleteEvolinciteUserInput = {
  id: string;
};

export type CreateEvolinciteCompanyInput = {
  id?: string | null;
  name?: string | null;
  nit?: string | null;
  picture?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteSubscriptionID?: string | null;
};

export type ModelEvolinciteCompanyConditionInput = {
  name?: ModelStringInput | null;
  nit?: ModelStringInput | null;
  picture?: ModelStringInput | null;
  meta?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteSubscriptionID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteCompanyConditionInput | null> | null;
  or?: Array<ModelEvolinciteCompanyConditionInput | null> | null;
  not?: ModelEvolinciteCompanyConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteCompanyInput = {
  id: string;
  name?: string | null;
  nit?: string | null;
  picture?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteSubscriptionID?: string | null;
};

export type DeleteEvolinciteCompanyInput = {
  id: string;
};

export type CreateEvolinciteGoalInput = {
  id?: string | null;
  name?: string | null;
  description?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type ModelEvolinciteGoalConditionInput = {
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteGoalConditionInput | null> | null;
  or?: Array<ModelEvolinciteGoalConditionInput | null> | null;
  not?: ModelEvolinciteGoalConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteGoalInput = {
  id: string;
  name?: string | null;
  description?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type DeleteEvolinciteGoalInput = {
  id: string;
};

export type CreateEvolinciteWalletPaymentLogInput = {
  id?: string | null;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteWalletPaymentID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteWalletPaymentLogConditionInput = {
  log?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteWalletPaymentID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteWalletPaymentLogConditionInput | null> | null;
  or?: Array<ModelEvolinciteWalletPaymentLogConditionInput | null> | null;
  not?: ModelEvolinciteWalletPaymentLogConditionInput | null;
};

export type UpdateEvolinciteWalletPaymentLogInput = {
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteWalletPaymentID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteWalletPaymentLogInput = {
  id: string;
};

export type CreateEvolinciteExpenseLogInput = {
  id?: string | null;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteExpenseID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteExpenseLogConditionInput = {
  log?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteExpenseID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteExpenseLogConditionInput | null> | null;
  or?: Array<ModelEvolinciteExpenseLogConditionInput | null> | null;
  not?: ModelEvolinciteExpenseLogConditionInput | null;
};

export type UpdateEvolinciteExpenseLogInput = {
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteExpenseID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteExpenseLogInput = {
  id: string;
};

export type CreateEvolinciteTicketInput = {
  id?: string | null;
  name?: string | null;
  description?: string | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  ticketState?: EvolinciteTicketState | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyOwnerID?: string | null;
  evolinciteCompanyOriginID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteTicketConditionInput = {
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  documents?: ModelStringInput | null;
  meta?: ModelStringInput | null;
  ticketState?: ModelEvolinciteTicketStateInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyOwnerID?: ModelIDInput | null;
  evolinciteCompanyOriginID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteTicketConditionInput | null> | null;
  or?: Array<ModelEvolinciteTicketConditionInput | null> | null;
  not?: ModelEvolinciteTicketConditionInput | null;
};

export type ModelEvolinciteTicketStateInput = {
  eq?: EvolinciteTicketState | null;
  ne?: EvolinciteTicketState | null;
};

export type UpdateEvolinciteTicketInput = {
  id: string;
  name?: string | null;
  description?: string | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  ticketState?: EvolinciteTicketState | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyOwnerID?: string | null;
  evolinciteCompanyOriginID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteTicketInput = {
  id: string;
};

export type CreateEvolinciteTicketLogInput = {
  id?: string | null;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteTicketID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteTicketLogConditionInput = {
  log?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteTicketID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteTicketLogConditionInput | null> | null;
  or?: Array<ModelEvolinciteTicketLogConditionInput | null> | null;
  not?: ModelEvolinciteTicketLogConditionInput | null;
};

export type UpdateEvolinciteTicketLogInput = {
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteTicketID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteTicketLogInput = {
  id: string;
};

export type CreateEvolinciteFileInput = {
  id?: string | null;
  name?: string | null;
  size?: number | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteFolderID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteFileConditionInput = {
  name?: ModelStringInput | null;
  size?: ModelIntInput | null;
  meta?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteFolderID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteFileConditionInput | null> | null;
  or?: Array<ModelEvolinciteFileConditionInput | null> | null;
  not?: ModelEvolinciteFileConditionInput | null;
};

export type UpdateEvolinciteFileInput = {
  id: string;
  name?: string | null;
  size?: number | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteFolderID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteFileInput = {
  id: string;
};

export type CreateEvolinciteFolderInput = {
  id?: string | null;
  parent?: string | null;
  name?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteUserOwnerID?: string | null;
  evolinciteCompanyID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteFolderConditionInput = {
  parent?: ModelIDInput | null;
  name?: ModelStringInput | null;
  meta?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteUserOwnerID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteFolderConditionInput | null> | null;
  or?: Array<ModelEvolinciteFolderConditionInput | null> | null;
  not?: ModelEvolinciteFolderConditionInput | null;
};

export type UpdateEvolinciteFolderInput = {
  id: string;
  parent?: string | null;
  name?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteUserOwnerID?: string | null;
  evolinciteCompanyID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteFolderInput = {
  id: string;
};

export type CreateEvolinciteArticleInput = {
  id?: string | null;
  front?: string | null;
  cover?: Array<string | null> | null;
  title?: string | null;
  content?: string | null;
  articleState?: EvolinciteArticleStates | null;
  visibility?: Array<string | null> | null;
  publicationDate?: string | null;
  meta?: string | null;
  files?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteArticleConditionInput = {
  front?: ModelStringInput | null;
  cover?: ModelStringInput | null;
  title?: ModelStringInput | null;
  content?: ModelStringInput | null;
  articleState?: ModelEvolinciteArticleStatesInput | null;
  visibility?: ModelStringInput | null;
  publicationDate?: ModelStringInput | null;
  meta?: ModelStringInput | null;
  files?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteArticleConditionInput | null> | null;
  or?: Array<ModelEvolinciteArticleConditionInput | null> | null;
  not?: ModelEvolinciteArticleConditionInput | null;
};

export type ModelEvolinciteArticleStatesInput = {
  eq?: EvolinciteArticleStates | null;
  ne?: EvolinciteArticleStates | null;
};

export type UpdateEvolinciteArticleInput = {
  id: string;
  front?: string | null;
  cover?: Array<string | null> | null;
  title?: string | null;
  content?: string | null;
  articleState?: EvolinciteArticleStates | null;
  visibility?: Array<string | null> | null;
  publicationDate?: string | null;
  meta?: string | null;
  files?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteArticleInput = {
  id: string;
};

export type CreateEvolinciteArticleCommentInput = {
  id?: string | null;
  content?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteArticleID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteArticleCommentConditionInput = {
  content?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteArticleID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteArticleCommentConditionInput | null> | null;
  or?: Array<ModelEvolinciteArticleCommentConditionInput | null> | null;
  not?: ModelEvolinciteArticleCommentConditionInput | null;
};

export type UpdateEvolinciteArticleCommentInput = {
  id: string;
  content?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteArticleID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteArticleCommentInput = {
  id: string;
};

export type CreateEvolinciteFormConfigurationInput = {
  id?: string | null;
  key?: string | null;
  name?: string | null;
  config?: string | null;
  meta?: string | null;
  title?: string | null;
  description?: string | null;
  observations?: string | null;
  front?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteFormConfigurationConditionInput = {
  key?: ModelIDInput | null;
  name?: ModelStringInput | null;
  config?: ModelStringInput | null;
  meta?: ModelStringInput | null;
  title?: ModelStringInput | null;
  description?: ModelStringInput | null;
  observations?: ModelStringInput | null;
  front?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteFormConfigurationConditionInput | null> | null;
  or?: Array<ModelEvolinciteFormConfigurationConditionInput | null> | null;
  not?: ModelEvolinciteFormConfigurationConditionInput | null;
};

export type UpdateEvolinciteFormConfigurationInput = {
  id: string;
  key?: string | null;
  name?: string | null;
  config?: string | null;
  meta?: string | null;
  title?: string | null;
  description?: string | null;
  observations?: string | null;
  front?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteFormConfigurationInput = {
  id: string;
};

export type CreateEvolinciteFormAnswerInput = {
  id?: string | null;
  meta?: string | null;
  answerState?: EvolinciteSurveyAnswerState | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteFormConfigurationID?: string | null;
  evolinciteCompanyID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteFormAnswerConditionInput = {
  meta?: ModelStringInput | null;
  answerState?: ModelEvolinciteSurveyAnswerStateInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteFormConfigurationID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteFormAnswerConditionInput | null> | null;
  or?: Array<ModelEvolinciteFormAnswerConditionInput | null> | null;
  not?: ModelEvolinciteFormAnswerConditionInput | null;
};

export type ModelEvolinciteSurveyAnswerStateInput = {
  eq?: EvolinciteSurveyAnswerState | null;
  ne?: EvolinciteSurveyAnswerState | null;
};

export type UpdateEvolinciteFormAnswerInput = {
  id: string;
  meta?: string | null;
  answerState?: EvolinciteSurveyAnswerState | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteFormConfigurationID?: string | null;
  evolinciteCompanyID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteFormAnswerInput = {
  id: string;
};

export type CreateEvolincitePaymentAutomationInput = {
  id?: string | null;
  name?: string | null;
  setting?: string | null;
  order?: number | null;
  repeat?: boolean | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type ModelEvolincitePaymentAutomationConditionInput = {
  name?: ModelStringInput | null;
  setting?: ModelStringInput | null;
  order?: ModelFloatInput | null;
  repeat?: ModelBooleanInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  and?: Array<ModelEvolincitePaymentAutomationConditionInput | null> | null;
  or?: Array<ModelEvolincitePaymentAutomationConditionInput | null> | null;
  not?: ModelEvolincitePaymentAutomationConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolincitePaymentAutomationInput = {
  id: string;
  name?: string | null;
  setting?: string | null;
  order?: number | null;
  repeat?: boolean | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type DeleteEvolincitePaymentAutomationInput = {
  id: string;
};

export type CreateEvolinciteMailInput = {
  id?: string | null;
  destinations?: Array<string | null> | null;
  subject?: string | null;
  content?: string | null;
  submissionStatus?: EvolinciteMailStates | null;
  setting?: string | null;
  response?: string | null;
  files?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteMailConditionInput = {
  destinations?: ModelStringInput | null;
  subject?: ModelStringInput | null;
  content?: ModelStringInput | null;
  submissionStatus?: ModelEvolinciteMailStatesInput | null;
  setting?: ModelStringInput | null;
  response?: ModelStringInput | null;
  files?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteMailConditionInput | null> | null;
  or?: Array<ModelEvolinciteMailConditionInput | null> | null;
  not?: ModelEvolinciteMailConditionInput | null;
};

export type ModelEvolinciteMailStatesInput = {
  eq?: EvolinciteMailStates | null;
  ne?: EvolinciteMailStates | null;
};

export type UpdateEvolinciteMailInput = {
  id: string;
  destinations?: Array<string | null> | null;
  subject?: string | null;
  content?: string | null;
  submissionStatus?: EvolinciteMailStates | null;
  setting?: string | null;
  response?: string | null;
  files?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteMailInput = {
  id: string;
};

export type CreateEvolinciteMailConfigurationInput = {
  id?: string | null;
  SMTP?: string | null;
  email?: string | null;
  password?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
};

export type ModelEvolinciteMailConfigurationConditionInput = {
  SMTP?: ModelStringInput | null;
  email?: ModelStringInput | null;
  password?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteMailConfigurationConditionInput | null> | null;
  or?: Array<ModelEvolinciteMailConfigurationConditionInput | null> | null;
  not?: ModelEvolinciteMailConfigurationConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type EvolinciteMailConfiguration = {
  __typename: 'EvolinciteMailConfiguration';
  id: string;
  SMTP?: string | null;
  email?: string | null;
  password?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteMailConfigurationInput = {
  id: string;
  SMTP?: string | null;
  email?: string | null;
  password?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
};

export type DeleteEvolinciteMailConfigurationInput = {
  id: string;
};

export type CreateEvolinciteMailTemplateInput = {
  id?: string | null;
  destinations?: Array<string | null> | null;
  subject?: string | null;
  content?: string | null;
  files?: Array<string | null> | null;
  transmitter?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type ModelEvolinciteMailTemplateConditionInput = {
  destinations?: ModelStringInput | null;
  subject?: ModelStringInput | null;
  content?: ModelStringInput | null;
  files?: ModelStringInput | null;
  transmitter?: ModelIDInput | null;
  meta?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteMailTemplateConditionInput | null> | null;
  or?: Array<ModelEvolinciteMailTemplateConditionInput | null> | null;
  not?: ModelEvolinciteMailTemplateConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteMailTemplateInput = {
  id: string;
  destinations?: Array<string | null> | null;
  subject?: string | null;
  content?: string | null;
  files?: Array<string | null> | null;
  transmitter?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
};

export type DeleteEvolinciteMailTemplateInput = {
  id: string;
};

export type CreateEvolinciteMailTemplateLogInput = {
  id?: string | null;
  key?: string | null;
  log?: string | null;
  date?: string | null;
  previousLog?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteMailTemplateLogConditionInput = {
  key?: ModelIDInput | null;
  log?: ModelStringInput | null;
  date?: ModelStringInput | null;
  previousLog?: ModelIDInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteMailTemplateLogConditionInput | null> | null;
  or?: Array<ModelEvolinciteMailTemplateLogConditionInput | null> | null;
  not?: ModelEvolinciteMailTemplateLogConditionInput | null;
};

export type EvolinciteMailTemplateLog = {
  __typename: 'EvolinciteMailTemplateLog';
  id: string;
  key?: string | null;
  log?: string | null;
  date?: string | null;
  previousLog?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteMailTemplateLogInput = {
  id: string;
  key?: string | null;
  log?: string | null;
  date?: string | null;
  previousLog?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteMailTemplateLogInput = {
  id: string;
};

export type CreateEvolincitePackageInput = {
  id?: string | null;
  name?: string | null;
  description?: string | null;
  goal?: string | null;
  duration?: number | null;
  state?: EvolinciteStates | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolincitePackageConditionInput = {
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  goal?: ModelStringInput | null;
  duration?: ModelIntInput | null;
  state?: ModelEvolinciteStatesInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolincitePackageConditionInput | null> | null;
  or?: Array<ModelEvolincitePackageConditionInput | null> | null;
  not?: ModelEvolincitePackageConditionInput | null;
};

export type UpdateEvolincitePackageInput = {
  id: string;
  name?: string | null;
  description?: string | null;
  goal?: string | null;
  duration?: number | null;
  state?: EvolinciteStates | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolincitePackageInput = {
  id: string;
};

export type CreateEvolinciteCompanySubscriptionInput = {
  id?: string | null;
  name?: string | null;
  price?: number | null;
  dateInitial?: string | null;
  dateFinal?: string | null;
  activatorUser?: string | null;
  state?: EvolinciteStates | null;
  evolincitePackageID?: string | null;
  evolinciteCompanyID?: string | null;
};

export type ModelEvolinciteCompanySubscriptionConditionInput = {
  name?: ModelStringInput | null;
  price?: ModelIntInput | null;
  dateInitial?: ModelStringInput | null;
  dateFinal?: ModelStringInput | null;
  activatorUser?: ModelIDInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolincitePackageID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteCompanySubscriptionConditionInput | null> | null;
  or?: Array<ModelEvolinciteCompanySubscriptionConditionInput | null> | null;
  not?: ModelEvolinciteCompanySubscriptionConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteCompanySubscriptionInput = {
  id: string;
  name?: string | null;
  price?: number | null;
  dateInitial?: string | null;
  dateFinal?: string | null;
  activatorUser?: string | null;
  state?: EvolinciteStates | null;
  evolincitePackageID?: string | null;
  evolinciteCompanyID?: string | null;
};

export type DeleteEvolinciteCompanySubscriptionInput = {
  id: string;
};

export type CreateEvolinciteEmployeeObservationInput = {
  id?: string | null;
  name?: string | null;
  content?: string | null;
  isPublic?: boolean | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteEmployeeObservationConditionInput = {
  name?: ModelStringInput | null;
  content?: ModelStringInput | null;
  isPublic?: ModelBooleanInput | null;
  meta?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteEmployeeObservationConditionInput | null> | null;
  or?: Array<ModelEvolinciteEmployeeObservationConditionInput | null> | null;
  not?: ModelEvolinciteEmployeeObservationConditionInput | null;
};

export type UpdateEvolinciteEmployeeObservationInput = {
  id: string;
  name?: string | null;
  content?: string | null;
  isPublic?: boolean | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteEmployeeObservationInput = {
  id: string;
};

export type CreateEvolinciteTagInput = {
  id?: string | null;
  name?: string | null;
  description?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteTagConditionInput = {
  name?: ModelIDInput | null;
  description?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteTagConditionInput | null> | null;
  or?: Array<ModelEvolinciteTagConditionInput | null> | null;
  not?: ModelEvolinciteTagConditionInput | null;
};

export type EvolinciteTag = {
  __typename: 'EvolinciteTag';
  id: string;
  name?: string | null;
  description?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteTagInput = {
  id: string;
  name?: string | null;
  description?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteTagInput = {
  id: string;
};

export type CreateEvolinciteMilestoneInput = {
  name?: string | null;
  description?: string | null;
  tags?: Array<string | null> | null;
  type?: EvolunciteMilestoneType | null;
  config?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  employees?: Array<string | null> | null;
  managers?: Array<string | null> | null;
  isClosed?: boolean | null;
  closingNotes?: string | null;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
  id?: string | null;
};

export enum EvolunciteMilestoneType {
  AMOUNT = 'AMOUNT',
  CLIENTS = 'CLIENTS',
  PROCESSES = 'PROCESSES',
  GOALS = 'GOALS',
  TASKS = 'TASKS',
}

export type ModelEvolinciteMilestoneConditionInput = {
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  tags?: ModelIDInput | null;
  type?: ModelEvolunciteMilestoneTypeInput | null;
  config?: ModelStringInput | null;
  startDate?: ModelStringInput | null;
  endDate?: ModelStringInput | null;
  employees?: ModelIDInput | null;
  managers?: ModelIDInput | null;
  isClosed?: ModelBooleanInput | null;
  closingNotes?: ModelStringInput | null;
  log?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteMilestoneConditionInput | null> | null;
  or?: Array<ModelEvolinciteMilestoneConditionInput | null> | null;
  not?: ModelEvolinciteMilestoneConditionInput | null;
};

export type ModelEvolunciteMilestoneTypeInput = {
  eq?: EvolunciteMilestoneType | null;
  ne?: EvolunciteMilestoneType | null;
};

export type EvolinciteMilestone = {
  __typename: 'EvolinciteMilestone';
  name?: string | null;
  description?: string | null;
  tags?: Array<string | null> | null;
  type?: EvolunciteMilestoneType | null;
  config?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  employees?: Array<string | null> | null;
  managers?: Array<string | null> | null;
  isClosed?: boolean | null;
  closingNotes?: string | null;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
  id: string;
};

export type UpdateEvolinciteMilestoneInput = {
  name?: string | null;
  description?: string | null;
  tags?: Array<string | null> | null;
  type?: EvolunciteMilestoneType | null;
  config?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  employees?: Array<string | null> | null;
  managers?: Array<string | null> | null;
  isClosed?: boolean | null;
  closingNotes?: string | null;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
  id: string;
};

export type DeleteEvolinciteMilestoneInput = {
  id: string;
};

export type CreateEvolinciteUserLogInput = {
  id?: string | null;
  log?: string | null;
  functionality?: EvolinciteFunctionalities | null;
  state?: EvolinciteStates | null;
  key?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteUserLogConditionInput = {
  log?: ModelStringInput | null;
  functionality?: ModelEvolinciteFunctionalitiesInput | null;
  state?: ModelEvolinciteStatesInput | null;
  key?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteUserLogConditionInput | null> | null;
  or?: Array<ModelEvolinciteUserLogConditionInput | null> | null;
  not?: ModelEvolinciteUserLogConditionInput | null;
};

export type ModelEvolinciteFunctionalitiesInput = {
  eq?: EvolinciteFunctionalities | null;
  ne?: EvolinciteFunctionalities | null;
};

export type EvolinciteUserLog = {
  __typename: 'EvolinciteUserLog';
  id: string;
  log?: string | null;
  functionality?: EvolinciteFunctionalities | null;
  state?: EvolinciteStates | null;
  key?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteUserLogInput = {
  id: string;
  log?: string | null;
  functionality?: EvolinciteFunctionalities | null;
  state?: EvolinciteStates | null;
  key?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteUserLogInput = {
  id: string;
};

export type CreateEvolinciteUserTimeTrackingInput = {
  id?: string | null;
  time?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteUserTimeTrackingConditionInput = {
  time?: ModelIntInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteUserTimeTrackingConditionInput | null> | null;
  or?: Array<ModelEvolinciteUserTimeTrackingConditionInput | null> | null;
  not?: ModelEvolinciteUserTimeTrackingConditionInput | null;
};

export type EvolinciteUserTimeTracking = {
  __typename: 'EvolinciteUserTimeTracking';
  id: string;
  time?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteUserTimeTrackingInput = {
  id: string;
  time?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteUserTimeTrackingInput = {
  id: string;
};

export type CreateEvolinciteScheduleInput = {
  id?: string | null;
  name?: string | null;
  description?: string | null;
  config?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ModelEvolinciteScheduleConditionInput = {
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  config?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteScheduleConditionInput | null> | null;
  or?: Array<ModelEvolinciteScheduleConditionInput | null> | null;
  not?: ModelEvolinciteScheduleConditionInput | null;
};

export type EvolinciteSchedule = {
  __typename: 'EvolinciteSchedule';
  id: string;
  name?: string | null;
  description?: string | null;
  config?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteScheduleInput = {
  id: string;
  name?: string | null;
  description?: string | null;
  config?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteScheduleInput = {
  id: string;
};

export type CreateEvolinciteTemplateRequestInput = {
  id?: string | null;
  name?: string | null;
  description?: string | null;
  tags?: Array<string | null> | null;
  questions?: string | null;
  elementType?: EvolunciteRequestType | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  owners?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export enum EvolunciteRequestType {
  NEGOTIATION = 'NEGOTIATION',
  PAY = 'PAY',
  EXPENSE = 'EXPENSE',
  GENERAL = 'GENERAL',
}

export type ModelEvolinciteTemplateRequestConditionInput = {
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  tags?: ModelIDInput | null;
  questions?: ModelStringInput | null;
  elementType?: ModelEvolunciteRequestTypeInput | null;
  documents?: ModelStringInput | null;
  meta?: ModelStringInput | null;
  owners?: ModelIDInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteTemplateRequestConditionInput | null> | null;
  or?: Array<ModelEvolinciteTemplateRequestConditionInput | null> | null;
  not?: ModelEvolinciteTemplateRequestConditionInput | null;
};

export type ModelEvolunciteRequestTypeInput = {
  eq?: EvolunciteRequestType | null;
  ne?: EvolunciteRequestType | null;
};

export type EvolinciteTemplateRequest = {
  __typename: 'EvolinciteTemplateRequest';
  id: string;
  name?: string | null;
  description?: string | null;
  tags?: Array<string | null> | null;
  questions?: string | null;
  elementType?: EvolunciteRequestType | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  owners?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteTemplateRequestInput = {
  id: string;
  name?: string | null;
  description?: string | null;
  tags?: Array<string | null> | null;
  questions?: string | null;
  elementType?: EvolunciteRequestType | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  owners?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteTemplateRequestInput = {
  id: string;
};

export type CreateEvolinciteRequestInput = {
  id?: string | null;
  templateID?: string | null;
  answers?: string | null;
  requester?: string | null;
  priority?: EvolinciteRequestPriority | null;
  elementID?: Array<string | null> | null;
  elementType?: EvolunciteRequestType | null;
  status?: EvolinciteRequestStatus | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export enum EvolinciteRequestPriority {
  HIGH = 'HIGH',
  MEDIUM = 'MEDIUM',
  LOW = 'LOW',
}

export enum EvolinciteRequestStatus {
  ACCEPTED = 'ACCEPTED',
  REJECTED = 'REJECTED',
}

export type ModelEvolinciteRequestConditionInput = {
  templateID?: ModelIDInput | null;
  answers?: ModelStringInput | null;
  requester?: ModelIDInput | null;
  priority?: ModelEvolinciteRequestPriorityInput | null;
  elementID?: ModelIDInput | null;
  elementType?: ModelEvolunciteRequestTypeInput | null;
  status?: ModelEvolinciteRequestStatusInput | null;
  meta?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteRequestConditionInput | null> | null;
  or?: Array<ModelEvolinciteRequestConditionInput | null> | null;
  not?: ModelEvolinciteRequestConditionInput | null;
};

export type ModelEvolinciteRequestPriorityInput = {
  eq?: EvolinciteRequestPriority | null;
  ne?: EvolinciteRequestPriority | null;
};

export type ModelEvolinciteRequestStatusInput = {
  eq?: EvolinciteRequestStatus | null;
  ne?: EvolinciteRequestStatus | null;
};

export type EvolinciteRequest = {
  __typename: 'EvolinciteRequest';
  id: string;
  templateID?: string | null;
  answers?: string | null;
  requester?: string | null;
  priority?: EvolinciteRequestPriority | null;
  elementID?: Array<string | null> | null;
  elementType?: EvolunciteRequestType | null;
  status?: EvolinciteRequestStatus | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteRequestInput = {
  id: string;
  templateID?: string | null;
  answers?: string | null;
  requester?: string | null;
  priority?: EvolinciteRequestPriority | null;
  elementID?: Array<string | null> | null;
  elementType?: EvolunciteRequestType | null;
  status?: EvolinciteRequestStatus | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteRequestInput = {
  id: string;
};

export type CreateEvolinciteActivityEvolinciteUserInput = {
  id?: string | null;
  evolinciteActivityId: string;
  evolinciteUserId: string;
};

export type ModelEvolinciteActivityEvolinciteUserConditionInput = {
  evolinciteActivityId?: ModelIDInput | null;
  evolinciteUserId?: ModelIDInput | null;
  and?: Array<ModelEvolinciteActivityEvolinciteUserConditionInput | null> | null;
  or?: Array<ModelEvolinciteActivityEvolinciteUserConditionInput | null> | null;
  not?: ModelEvolinciteActivityEvolinciteUserConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteActivityEvolinciteUserInput = {
  id: string;
  evolinciteActivityId?: string | null;
  evolinciteUserId?: string | null;
};

export type DeleteEvolinciteActivityEvolinciteUserInput = {
  id: string;
};

export type CreateEvolinciteUserEvolinciteCrmNegotiationInput = {
  id?: string | null;
  evolinciteCrmNegotiationId: string;
  evolinciteUserId: string;
};

export type ModelEvolinciteUserEvolinciteCrmNegotiationConditionInput = {
  evolinciteCrmNegotiationId?: ModelIDInput | null;
  evolinciteUserId?: ModelIDInput | null;
  and?: Array<ModelEvolinciteUserEvolinciteCrmNegotiationConditionInput | null> | null;
  or?: Array<ModelEvolinciteUserEvolinciteCrmNegotiationConditionInput | null> | null;
  not?: ModelEvolinciteUserEvolinciteCrmNegotiationConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteUserEvolinciteCrmNegotiationInput = {
  id: string;
  evolinciteCrmNegotiationId?: string | null;
  evolinciteUserId?: string | null;
};

export type DeleteEvolinciteUserEvolinciteCrmNegotiationInput = {
  id: string;
};

export type CreateEvolinciteRoomEvolinciteUserInput = {
  id?: string | null;
  evolinciteRoomId: string;
  evolinciteUserId: string;
};

export type ModelEvolinciteRoomEvolinciteUserConditionInput = {
  evolinciteRoomId?: ModelIDInput | null;
  evolinciteUserId?: ModelIDInput | null;
  and?: Array<ModelEvolinciteRoomEvolinciteUserConditionInput | null> | null;
  or?: Array<ModelEvolinciteRoomEvolinciteUserConditionInput | null> | null;
  not?: ModelEvolinciteRoomEvolinciteUserConditionInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
};

export type UpdateEvolinciteRoomEvolinciteUserInput = {
  id: string;
  evolinciteRoomId?: string | null;
  evolinciteUserId?: string | null;
};

export type DeleteEvolinciteRoomEvolinciteUserInput = {
  id: string;
};

export type ModelEvolinciteCompetenceFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  content?: ModelStringInput | null;
  application?: ModelEvolinciteApplicationInput | null;
  state?: ModelEvolinciteStatesInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteCompetenceFilterInput | null> | null;
  or?: Array<ModelEvolinciteCompetenceFilterInput | null> | null;
  not?: ModelEvolinciteCompetenceFilterInput | null;
  evolinciteCompetenceEvolinciteSyllabusId?: ModelIDInput | null;
};

export type ModelEvolinciteCompetenceConnection = {
  __typename: 'ModelEvolinciteCompetenceConnection';
  items: Array<EvolinciteCompetence | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteCourseFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  durationUnit?: ModelStringInput | null;
  duration?: ModelIntInput | null;
  objectives?: ModelStringInput | null;
  application?: ModelEvolinciteApplicationInput | null;
  state?: ModelEvolinciteStatesInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteCourseFilterInput | null> | null;
  or?: Array<ModelEvolinciteCourseFilterInput | null> | null;
  not?: ModelEvolinciteCourseFilterInput | null;
  evolinciteCourseEvolinciteSyllabusId?: ModelIDInput | null;
};

export type ModelEvolinciteCourseConnection = {
  __typename: 'ModelEvolinciteCourseConnection';
  items: Array<EvolinciteCourse | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteSyllabusFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  content?: ModelStringInput | null;
  application?: ModelEvolinciteApplicationInput | null;
  state?: ModelEvolinciteStatesInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteSyllabusFilterInput | null> | null;
  or?: Array<ModelEvolinciteSyllabusFilterInput | null> | null;
  not?: ModelEvolinciteSyllabusFilterInput | null;
  evolinciteSyllabusEvolinciteCompetenceId?: ModelIDInput | null;
};

export type ModelEvolinciteSyllabusConnection = {
  __typename: 'ModelEvolinciteSyllabusConnection';
  items: Array<EvolinciteSyllabus | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteUserAnswersFilterInput = {
  id?: ModelIDInput | null;
  answers?: ModelStringInput | null;
  application?: ModelEvolinciteApplicationInput | null;
  state?: ModelEvolinciteStatesInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteUserAnswersFilterInput | null> | null;
  or?: Array<ModelEvolinciteUserAnswersFilterInput | null> | null;
  not?: ModelEvolinciteUserAnswersFilterInput | null;
  evolinciteUserAnswersEvolinciteUserId?: ModelIDInput | null;
  evolinciteUserAnswersEvolinciteSyllabusId?: ModelIDInput | null;
};

export type ModelEvolinciteUserAnswersConnection = {
  __typename: 'ModelEvolinciteUserAnswersConnection';
  items: Array<EvolinciteUserAnswers | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteProcessTypeFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  order?: ModelIntInput | null;
  sellerCommission?: ModelFloatInput | null;
  referrerCommission?: ModelFloatInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteProcessTypeFilterInput | null> | null;
  or?: Array<ModelEvolinciteProcessTypeFilterInput | null> | null;
  not?: ModelEvolinciteProcessTypeFilterInput | null;
};

export enum ModelSortDirection {
  ASC = 'ASC',
  DESC = 'DESC',
}

export type ModelEvolinciteExpenseTypeFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  type?: ModelEvolinciteFieldInput | null;
  setting?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteExpenseTypeFilterInput | null> | null;
  or?: Array<ModelEvolinciteExpenseTypeFilterInput | null> | null;
  not?: ModelEvolinciteExpenseTypeFilterInput | null;
};

export type ModelEvolinciteExpenseFilterInput = {
  id?: ModelIDInput | null;
  amount?: ModelIntInput | null;
  process?: ModelStringInput | null;
  expenseState?: ModelEvolinciteExpenseStatesInput | null;
  expenseDate?: ModelStringInput | null;
  observations?: ModelStringInput | null;
  voucher?: ModelStringInput | null;
  transactionType?: ModelEvolinciteTransactionTypeInput | null;
  reference?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteExpenseTypeID?: ModelIDInput | null;
  evolinciteCrmNegotiationID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteUserResponsibleID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteExpenseFilterInput | null> | null;
  or?: Array<ModelEvolinciteExpenseFilterInput | null> | null;
  not?: ModelEvolinciteExpenseFilterInput | null;
};

export type ModelStringKeyConditionInput = {
  eq?: string | null;
  le?: string | null;
  lt?: string | null;
  ge?: string | null;
  gt?: string | null;
  between?: Array<string | null> | null;
  beginsWith?: string | null;
};

export type ModelEvolinciteUserEvolinciteJobTitleFilterInput = {
  id?: ModelIDInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteJobTitleID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteUserEvolinciteJobTitleFilterInput | null> | null;
  or?: Array<ModelEvolinciteUserEvolinciteJobTitleFilterInput | null> | null;
  not?: ModelEvolinciteUserEvolinciteJobTitleFilterInput | null;
};

export type ModelEvolinciteJobTitleFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  salary?: ModelIntInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteJobTitleFilterInput | null> | null;
  or?: Array<ModelEvolinciteJobTitleFilterInput | null> | null;
  not?: ModelEvolinciteJobTitleFilterInput | null;
};

export type ModelEvolinciteWalletPaymentFilterInput = {
  id?: ModelIDInput | null;
  amount?: ModelIntInput | null;
  scheduledDate?: ModelStringInput | null;
  datePayment?: ModelStringInput | null;
  paymentStatus?: ModelEvolinciteWalletPaymentStatusInput | null;
  prePayment?: ModelStringInput | null;
  postPayment?: ModelStringInput | null;
  observations?: ModelStringInput | null;
  voucher?: ModelStringInput | null;
  transactionType?: ModelEvolinciteTransactionTypeInput | null;
  reference?: ModelStringInput | null;
  amountInterest?: ModelIntInput | null;
  amountCollection?: ModelIntInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserReferrerID?: ModelIDInput | null;
  evolinciteUserSellerID?: ModelIDInput | null;
  evolinciteCrmNegotiationID?: ModelIDInput | null;
  evolinciteCustomerID?: ModelIDInput | null;
  evolinciteUserResponsibleID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteWalletPaymentFilterInput | null> | null;
  or?: Array<ModelEvolinciteWalletPaymentFilterInput | null> | null;
  not?: ModelEvolinciteWalletPaymentFilterInput | null;
};

export type ModelEvolinciteCrmNegotiationFieldFilterInput = {
  id?: ModelIDInput | null;
  field?: ModelStringInput | null;
  type?: ModelEvolinciteFieldInput | null;
  required?: ModelBooleanInput | null;
  order?: ModelFloatInput | null;
  state?: ModelEvolinciteStatesInput | null;
  meta?: ModelStringInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteCrmNegotiationSectionID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteCrmNegotiationFieldFilterInput | null> | null;
  or?: Array<ModelEvolinciteCrmNegotiationFieldFilterInput | null> | null;
  not?: ModelEvolinciteCrmNegotiationFieldFilterInput | null;
};

export type ModelEvolinciteCrmNegotiationSectionFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  order?: ModelFloatInput | null;
  meta?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteCrmNegotiationSectionFilterInput | null> | null;
  or?: Array<ModelEvolinciteCrmNegotiationSectionFilterInput | null> | null;
  not?: ModelEvolinciteCrmNegotiationSectionFilterInput | null;
};

export type ModelEvolinciteCrmAutomationFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  rule?: ModelEvolinciteRuleInput | null;
  setting?: ModelStringInput | null;
  order?: ModelFloatInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteCrmStateID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteCrmAutomationFilterInput | null> | null;
  or?: Array<ModelEvolinciteCrmAutomationFilterInput | null> | null;
  not?: ModelEvolinciteCrmAutomationFilterInput | null;
};

export type ModelFloatKeyConditionInput = {
  eq?: number | null;
  le?: number | null;
  lt?: number | null;
  ge?: number | null;
  gt?: number | null;
  between?: Array<number | null> | null;
};

export type ModelEvolinciteCommentFilterInput = {
  id?: ModelIDInput | null;
  files?: ModelStringInput | null;
  content?: ModelStringInput | null;
  pinned?: ModelBooleanInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCrmNegotiationID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteCommentFilterInput | null> | null;
  or?: Array<ModelEvolinciteCommentFilterInput | null> | null;
  not?: ModelEvolinciteCommentFilterInput | null;
};

export type ModelEvolinciteActivityFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  startDate?: ModelStringInput | null;
  endDate?: ModelStringInput | null;
  color?: ModelStringInput | null;
  type?: ModelEvolinciteActivityTypesInput | null;
  priority?: ModelIntInput | null;
  meta?: ModelStringInput | null;
  taskState?: ModelEvolinciteTaskStatesInput | null;
  documents?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteCrmNegotiationID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteActivityFilterInput | null> | null;
  or?: Array<ModelEvolinciteActivityFilterInput | null> | null;
  not?: ModelEvolinciteActivityFilterInput | null;
};

export type ModelEvolincitePermissionsFilterInput = {
  id?: ModelIDInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteDepartmentID?: ModelIDInput | null;
  evolinciteRolID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolincitePermissionsFilterInput | null> | null;
  or?: Array<ModelEvolincitePermissionsFilterInput | null> | null;
  not?: ModelEvolincitePermissionsFilterInput | null;
};

export type ModelEvolinciteDepartmentFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  parent?: ModelIDInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteDepartmentFilterInput | null> | null;
  or?: Array<ModelEvolinciteDepartmentFilterInput | null> | null;
  not?: ModelEvolinciteDepartmentFilterInput | null;
};

export type ModelEvolinciteSubscriptionFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  price?: ModelIntInput | null;
  dateInitial?: ModelStringInput | null;
  dateFinal?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteSubscriptionFilterInput | null> | null;
  or?: Array<ModelEvolinciteSubscriptionFilterInput | null> | null;
  not?: ModelEvolinciteSubscriptionFilterInput | null;
};

export type ModelEvolinciteSubscriptionConnection = {
  __typename: 'ModelEvolinciteSubscriptionConnection';
  items: Array<EvolinciteSubscription | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteModuleFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteModuleFilterInput | null> | null;
  or?: Array<ModelEvolinciteModuleFilterInput | null> | null;
  not?: ModelEvolinciteModuleFilterInput | null;
};

export type ModelEvolinciteModuleConnection = {
  __typename: 'ModelEvolinciteModuleConnection';
  items: Array<EvolinciteModule | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteFunctionalityFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  functionalities?: ModelEvolinciteFunctionalitiesListInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolincitePackageID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteFunctionalityFilterInput | null> | null;
  or?: Array<ModelEvolinciteFunctionalityFilterInput | null> | null;
  not?: ModelEvolinciteFunctionalityFilterInput | null;
};

export type ModelEvolinciteRolFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  permissions?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteRolFilterInput | null> | null;
  or?: Array<ModelEvolinciteRolFilterInput | null> | null;
  not?: ModelEvolinciteRolFilterInput | null;
};

export type ModelEvolinciteCustomerFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  lastName?: ModelStringInput | null;
  documentType?: ModelEvolinciteDocumentTypeInput | null;
  documentNumber?: ModelStringInput | null;
  phone?: ModelStringInput | null;
  optionalPhone?: ModelStringInput | null;
  email?: ModelStringInput | null;
  picture?: ModelStringInput | null;
  birthDate?: ModelStringInput | null;
  municipality?: ModelEvolinciteMunicipalityInput | null;
  documents?: ModelStringInput | null;
  address?: ModelStringInput | null;
  meta?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteCustomerFilterInput | null> | null;
  or?: Array<ModelEvolinciteCustomerFilterInput | null> | null;
  not?: ModelEvolinciteCustomerFilterInput | null;
};

export type ModelEvolinciteUserSettingsFilterInput = {
  id?: ModelIDInput | null;
  settings?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteUserSettingsFilterInput | null> | null;
  or?: Array<ModelEvolinciteUserSettingsFilterInput | null> | null;
  not?: ModelEvolinciteUserSettingsFilterInput | null;
};

export type ModelEvolinciteCrmPipelineFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  publicDescription?: ModelStringInput | null;
  order?: ModelFloatInput | null;
  state?: ModelEvolinciteStatesInput | null;
  meta?: ModelStringInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteCrmPipelineFilterInput | null> | null;
  or?: Array<ModelEvolinciteCrmPipelineFilterInput | null> | null;
  not?: ModelEvolinciteCrmPipelineFilterInput | null;
};

export type ModelEvolinciteCrmStateFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  publicDescription?: ModelStringInput | null;
  color?: ModelStringInput | null;
  order?: ModelFloatInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteCrmPipelineID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteCrmStateFilterInput | null> | null;
  or?: Array<ModelEvolinciteCrmStateFilterInput | null> | null;
  not?: ModelEvolinciteCrmStateFilterInput | null;
};

export type ModelEvolinciteCrmNegotiationLogFilterInput = {
  id?: ModelIDInput | null;
  log?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteCrmNegotiationID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteCrmNegotiationLogFilterInput | null> | null;
  or?: Array<ModelEvolinciteCrmNegotiationLogFilterInput | null> | null;
  not?: ModelEvolinciteCrmNegotiationLogFilterInput | null;
};

export type ModelEvolinciteCrmNegotiationFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  value?: ModelIntInput | null;
  due?: ModelIntInput | null;
  parent?: ModelIDInput | null;
  date?: ModelStringInput | null;
  documents?: ModelStringInput | null;
  meta?: ModelStringInput | null;
  frozen?: ModelBooleanInput | null;
  valueInterest?: ModelIntInput | null;
  valueCollection?: ModelIntInput | null;
  observers?: ModelIDInput | null;
  exitDate?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserSellerID?: ModelIDInput | null;
  evolinciteUserReferrerID?: ModelIDInput | null;
  evolinciteUserOwnerID?: ModelIDInput | null;
  evolinciteCrmStateID?: ModelIDInput | null;
  evolinciteCustomerID?: ModelIDInput | null;
  evolinciteProcessTypeID?: ModelIDInput | null;
  initialGoalID?: ModelIDInput | null;
  finalGoalID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteCrmNegotiationFilterInput | null> | null;
  or?: Array<ModelEvolinciteCrmNegotiationFilterInput | null> | null;
  not?: ModelEvolinciteCrmNegotiationFilterInput | null;
};

export type ModelEvolinciteRoomFilterInput = {
  id?: ModelIDInput | null;
  Key?: ModelIDInput | null;
  name?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  meta?: ModelStringInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteRoomFilterInput | null> | null;
  or?: Array<ModelEvolinciteRoomFilterInput | null> | null;
  not?: ModelEvolinciteRoomFilterInput | null;
};

export type ModelEvolinciteMessageFilterInput = {
  id?: ModelIDInput | null;
  content?: ModelStringInput | null;
  type?: ModelEvolinciteMessageTypeInput | null;
  state?: ModelEvolinciteStatesInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteRoomID?: ModelIDInput | null;
  and?: Array<ModelEvolinciteMessageFilterInput | null> | null;
  or?: Array<ModelEvolinciteMessageFilterInput | null> | null;
  not?: ModelEvolinciteMessageFilterInput | null;
};

export type ModelEvolinciteCrmNegotiationFieldValueFilterInput = {
  id?: ModelIDInput | null;
  value?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCrmNegotiationFieldID?: ModelIDInput | null;
  evolinciteCrmNegotiationID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteCrmNegotiationFieldValueFilterInput | null> | null;
  or?: Array<ModelEvolinciteCrmNegotiationFieldValueFilterInput | null> | null;
  not?: ModelEvolinciteCrmNegotiationFieldValueFilterInput | null;
};

export type ModelEvolinciteEmailFilterInput = {
  id?: ModelIDInput | null;
  from?: ModelStringInput | null;
  to?: ModelStringInput | null;
  content?: ModelStringInput | null;
  subject?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteEmailFilterInput | null> | null;
  or?: Array<ModelEvolinciteEmailFilterInput | null> | null;
  not?: ModelEvolinciteEmailFilterInput | null;
};

export type ModelEvolinciteEmailTemplateFilterInput = {
  id?: ModelIDInput | null;
  content?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteEmailTemplateFilterInput | null> | null;
  or?: Array<ModelEvolinciteEmailTemplateFilterInput | null> | null;
  not?: ModelEvolinciteEmailTemplateFilterInput | null;
};

export type ModelEvolinciteNotificationFilterInput = {
  id?: ModelIDInput | null;
  content?: ModelStringInput | null;
  title?: ModelStringInput | null;
  priority?: ModelEvolinciteNotificationPriorityInput | null;
  type?: ModelEvolunciteNotificationTypeInput | null;
  meta?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteNotificationFilterInput | null> | null;
  or?: Array<ModelEvolinciteNotificationFilterInput | null> | null;
  not?: ModelEvolinciteNotificationFilterInput | null;
};

export type ModelEvolinciteUserDepartmentFilterInput = {
  id?: ModelIDInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteDepartmentID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteUserDepartmentFilterInput | null> | null;
  or?: Array<ModelEvolinciteUserDepartmentFilterInput | null> | null;
  not?: ModelEvolinciteUserDepartmentFilterInput | null;
};

export type ModelEvolinciteUserEvolinciteCompanyFilterInput = {
  id?: ModelIDInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteUserEvolinciteCompanyFilterInput | null> | null;
  or?: Array<ModelEvolinciteUserEvolinciteCompanyFilterInput | null> | null;
  not?: ModelEvolinciteUserEvolinciteCompanyFilterInput | null;
};

export type ModelEvolinciteUserFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  nit?: ModelStringInput | null;
  phone?: ModelStringInput | null;
  picture?: ModelStringInput | null;
  email?: ModelStringInput | null;
  sub?: ModelIDInput | null;
  meta?: ModelStringInput | null;
  cv?: ModelStringInput | null;
  contract?: ModelStringInput | null;
  memos?: ModelStringInput | null;
  personalMail?: ModelStringInput | null;
  personalPhone?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteUserFilterInput | null> | null;
  or?: Array<ModelEvolinciteUserFilterInput | null> | null;
  not?: ModelEvolinciteUserFilterInput | null;
};

export type ModelEvolinciteUserConnection = {
  __typename: 'ModelEvolinciteUserConnection';
  items: Array<EvolinciteUser | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteCompanyFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  nit?: ModelStringInput | null;
  picture?: ModelStringInput | null;
  meta?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteSubscriptionID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteCompanyFilterInput | null> | null;
  or?: Array<ModelEvolinciteCompanyFilterInput | null> | null;
  not?: ModelEvolinciteCompanyFilterInput | null;
};

export type ModelEvolinciteGoalFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteGoalFilterInput | null> | null;
  or?: Array<ModelEvolinciteGoalFilterInput | null> | null;
  not?: ModelEvolinciteGoalFilterInput | null;
};

export type ModelEvolinciteWalletPaymentLogFilterInput = {
  id?: ModelIDInput | null;
  log?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteWalletPaymentID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteWalletPaymentLogFilterInput | null> | null;
  or?: Array<ModelEvolinciteWalletPaymentLogFilterInput | null> | null;
  not?: ModelEvolinciteWalletPaymentLogFilterInput | null;
};

export type ModelEvolinciteExpenseLogFilterInput = {
  id?: ModelIDInput | null;
  log?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteExpenseID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteExpenseLogFilterInput | null> | null;
  or?: Array<ModelEvolinciteExpenseLogFilterInput | null> | null;
  not?: ModelEvolinciteExpenseLogFilterInput | null;
};

export type ModelEvolinciteTicketFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  documents?: ModelStringInput | null;
  meta?: ModelStringInput | null;
  ticketState?: ModelEvolinciteTicketStateInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyOwnerID?: ModelIDInput | null;
  evolinciteCompanyOriginID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteTicketFilterInput | null> | null;
  or?: Array<ModelEvolinciteTicketFilterInput | null> | null;
  not?: ModelEvolinciteTicketFilterInput | null;
};

export type ModelEvolinciteTicketLogFilterInput = {
  id?: ModelIDInput | null;
  log?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteTicketID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteTicketLogFilterInput | null> | null;
  or?: Array<ModelEvolinciteTicketLogFilterInput | null> | null;
  not?: ModelEvolinciteTicketLogFilterInput | null;
};

export type ModelEvolinciteFileFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  size?: ModelIntInput | null;
  meta?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteFolderID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteFileFilterInput | null> | null;
  or?: Array<ModelEvolinciteFileFilterInput | null> | null;
  not?: ModelEvolinciteFileFilterInput | null;
};

export type ModelEvolinciteFolderFilterInput = {
  id?: ModelIDInput | null;
  parent?: ModelIDInput | null;
  name?: ModelStringInput | null;
  meta?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteUserOwnerID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteFolderFilterInput | null> | null;
  or?: Array<ModelEvolinciteFolderFilterInput | null> | null;
  not?: ModelEvolinciteFolderFilterInput | null;
};

export type ModelEvolinciteArticleFilterInput = {
  id?: ModelIDInput | null;
  front?: ModelStringInput | null;
  cover?: ModelStringInput | null;
  title?: ModelStringInput | null;
  content?: ModelStringInput | null;
  articleState?: ModelEvolinciteArticleStatesInput | null;
  visibility?: ModelStringInput | null;
  publicationDate?: ModelStringInput | null;
  meta?: ModelStringInput | null;
  files?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteArticleFilterInput | null> | null;
  or?: Array<ModelEvolinciteArticleFilterInput | null> | null;
  not?: ModelEvolinciteArticleFilterInput | null;
};

export type ModelEvolinciteArticleCommentFilterInput = {
  id?: ModelIDInput | null;
  content?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteArticleID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteArticleCommentFilterInput | null> | null;
  or?: Array<ModelEvolinciteArticleCommentFilterInput | null> | null;
  not?: ModelEvolinciteArticleCommentFilterInput | null;
};

export type ModelEvolinciteFormConfigurationFilterInput = {
  id?: ModelIDInput | null;
  key?: ModelIDInput | null;
  name?: ModelStringInput | null;
  config?: ModelStringInput | null;
  meta?: ModelStringInput | null;
  title?: ModelStringInput | null;
  description?: ModelStringInput | null;
  observations?: ModelStringInput | null;
  front?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteFormConfigurationFilterInput | null> | null;
  or?: Array<ModelEvolinciteFormConfigurationFilterInput | null> | null;
  not?: ModelEvolinciteFormConfigurationFilterInput | null;
};

export type ModelEvolinciteFormAnswerFilterInput = {
  id?: ModelIDInput | null;
  meta?: ModelStringInput | null;
  answerState?: ModelEvolinciteSurveyAnswerStateInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteUserID?: ModelIDInput | null;
  evolinciteFormConfigurationID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteFormAnswerFilterInput | null> | null;
  or?: Array<ModelEvolinciteFormAnswerFilterInput | null> | null;
  not?: ModelEvolinciteFormAnswerFilterInput | null;
};

export type ModelEvolincitePaymentAutomationFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  setting?: ModelStringInput | null;
  order?: ModelFloatInput | null;
  repeat?: ModelBooleanInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolincitePaymentAutomationFilterInput | null> | null;
  or?: Array<ModelEvolincitePaymentAutomationFilterInput | null> | null;
  not?: ModelEvolincitePaymentAutomationFilterInput | null;
};

export type ModelEvolinciteMailFilterInput = {
  id?: ModelIDInput | null;
  destinations?: ModelStringInput | null;
  subject?: ModelStringInput | null;
  content?: ModelStringInput | null;
  submissionStatus?: ModelEvolinciteMailStatesInput | null;
  setting?: ModelStringInput | null;
  response?: ModelStringInput | null;
  files?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteMailFilterInput | null> | null;
  or?: Array<ModelEvolinciteMailFilterInput | null> | null;
  not?: ModelEvolinciteMailFilterInput | null;
};

export type ModelEvolinciteMailConfigurationFilterInput = {
  id?: ModelIDInput | null;
  SMTP?: ModelStringInput | null;
  email?: ModelStringInput | null;
  password?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteMailConfigurationFilterInput | null> | null;
  or?: Array<ModelEvolinciteMailConfigurationFilterInput | null> | null;
  not?: ModelEvolinciteMailConfigurationFilterInput | null;
};

export type ModelEvolinciteMailConfigurationConnection = {
  __typename: 'ModelEvolinciteMailConfigurationConnection';
  items: Array<EvolinciteMailConfiguration | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteMailTemplateFilterInput = {
  id?: ModelIDInput | null;
  destinations?: ModelStringInput | null;
  subject?: ModelStringInput | null;
  content?: ModelStringInput | null;
  files?: ModelStringInput | null;
  transmitter?: ModelIDInput | null;
  meta?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteMailTemplateFilterInput | null> | null;
  or?: Array<ModelEvolinciteMailTemplateFilterInput | null> | null;
  not?: ModelEvolinciteMailTemplateFilterInput | null;
};

export type ModelEvolinciteMailTemplateLogFilterInput = {
  id?: ModelIDInput | null;
  key?: ModelIDInput | null;
  log?: ModelStringInput | null;
  date?: ModelStringInput | null;
  previousLog?: ModelIDInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteMailTemplateLogFilterInput | null> | null;
  or?: Array<ModelEvolinciteMailTemplateLogFilterInput | null> | null;
  not?: ModelEvolinciteMailTemplateLogFilterInput | null;
};

export type ModelEvolinciteMailTemplateLogConnection = {
  __typename: 'ModelEvolinciteMailTemplateLogConnection';
  items: Array<EvolinciteMailTemplateLog | null>;
  nextToken?: string | null;
};

export type ModelEvolincitePackageFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  goal?: ModelStringInput | null;
  duration?: ModelIntInput | null;
  state?: ModelEvolinciteStatesInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolincitePackageFilterInput | null> | null;
  or?: Array<ModelEvolincitePackageFilterInput | null> | null;
  not?: ModelEvolincitePackageFilterInput | null;
};

export type ModelEvolincitePackageConnection = {
  __typename: 'ModelEvolincitePackageConnection';
  items: Array<EvolincitePackage | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteCompanySubscriptionFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  price?: ModelIntInput | null;
  dateInitial?: ModelStringInput | null;
  dateFinal?: ModelStringInput | null;
  activatorUser?: ModelIDInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolincitePackageID?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteCompanySubscriptionFilterInput | null> | null;
  or?: Array<ModelEvolinciteCompanySubscriptionFilterInput | null> | null;
  not?: ModelEvolinciteCompanySubscriptionFilterInput | null;
};

export type ModelEvolinciteEmployeeObservationFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  content?: ModelStringInput | null;
  isPublic?: ModelBooleanInput | null;
  meta?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteEmployeeObservationFilterInput | null> | null;
  or?: Array<ModelEvolinciteEmployeeObservationFilterInput | null> | null;
  not?: ModelEvolinciteEmployeeObservationFilterInput | null;
};

export type ModelEvolinciteTagFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelIDInput | null;
  description?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteTagFilterInput | null> | null;
  or?: Array<ModelEvolinciteTagFilterInput | null> | null;
  not?: ModelEvolinciteTagFilterInput | null;
};

export type ModelEvolinciteTagConnection = {
  __typename: 'ModelEvolinciteTagConnection';
  items: Array<EvolinciteTag | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteMilestoneFilterInput = {
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  tags?: ModelIDInput | null;
  type?: ModelEvolunciteMilestoneTypeInput | null;
  config?: ModelStringInput | null;
  startDate?: ModelStringInput | null;
  endDate?: ModelStringInput | null;
  employees?: ModelIDInput | null;
  managers?: ModelIDInput | null;
  isClosed?: ModelBooleanInput | null;
  closingNotes?: ModelStringInput | null;
  log?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  id?: ModelIDInput | null;
  and?: Array<ModelEvolinciteMilestoneFilterInput | null> | null;
  or?: Array<ModelEvolinciteMilestoneFilterInput | null> | null;
  not?: ModelEvolinciteMilestoneFilterInput | null;
};

export type ModelEvolinciteMilestoneConnection = {
  __typename: 'ModelEvolinciteMilestoneConnection';
  items: Array<EvolinciteMilestone | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteUserLogFilterInput = {
  id?: ModelIDInput | null;
  log?: ModelStringInput | null;
  functionality?: ModelEvolinciteFunctionalitiesInput | null;
  state?: ModelEvolinciteStatesInput | null;
  key?: ModelIDInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteUserLogFilterInput | null> | null;
  or?: Array<ModelEvolinciteUserLogFilterInput | null> | null;
  not?: ModelEvolinciteUserLogFilterInput | null;
};

export type ModelEvolinciteUserLogConnection = {
  __typename: 'ModelEvolinciteUserLogConnection';
  items: Array<EvolinciteUserLog | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteUserTimeTrackingFilterInput = {
  id?: ModelIDInput | null;
  time?: ModelIntInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteUserTimeTrackingFilterInput | null> | null;
  or?: Array<ModelEvolinciteUserTimeTrackingFilterInput | null> | null;
  not?: ModelEvolinciteUserTimeTrackingFilterInput | null;
};

export type ModelEvolinciteUserTimeTrackingConnection = {
  __typename: 'ModelEvolinciteUserTimeTrackingConnection';
  items: Array<EvolinciteUserTimeTracking | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteScheduleFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  config?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteScheduleFilterInput | null> | null;
  or?: Array<ModelEvolinciteScheduleFilterInput | null> | null;
  not?: ModelEvolinciteScheduleFilterInput | null;
};

export type ModelEvolinciteScheduleConnection = {
  __typename: 'ModelEvolinciteScheduleConnection';
  items: Array<EvolinciteSchedule | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteTemplateRequestFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  tags?: ModelIDInput | null;
  questions?: ModelStringInput | null;
  elementType?: ModelEvolunciteRequestTypeInput | null;
  documents?: ModelStringInput | null;
  meta?: ModelStringInput | null;
  owners?: ModelIDInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteTemplateRequestFilterInput | null> | null;
  or?: Array<ModelEvolinciteTemplateRequestFilterInput | null> | null;
  not?: ModelEvolinciteTemplateRequestFilterInput | null;
};

export type ModelEvolinciteTemplateRequestConnection = {
  __typename: 'ModelEvolinciteTemplateRequestConnection';
  items: Array<EvolinciteTemplateRequest | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteRequestFilterInput = {
  id?: ModelIDInput | null;
  templateID?: ModelIDInput | null;
  answers?: ModelStringInput | null;
  requester?: ModelIDInput | null;
  priority?: ModelEvolinciteRequestPriorityInput | null;
  elementID?: ModelIDInput | null;
  elementType?: ModelEvolunciteRequestTypeInput | null;
  status?: ModelEvolinciteRequestStatusInput | null;
  meta?: ModelStringInput | null;
  state?: ModelEvolinciteStatesInput | null;
  evolinciteCompanyID?: ModelIDInput | null;
  evolinciteUserID?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteRequestFilterInput | null> | null;
  or?: Array<ModelEvolinciteRequestFilterInput | null> | null;
  not?: ModelEvolinciteRequestFilterInput | null;
};

export type ModelEvolinciteRequestConnection = {
  __typename: 'ModelEvolinciteRequestConnection';
  items: Array<EvolinciteRequest | null>;
  nextToken?: string | null;
};

export type ModelEvolinciteActivityEvolinciteUserFilterInput = {
  id?: ModelIDInput | null;
  evolinciteActivityId?: ModelIDInput | null;
  evolinciteUserId?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteActivityEvolinciteUserFilterInput | null> | null;
  or?: Array<ModelEvolinciteActivityEvolinciteUserFilterInput | null> | null;
  not?: ModelEvolinciteActivityEvolinciteUserFilterInput | null;
};

export type ModelEvolinciteUserEvolinciteCrmNegotiationFilterInput = {
  id?: ModelIDInput | null;
  evolinciteCrmNegotiationId?: ModelIDInput | null;
  evolinciteUserId?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteUserEvolinciteCrmNegotiationFilterInput | null> | null;
  or?: Array<ModelEvolinciteUserEvolinciteCrmNegotiationFilterInput | null> | null;
  not?: ModelEvolinciteUserEvolinciteCrmNegotiationFilterInput | null;
};

export type ModelEvolinciteRoomEvolinciteUserFilterInput = {
  id?: ModelIDInput | null;
  evolinciteRoomId?: ModelIDInput | null;
  evolinciteUserId?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  updatedAt?: ModelStringInput | null;
  and?: Array<ModelEvolinciteRoomEvolinciteUserFilterInput | null> | null;
  or?: Array<ModelEvolinciteRoomEvolinciteUserFilterInput | null> | null;
  not?: ModelEvolinciteRoomEvolinciteUserFilterInput | null;
};

export type ModelSubscriptionEvolinciteCompetenceFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  description?: ModelSubscriptionStringInput | null;
  content?: ModelSubscriptionStringInput | null;
  application?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteCompetenceFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteCompetenceFilterInput | null> | null;
  evolinciteCompetenceEvolinciteSyllabusId?: ModelSubscriptionIDInput | null;
};

export type ModelSubscriptionIDInput = {
  ne?: string | null;
  eq?: string | null;
  le?: string | null;
  lt?: string | null;
  ge?: string | null;
  gt?: string | null;
  contains?: string | null;
  notContains?: string | null;
  between?: Array<string | null> | null;
  beginsWith?: string | null;
  in?: Array<string | null> | null;
  notIn?: Array<string | null> | null;
};

export type ModelSubscriptionStringInput = {
  ne?: string | null;
  eq?: string | null;
  le?: string | null;
  lt?: string | null;
  ge?: string | null;
  gt?: string | null;
  contains?: string | null;
  notContains?: string | null;
  between?: Array<string | null> | null;
  beginsWith?: string | null;
  in?: Array<string | null> | null;
  notIn?: Array<string | null> | null;
};

export type ModelSubscriptionEvolinciteCourseFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  description?: ModelSubscriptionStringInput | null;
  durationUnit?: ModelSubscriptionStringInput | null;
  duration?: ModelSubscriptionIntInput | null;
  objectives?: ModelSubscriptionStringInput | null;
  application?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteCourseFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteCourseFilterInput | null> | null;
  evolinciteCourseEvolinciteSyllabusId?: ModelSubscriptionIDInput | null;
};

export type ModelSubscriptionIntInput = {
  ne?: number | null;
  eq?: number | null;
  le?: number | null;
  lt?: number | null;
  ge?: number | null;
  gt?: number | null;
  between?: Array<number | null> | null;
  in?: Array<number | null> | null;
  notIn?: Array<number | null> | null;
};

export type ModelSubscriptionEvolinciteSyllabusFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  description?: ModelSubscriptionStringInput | null;
  content?: ModelSubscriptionStringInput | null;
  application?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteSyllabusFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteSyllabusFilterInput | null> | null;
  evolinciteSyllabusEvolinciteCompetenceId?: ModelSubscriptionIDInput | null;
};

export type ModelSubscriptionEvolinciteUserAnswersFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  answers?: ModelSubscriptionStringInput | null;
  application?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteUserAnswersFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteUserAnswersFilterInput | null> | null;
  evolinciteUserAnswersEvolinciteUserId?: ModelSubscriptionIDInput | null;
  evolinciteUserAnswersEvolinciteSyllabusId?: ModelSubscriptionIDInput | null;
};

export type ModelSubscriptionEvolinciteProcessTypeFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  order?: ModelSubscriptionIntInput | null;
  sellerCommission?: ModelSubscriptionFloatInput | null;
  referrerCommission?: ModelSubscriptionFloatInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteProcessTypeFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteProcessTypeFilterInput | null> | null;
};

export type ModelSubscriptionFloatInput = {
  ne?: number | null;
  eq?: number | null;
  le?: number | null;
  lt?: number | null;
  ge?: number | null;
  gt?: number | null;
  between?: Array<number | null> | null;
  in?: Array<number | null> | null;
  notIn?: Array<number | null> | null;
};

export type ModelSubscriptionEvolinciteExpenseTypeFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  type?: ModelSubscriptionStringInput | null;
  setting?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteExpenseTypeFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteExpenseTypeFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteExpenseFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  amount?: ModelSubscriptionIntInput | null;
  process?: ModelSubscriptionStringInput | null;
  expenseState?: ModelSubscriptionStringInput | null;
  expenseDate?: ModelSubscriptionStringInput | null;
  observations?: ModelSubscriptionStringInput | null;
  voucher?: ModelSubscriptionStringInput | null;
  transactionType?: ModelSubscriptionStringInput | null;
  reference?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteExpenseTypeID?: ModelSubscriptionIDInput | null;
  evolinciteCrmNegotiationID?: ModelSubscriptionIDInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteUserResponsibleID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteExpenseFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteExpenseFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteUserEvolinciteJobTitleFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteJobTitleID?: ModelSubscriptionIDInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteUserEvolinciteJobTitleFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteUserEvolinciteJobTitleFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteJobTitleFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  salary?: ModelSubscriptionIntInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteJobTitleFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteJobTitleFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteWalletPaymentFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  amount?: ModelSubscriptionIntInput | null;
  scheduledDate?: ModelSubscriptionStringInput | null;
  datePayment?: ModelSubscriptionStringInput | null;
  paymentStatus?: ModelSubscriptionStringInput | null;
  prePayment?: ModelSubscriptionStringInput | null;
  postPayment?: ModelSubscriptionStringInput | null;
  observations?: ModelSubscriptionStringInput | null;
  voucher?: ModelSubscriptionStringInput | null;
  transactionType?: ModelSubscriptionStringInput | null;
  reference?: ModelSubscriptionStringInput | null;
  amountInterest?: ModelSubscriptionIntInput | null;
  amountCollection?: ModelSubscriptionIntInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteUserReferrerID?: ModelSubscriptionIDInput | null;
  evolinciteUserSellerID?: ModelSubscriptionIDInput | null;
  evolinciteCrmNegotiationID?: ModelSubscriptionIDInput | null;
  evolinciteCustomerID?: ModelSubscriptionIDInput | null;
  evolinciteUserResponsibleID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteWalletPaymentFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteWalletPaymentFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteCrmNegotiationFieldFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  field?: ModelSubscriptionStringInput | null;
  type?: ModelSubscriptionStringInput | null;
  required?: ModelSubscriptionBooleanInput | null;
  order?: ModelSubscriptionFloatInput | null;
  state?: ModelSubscriptionStringInput | null;
  meta?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteCrmNegotiationSectionID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteCrmNegotiationFieldFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteCrmNegotiationFieldFilterInput | null> | null;
};

export type ModelSubscriptionBooleanInput = {
  ne?: boolean | null;
  eq?: boolean | null;
};

export type ModelSubscriptionEvolinciteCrmNegotiationSectionFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  order?: ModelSubscriptionFloatInput | null;
  meta?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteCrmNegotiationSectionFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteCrmNegotiationSectionFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteCrmAutomationFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  rule?: ModelSubscriptionStringInput | null;
  setting?: ModelSubscriptionStringInput | null;
  order?: ModelSubscriptionFloatInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteCrmStateID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteCrmAutomationFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteCrmAutomationFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteCommentFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  files?: ModelSubscriptionStringInput | null;
  content?: ModelSubscriptionStringInput | null;
  pinned?: ModelSubscriptionBooleanInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteCrmNegotiationID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteCommentFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteCommentFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteActivityFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  description?: ModelSubscriptionStringInput | null;
  startDate?: ModelSubscriptionStringInput | null;
  endDate?: ModelSubscriptionStringInput | null;
  color?: ModelSubscriptionStringInput | null;
  type?: ModelSubscriptionStringInput | null;
  priority?: ModelSubscriptionIntInput | null;
  meta?: ModelSubscriptionStringInput | null;
  taskState?: ModelSubscriptionStringInput | null;
  documents?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteCrmNegotiationID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteActivityFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteActivityFilterInput | null> | null;
};

export type ModelSubscriptionEvolincitePermissionsFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteDepartmentID?: ModelSubscriptionIDInput | null;
  evolinciteRolID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolincitePermissionsFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolincitePermissionsFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteDepartmentFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  parent?: ModelSubscriptionIDInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteDepartmentFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteDepartmentFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteSubscriptionFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  price?: ModelSubscriptionIntInput | null;
  dateInitial?: ModelSubscriptionStringInput | null;
  dateFinal?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteSubscriptionFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteSubscriptionFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteModuleFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteModuleFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteModuleFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteFunctionalityFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  functionalities?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolincitePackageID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteFunctionalityFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteFunctionalityFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteRolFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  permissions?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteRolFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteRolFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteCustomerFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  lastName?: ModelSubscriptionStringInput | null;
  documentType?: ModelSubscriptionStringInput | null;
  documentNumber?: ModelSubscriptionStringInput | null;
  phone?: ModelSubscriptionStringInput | null;
  optionalPhone?: ModelSubscriptionStringInput | null;
  email?: ModelSubscriptionStringInput | null;
  picture?: ModelSubscriptionStringInput | null;
  birthDate?: ModelSubscriptionStringInput | null;
  municipality?: ModelSubscriptionStringInput | null;
  documents?: ModelSubscriptionStringInput | null;
  address?: ModelSubscriptionStringInput | null;
  meta?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteCustomerFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteCustomerFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteUserSettingsFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  settings?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteUserSettingsFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteUserSettingsFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteCrmPipelineFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  description?: ModelSubscriptionStringInput | null;
  publicDescription?: ModelSubscriptionStringInput | null;
  order?: ModelSubscriptionFloatInput | null;
  state?: ModelSubscriptionStringInput | null;
  meta?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteCrmPipelineFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteCrmPipelineFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteCrmStateFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  description?: ModelSubscriptionStringInput | null;
  publicDescription?: ModelSubscriptionStringInput | null;
  color?: ModelSubscriptionStringInput | null;
  order?: ModelSubscriptionFloatInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteCrmPipelineID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteCrmStateFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteCrmStateFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteCrmNegotiationLogFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  log?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteCrmNegotiationID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteCrmNegotiationLogFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteCrmNegotiationLogFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteCrmNegotiationFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  value?: ModelSubscriptionIntInput | null;
  due?: ModelSubscriptionIntInput | null;
  parent?: ModelSubscriptionIDInput | null;
  date?: ModelSubscriptionStringInput | null;
  documents?: ModelSubscriptionStringInput | null;
  meta?: ModelSubscriptionStringInput | null;
  frozen?: ModelSubscriptionBooleanInput | null;
  valueInterest?: ModelSubscriptionIntInput | null;
  valueCollection?: ModelSubscriptionIntInput | null;
  observers?: ModelSubscriptionIDInput | null;
  exitDate?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteUserSellerID?: ModelSubscriptionIDInput | null;
  evolinciteUserReferrerID?: ModelSubscriptionIDInput | null;
  evolinciteUserOwnerID?: ModelSubscriptionIDInput | null;
  evolinciteCrmStateID?: ModelSubscriptionIDInput | null;
  evolinciteCustomerID?: ModelSubscriptionIDInput | null;
  evolinciteProcessTypeID?: ModelSubscriptionIDInput | null;
  initialGoalID?: ModelSubscriptionIDInput | null;
  finalGoalID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteCrmNegotiationFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteCrmNegotiationFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteRoomFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  Key?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  meta?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteRoomFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteRoomFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteMessageFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  content?: ModelSubscriptionStringInput | null;
  type?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteRoomID?: ModelSubscriptionIDInput | null;
  and?: Array<ModelSubscriptionEvolinciteMessageFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteMessageFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteCrmNegotiationFieldValueFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  value?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCrmNegotiationFieldID?: ModelSubscriptionIDInput | null;
  evolinciteCrmNegotiationID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteCrmNegotiationFieldValueFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteCrmNegotiationFieldValueFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteEmailFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  from?: ModelSubscriptionStringInput | null;
  to?: ModelSubscriptionStringInput | null;
  content?: ModelSubscriptionStringInput | null;
  subject?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteEmailFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteEmailFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteEmailTemplateFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  content?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteEmailTemplateFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteEmailTemplateFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteNotificationFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  content?: ModelSubscriptionStringInput | null;
  title?: ModelSubscriptionStringInput | null;
  priority?: ModelSubscriptionStringInput | null;
  type?: ModelSubscriptionStringInput | null;
  meta?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteNotificationFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteNotificationFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteUserDepartmentFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteDepartmentID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteUserDepartmentFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteUserDepartmentFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteUserEvolinciteCompanyFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteUserEvolinciteCompanyFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteUserEvolinciteCompanyFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteUserFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  nit?: ModelSubscriptionStringInput | null;
  phone?: ModelSubscriptionStringInput | null;
  picture?: ModelSubscriptionStringInput | null;
  email?: ModelSubscriptionStringInput | null;
  sub?: ModelSubscriptionIDInput | null;
  meta?: ModelSubscriptionStringInput | null;
  cv?: ModelSubscriptionStringInput | null;
  contract?: ModelSubscriptionStringInput | null;
  memos?: ModelSubscriptionStringInput | null;
  personalMail?: ModelSubscriptionStringInput | null;
  personalPhone?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteUserFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteUserFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteCompanyFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  nit?: ModelSubscriptionStringInput | null;
  picture?: ModelSubscriptionStringInput | null;
  meta?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteSubscriptionID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteCompanyFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteCompanyFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteGoalFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  description?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteGoalFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteGoalFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteWalletPaymentLogFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  log?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteWalletPaymentID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteWalletPaymentLogFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteWalletPaymentLogFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteExpenseLogFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  log?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteExpenseID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteExpenseLogFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteExpenseLogFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteTicketFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  description?: ModelSubscriptionStringInput | null;
  documents?: ModelSubscriptionStringInput | null;
  meta?: ModelSubscriptionStringInput | null;
  ticketState?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteCompanyOwnerID?: ModelSubscriptionIDInput | null;
  evolinciteCompanyOriginID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteTicketFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteTicketFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteTicketLogFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  log?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteTicketID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteTicketLogFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteTicketLogFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteFileFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  size?: ModelSubscriptionIntInput | null;
  meta?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteFolderID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteFileFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteFileFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteFolderFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  parent?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  meta?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteUserOwnerID?: ModelSubscriptionIDInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteFolderFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteFolderFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteArticleFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  front?: ModelSubscriptionStringInput | null;
  cover?: ModelSubscriptionStringInput | null;
  title?: ModelSubscriptionStringInput | null;
  content?: ModelSubscriptionStringInput | null;
  articleState?: ModelSubscriptionStringInput | null;
  visibility?: ModelSubscriptionStringInput | null;
  publicationDate?: ModelSubscriptionStringInput | null;
  meta?: ModelSubscriptionStringInput | null;
  files?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteArticleFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteArticleFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteArticleCommentFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  content?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteArticleID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteArticleCommentFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteArticleCommentFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteFormConfigurationFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  key?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  config?: ModelSubscriptionStringInput | null;
  meta?: ModelSubscriptionStringInput | null;
  title?: ModelSubscriptionStringInput | null;
  description?: ModelSubscriptionStringInput | null;
  observations?: ModelSubscriptionStringInput | null;
  front?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteFormConfigurationFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteFormConfigurationFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteFormAnswerFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  meta?: ModelSubscriptionStringInput | null;
  answerState?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  evolinciteFormConfigurationID?: ModelSubscriptionIDInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteFormAnswerFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteFormAnswerFilterInput | null> | null;
};

export type ModelSubscriptionEvolincitePaymentAutomationFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  setting?: ModelSubscriptionStringInput | null;
  order?: ModelSubscriptionFloatInput | null;
  repeat?: ModelSubscriptionBooleanInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolincitePaymentAutomationFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolincitePaymentAutomationFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteMailFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  destinations?: ModelSubscriptionStringInput | null;
  subject?: ModelSubscriptionStringInput | null;
  content?: ModelSubscriptionStringInput | null;
  submissionStatus?: ModelSubscriptionStringInput | null;
  setting?: ModelSubscriptionStringInput | null;
  response?: ModelSubscriptionStringInput | null;
  files?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteMailFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteMailFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteMailConfigurationFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  SMTP?: ModelSubscriptionStringInput | null;
  email?: ModelSubscriptionStringInput | null;
  password?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteMailConfigurationFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteMailConfigurationFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteMailTemplateFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  destinations?: ModelSubscriptionStringInput | null;
  subject?: ModelSubscriptionStringInput | null;
  content?: ModelSubscriptionStringInput | null;
  files?: ModelSubscriptionStringInput | null;
  transmitter?: ModelSubscriptionIDInput | null;
  meta?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteMailTemplateFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteMailTemplateFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteMailTemplateLogFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  key?: ModelSubscriptionIDInput | null;
  log?: ModelSubscriptionStringInput | null;
  date?: ModelSubscriptionStringInput | null;
  previousLog?: ModelSubscriptionIDInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteMailTemplateLogFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteMailTemplateLogFilterInput | null> | null;
};

export type ModelSubscriptionEvolincitePackageFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  description?: ModelSubscriptionStringInput | null;
  goal?: ModelSubscriptionStringInput | null;
  duration?: ModelSubscriptionIntInput | null;
  state?: ModelSubscriptionStringInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolincitePackageFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolincitePackageFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteCompanySubscriptionFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  price?: ModelSubscriptionIntInput | null;
  dateInitial?: ModelSubscriptionStringInput | null;
  dateFinal?: ModelSubscriptionStringInput | null;
  activatorUser?: ModelSubscriptionIDInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolincitePackageID?: ModelSubscriptionIDInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteCompanySubscriptionFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteCompanySubscriptionFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteEmployeeObservationFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  content?: ModelSubscriptionStringInput | null;
  isPublic?: ModelSubscriptionBooleanInput | null;
  meta?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteEmployeeObservationFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteEmployeeObservationFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteTagFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionIDInput | null;
  description?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteTagFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteTagFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteMilestoneFilterInput = {
  name?: ModelSubscriptionStringInput | null;
  description?: ModelSubscriptionStringInput | null;
  tags?: ModelSubscriptionIDInput | null;
  type?: ModelSubscriptionStringInput | null;
  config?: ModelSubscriptionStringInput | null;
  startDate?: ModelSubscriptionStringInput | null;
  endDate?: ModelSubscriptionStringInput | null;
  employees?: ModelSubscriptionIDInput | null;
  managers?: ModelSubscriptionIDInput | null;
  isClosed?: ModelSubscriptionBooleanInput | null;
  closingNotes?: ModelSubscriptionStringInput | null;
  log?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  id?: ModelSubscriptionIDInput | null;
  and?: Array<ModelSubscriptionEvolinciteMilestoneFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteMilestoneFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteUserLogFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  log?: ModelSubscriptionStringInput | null;
  functionality?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  key?: ModelSubscriptionIDInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteUserLogFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteUserLogFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteUserTimeTrackingFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  time?: ModelSubscriptionIntInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteUserTimeTrackingFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteUserTimeTrackingFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteScheduleFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  description?: ModelSubscriptionStringInput | null;
  config?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteScheduleFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteScheduleFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteTemplateRequestFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  name?: ModelSubscriptionStringInput | null;
  description?: ModelSubscriptionStringInput | null;
  tags?: ModelSubscriptionIDInput | null;
  questions?: ModelSubscriptionStringInput | null;
  elementType?: ModelSubscriptionStringInput | null;
  documents?: ModelSubscriptionStringInput | null;
  meta?: ModelSubscriptionStringInput | null;
  owners?: ModelSubscriptionIDInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteTemplateRequestFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteTemplateRequestFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteRequestFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  templateID?: ModelSubscriptionIDInput | null;
  answers?: ModelSubscriptionStringInput | null;
  requester?: ModelSubscriptionIDInput | null;
  priority?: ModelSubscriptionStringInput | null;
  elementID?: ModelSubscriptionIDInput | null;
  elementType?: ModelSubscriptionStringInput | null;
  status?: ModelSubscriptionStringInput | null;
  meta?: ModelSubscriptionStringInput | null;
  state?: ModelSubscriptionStringInput | null;
  evolinciteCompanyID?: ModelSubscriptionIDInput | null;
  evolinciteUserID?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteRequestFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteRequestFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteActivityEvolinciteUserFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  evolinciteActivityId?: ModelSubscriptionIDInput | null;
  evolinciteUserId?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteActivityEvolinciteUserFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteActivityEvolinciteUserFilterInput | null> | null;
};

export type ModelSubscriptionEvolinciteUserEvolinciteCrmNegotiationFilterInput =
  {
    id?: ModelSubscriptionIDInput | null;
    evolinciteCrmNegotiationId?: ModelSubscriptionIDInput | null;
    evolinciteUserId?: ModelSubscriptionIDInput | null;
    createdAt?: ModelSubscriptionStringInput | null;
    updatedAt?: ModelSubscriptionStringInput | null;
    and?: Array<ModelSubscriptionEvolinciteUserEvolinciteCrmNegotiationFilterInput | null> | null;
    or?: Array<ModelSubscriptionEvolinciteUserEvolinciteCrmNegotiationFilterInput | null> | null;
  };

export type ModelSubscriptionEvolinciteRoomEvolinciteUserFilterInput = {
  id?: ModelSubscriptionIDInput | null;
  evolinciteRoomId?: ModelSubscriptionIDInput | null;
  evolinciteUserId?: ModelSubscriptionIDInput | null;
  createdAt?: ModelSubscriptionStringInput | null;
  updatedAt?: ModelSubscriptionStringInput | null;
  and?: Array<ModelSubscriptionEvolinciteRoomEvolinciteUserFilterInput | null> | null;
  or?: Array<ModelSubscriptionEvolinciteRoomEvolinciteUserFilterInput | null> | null;
};

export type CreateEvolinciteCompetenceMutation = {
  __typename: 'EvolinciteCompetence';
  id: string;
  name?: string | null;
  description?: string | null;
  content?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteCompetenceEvolinciteSyllabusId?: string | null;
};

export type UpdateEvolinciteCompetenceMutation = {
  __typename: 'EvolinciteCompetence';
  id: string;
  name?: string | null;
  description?: string | null;
  content?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteCompetenceEvolinciteSyllabusId?: string | null;
};

export type DeleteEvolinciteCompetenceMutation = {
  __typename: 'EvolinciteCompetence';
  id: string;
  name?: string | null;
  description?: string | null;
  content?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteCompetenceEvolinciteSyllabusId?: string | null;
};

export type CreateEvolinciteCourseMutation = {
  __typename: 'EvolinciteCourse';
  id: string;
  name?: string | null;
  description?: string | null;
  durationUnit?: string | null;
  duration?: number | null;
  objectives?: Array<string | null> | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteCourseEvolinciteSyllabusId?: string | null;
};

export type UpdateEvolinciteCourseMutation = {
  __typename: 'EvolinciteCourse';
  id: string;
  name?: string | null;
  description?: string | null;
  durationUnit?: string | null;
  duration?: number | null;
  objectives?: Array<string | null> | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteCourseEvolinciteSyllabusId?: string | null;
};

export type DeleteEvolinciteCourseMutation = {
  __typename: 'EvolinciteCourse';
  id: string;
  name?: string | null;
  description?: string | null;
  durationUnit?: string | null;
  duration?: number | null;
  objectives?: Array<string | null> | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteCourseEvolinciteSyllabusId?: string | null;
};

export type CreateEvolinciteSyllabusMutation = {
  __typename: 'EvolinciteSyllabus';
  id: string;
  name?: string | null;
  description?: string | null;
  content?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteCompetence?: {
    __typename: 'EvolinciteCompetence';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteCompetenceEvolinciteSyllabusId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteSyllabusEvolinciteCompetenceId?: string | null;
};

export type UpdateEvolinciteSyllabusMutation = {
  __typename: 'EvolinciteSyllabus';
  id: string;
  name?: string | null;
  description?: string | null;
  content?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteCompetence?: {
    __typename: 'EvolinciteCompetence';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteCompetenceEvolinciteSyllabusId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteSyllabusEvolinciteCompetenceId?: string | null;
};

export type DeleteEvolinciteSyllabusMutation = {
  __typename: 'EvolinciteSyllabus';
  id: string;
  name?: string | null;
  description?: string | null;
  content?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteCompetence?: {
    __typename: 'EvolinciteCompetence';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteCompetenceEvolinciteSyllabusId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteSyllabusEvolinciteCompetenceId?: string | null;
};

export type CreateEvolinciteUserAnswersMutation = {
  __typename: 'EvolinciteUserAnswers';
  id: string;
  answers?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteUserAnswersEvolinciteUserId?: string | null;
  evolinciteUserAnswersEvolinciteSyllabusId?: string | null;
};

export type UpdateEvolinciteUserAnswersMutation = {
  __typename: 'EvolinciteUserAnswers';
  id: string;
  answers?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteUserAnswersEvolinciteUserId?: string | null;
  evolinciteUserAnswersEvolinciteSyllabusId?: string | null;
};

export type DeleteEvolinciteUserAnswersMutation = {
  __typename: 'EvolinciteUserAnswers';
  id: string;
  answers?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteUserAnswersEvolinciteUserId?: string | null;
  evolinciteUserAnswersEvolinciteSyllabusId?: string | null;
};

export type CreateEvolinciteProcessTypeMutation = {
  __typename: 'EvolinciteProcessType';
  id: string;
  name?: string | null;
  order?: number | null;
  sellerCommission?: number | null;
  referrerCommission?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteProcessTypeMutation = {
  __typename: 'EvolinciteProcessType';
  id: string;
  name?: string | null;
  order?: number | null;
  sellerCommission?: number | null;
  referrerCommission?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteProcessTypeMutation = {
  __typename: 'EvolinciteProcessType';
  id: string;
  name?: string | null;
  order?: number | null;
  sellerCommission?: number | null;
  referrerCommission?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteExpenseTypeMutation = {
  __typename: 'EvolinciteExpenseType';
  id: string;
  name?: string | null;
  type?: EvolinciteField | null;
  setting?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteExpenseTypeMutation = {
  __typename: 'EvolinciteExpenseType';
  id: string;
  name?: string | null;
  type?: EvolinciteField | null;
  setting?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteExpenseTypeMutation = {
  __typename: 'EvolinciteExpenseType';
  id: string;
  name?: string | null;
  type?: EvolinciteField | null;
  setting?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteExpenseMutation = {
  __typename: 'EvolinciteExpense';
  id: string;
  amount?: number | null;
  process?: string | null;
  expenseState?: EvolinciteExpenseStates | null;
  expenseDate?: string | null;
  observations?: string | null;
  voucher?: Array<string | null> | null;
  transactionType?: EvolinciteTransactionType | null;
  reference?: string | null;
  state?: EvolinciteStates | null;
  evolinciteExpenseTypeID?: string | null;
  EvolinciteExpenseType?: {
    __typename: 'EvolinciteExpenseType';
    id: string;
    name?: string | null;
    type?: EvolinciteField | null;
    setting?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserResponsibleID?: string | null;
  EvolinciteUserResponsible?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteExpenseMutation = {
  __typename: 'EvolinciteExpense';
  id: string;
  amount?: number | null;
  process?: string | null;
  expenseState?: EvolinciteExpenseStates | null;
  expenseDate?: string | null;
  observations?: string | null;
  voucher?: Array<string | null> | null;
  transactionType?: EvolinciteTransactionType | null;
  reference?: string | null;
  state?: EvolinciteStates | null;
  evolinciteExpenseTypeID?: string | null;
  EvolinciteExpenseType?: {
    __typename: 'EvolinciteExpenseType';
    id: string;
    name?: string | null;
    type?: EvolinciteField | null;
    setting?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserResponsibleID?: string | null;
  EvolinciteUserResponsible?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteExpenseMutation = {
  __typename: 'EvolinciteExpense';
  id: string;
  amount?: number | null;
  process?: string | null;
  expenseState?: EvolinciteExpenseStates | null;
  expenseDate?: string | null;
  observations?: string | null;
  voucher?: Array<string | null> | null;
  transactionType?: EvolinciteTransactionType | null;
  reference?: string | null;
  state?: EvolinciteStates | null;
  evolinciteExpenseTypeID?: string | null;
  EvolinciteExpenseType?: {
    __typename: 'EvolinciteExpenseType';
    id: string;
    name?: string | null;
    type?: EvolinciteField | null;
    setting?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserResponsibleID?: string | null;
  EvolinciteUserResponsible?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteUserEvolinciteJobTitleMutation = {
  __typename: 'EvolinciteUserEvolinciteJobTitle';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteJobTitleID?: string | null;
  EvolinciteJobTitle?: {
    __typename: 'EvolinciteJobTitle';
    id: string;
    name?: string | null;
    salary?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteUserEvolinciteJobTitleMutation = {
  __typename: 'EvolinciteUserEvolinciteJobTitle';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteJobTitleID?: string | null;
  EvolinciteJobTitle?: {
    __typename: 'EvolinciteJobTitle';
    id: string;
    name?: string | null;
    salary?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteUserEvolinciteJobTitleMutation = {
  __typename: 'EvolinciteUserEvolinciteJobTitle';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteJobTitleID?: string | null;
  EvolinciteJobTitle?: {
    __typename: 'EvolinciteJobTitle';
    id: string;
    name?: string | null;
    salary?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteJobTitleMutation = {
  __typename: 'EvolinciteJobTitle';
  id: string;
  name?: string | null;
  salary?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteJobTitleMutation = {
  __typename: 'EvolinciteJobTitle';
  id: string;
  name?: string | null;
  salary?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteJobTitleMutation = {
  __typename: 'EvolinciteJobTitle';
  id: string;
  name?: string | null;
  salary?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteWalletPaymentMutation = {
  __typename: 'EvolinciteWalletPayment';
  id: string;
  amount?: number | null;
  scheduledDate?: string | null;
  datePayment?: string | null;
  paymentStatus?: EvolinciteWalletPaymentStatus | null;
  prePayment?: string | null;
  postPayment?: string | null;
  observations?: string | null;
  voucher?: Array<string | null> | null;
  transactionType?: EvolinciteTransactionType | null;
  reference?: string | null;
  amountInterest?: number | null;
  amountCollection?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserReferrerID?: string | null;
  EvolinciteUserReferrer?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserSellerID?: string | null;
  EvolinciteUserSeller?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCustomerID?: string | null;
  EvolinciteCustomer?: {
    __typename: 'EvolinciteCustomer';
    id: string;
    name?: string | null;
    lastName?: string | null;
    documentType?: EvolinciteDocumentType | null;
    documentNumber?: string | null;
    phone?: string | null;
    optionalPhone?: string | null;
    email?: string | null;
    picture?: string | null;
    birthDate?: string | null;
    municipality?: EvolinciteMunicipality | null;
    documents?: Array<string | null> | null;
    address?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  evolinciteUserResponsibleID?: string | null;
  EvolinciteUserResponsible?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteWalletPaymentMutation = {
  __typename: 'EvolinciteWalletPayment';
  id: string;
  amount?: number | null;
  scheduledDate?: string | null;
  datePayment?: string | null;
  paymentStatus?: EvolinciteWalletPaymentStatus | null;
  prePayment?: string | null;
  postPayment?: string | null;
  observations?: string | null;
  voucher?: Array<string | null> | null;
  transactionType?: EvolinciteTransactionType | null;
  reference?: string | null;
  amountInterest?: number | null;
  amountCollection?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserReferrerID?: string | null;
  EvolinciteUserReferrer?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserSellerID?: string | null;
  EvolinciteUserSeller?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCustomerID?: string | null;
  EvolinciteCustomer?: {
    __typename: 'EvolinciteCustomer';
    id: string;
    name?: string | null;
    lastName?: string | null;
    documentType?: EvolinciteDocumentType | null;
    documentNumber?: string | null;
    phone?: string | null;
    optionalPhone?: string | null;
    email?: string | null;
    picture?: string | null;
    birthDate?: string | null;
    municipality?: EvolinciteMunicipality | null;
    documents?: Array<string | null> | null;
    address?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  evolinciteUserResponsibleID?: string | null;
  EvolinciteUserResponsible?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteWalletPaymentMutation = {
  __typename: 'EvolinciteWalletPayment';
  id: string;
  amount?: number | null;
  scheduledDate?: string | null;
  datePayment?: string | null;
  paymentStatus?: EvolinciteWalletPaymentStatus | null;
  prePayment?: string | null;
  postPayment?: string | null;
  observations?: string | null;
  voucher?: Array<string | null> | null;
  transactionType?: EvolinciteTransactionType | null;
  reference?: string | null;
  amountInterest?: number | null;
  amountCollection?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserReferrerID?: string | null;
  EvolinciteUserReferrer?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserSellerID?: string | null;
  EvolinciteUserSeller?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCustomerID?: string | null;
  EvolinciteCustomer?: {
    __typename: 'EvolinciteCustomer';
    id: string;
    name?: string | null;
    lastName?: string | null;
    documentType?: EvolinciteDocumentType | null;
    documentNumber?: string | null;
    phone?: string | null;
    optionalPhone?: string | null;
    email?: string | null;
    picture?: string | null;
    birthDate?: string | null;
    municipality?: EvolinciteMunicipality | null;
    documents?: Array<string | null> | null;
    address?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  evolinciteUserResponsibleID?: string | null;
  EvolinciteUserResponsible?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteCrmNegotiationFieldMutation = {
  __typename: 'EvolinciteCrmNegotiationField';
  id: string;
  field?: string | null;
  type?: EvolinciteField | null;
  required?: boolean | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFieldValues?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldValueConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmNegotiationSectionID?: string | null;
  EvolinciteCrmNegotiationSection?: {
    __typename: 'EvolinciteCrmNegotiationSection';
    id: string;
    name?: string | null;
    order?: number | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteCrmNegotiationFieldMutation = {
  __typename: 'EvolinciteCrmNegotiationField';
  id: string;
  field?: string | null;
  type?: EvolinciteField | null;
  required?: boolean | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFieldValues?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldValueConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmNegotiationSectionID?: string | null;
  EvolinciteCrmNegotiationSection?: {
    __typename: 'EvolinciteCrmNegotiationSection';
    id: string;
    name?: string | null;
    order?: number | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteCrmNegotiationFieldMutation = {
  __typename: 'EvolinciteCrmNegotiationField';
  id: string;
  field?: string | null;
  type?: EvolinciteField | null;
  required?: boolean | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFieldValues?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldValueConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmNegotiationSectionID?: string | null;
  EvolinciteCrmNegotiationSection?: {
    __typename: 'EvolinciteCrmNegotiationSection';
    id: string;
    name?: string | null;
    order?: number | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteCrmNegotiationSectionMutation = {
  __typename: 'EvolinciteCrmNegotiationSection';
  id: string;
  name?: string | null;
  order?: number | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFields?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteCrmNegotiationSectionMutation = {
  __typename: 'EvolinciteCrmNegotiationSection';
  id: string;
  name?: string | null;
  order?: number | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFields?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteCrmNegotiationSectionMutation = {
  __typename: 'EvolinciteCrmNegotiationSection';
  id: string;
  name?: string | null;
  order?: number | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFields?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteCrmAutomationMutation = {
  __typename: 'EvolinciteCrmAutomation';
  id: string;
  name?: string | null;
  rule?: EvolinciteRule | null;
  setting?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmStateID?: string | null;
  EvolinciteCrmState?: {
    __typename: 'EvolinciteCrmState';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    color?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmPipelineID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteCrmAutomationMutation = {
  __typename: 'EvolinciteCrmAutomation';
  id: string;
  name?: string | null;
  rule?: EvolinciteRule | null;
  setting?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmStateID?: string | null;
  EvolinciteCrmState?: {
    __typename: 'EvolinciteCrmState';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    color?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmPipelineID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteCrmAutomationMutation = {
  __typename: 'EvolinciteCrmAutomation';
  id: string;
  name?: string | null;
  rule?: EvolinciteRule | null;
  setting?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmStateID?: string | null;
  EvolinciteCrmState?: {
    __typename: 'EvolinciteCrmState';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    color?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmPipelineID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteCommentMutation = {
  __typename: 'EvolinciteComment';
  id: string;
  files?: Array<string | null> | null;
  content?: string | null;
  pinned?: boolean | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteCommentMutation = {
  __typename: 'EvolinciteComment';
  id: string;
  files?: Array<string | null> | null;
  content?: string | null;
  pinned?: boolean | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteCommentMutation = {
  __typename: 'EvolinciteComment';
  id: string;
  files?: Array<string | null> | null;
  content?: string | null;
  pinned?: boolean | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteActivityMutation = {
  __typename: 'EvolinciteActivity';
  id: string;
  name?: string | null;
  description?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  color?: string | null;
  type?: EvolinciteActivityTypes | null;
  priority?: number | null;
  meta?: string | null;
  taskState?: EvolinciteTaskStates | null;
  documents?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  Participants?: {
    __typename: 'ModelEvolinciteActivityEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteActivityMutation = {
  __typename: 'EvolinciteActivity';
  id: string;
  name?: string | null;
  description?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  color?: string | null;
  type?: EvolinciteActivityTypes | null;
  priority?: number | null;
  meta?: string | null;
  taskState?: EvolinciteTaskStates | null;
  documents?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  Participants?: {
    __typename: 'ModelEvolinciteActivityEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteActivityMutation = {
  __typename: 'EvolinciteActivity';
  id: string;
  name?: string | null;
  description?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  color?: string | null;
  type?: EvolinciteActivityTypes | null;
  priority?: number | null;
  meta?: string | null;
  taskState?: EvolinciteTaskStates | null;
  documents?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  Participants?: {
    __typename: 'ModelEvolinciteActivityEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolincitePermissionsMutation = {
  __typename: 'EvolincitePermissions';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  evolinciteDepartmentID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteDepartment?: {
    __typename: 'EvolinciteDepartment';
    id: string;
    name?: string | null;
    parent?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteRolID?: string | null;
  EvolinciteRol?: {
    __typename: 'EvolinciteRol';
    id: string;
    name?: string | null;
    permissions?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolincitePermissionsMutation = {
  __typename: 'EvolincitePermissions';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  evolinciteDepartmentID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteDepartment?: {
    __typename: 'EvolinciteDepartment';
    id: string;
    name?: string | null;
    parent?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteRolID?: string | null;
  EvolinciteRol?: {
    __typename: 'EvolinciteRol';
    id: string;
    name?: string | null;
    permissions?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolincitePermissionsMutation = {
  __typename: 'EvolincitePermissions';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  evolinciteDepartmentID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteDepartment?: {
    __typename: 'EvolinciteDepartment';
    id: string;
    name?: string | null;
    parent?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteRolID?: string | null;
  EvolinciteRol?: {
    __typename: 'EvolinciteRol';
    id: string;
    name?: string | null;
    permissions?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteDepartmentMutation = {
  __typename: 'EvolinciteDepartment';
  id: string;
  name?: string | null;
  parent?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteDepartmentMutation = {
  __typename: 'EvolinciteDepartment';
  id: string;
  name?: string | null;
  parent?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteDepartmentMutation = {
  __typename: 'EvolinciteDepartment';
  id: string;
  name?: string | null;
  parent?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteSubscriptionMutation = {
  __typename: 'EvolinciteSubscription';
  id: string;
  name?: string | null;
  price?: number | null;
  dateInitial?: string | null;
  dateFinal?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteCompanies?: {
    __typename: 'ModelEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteSubscriptionMutation = {
  __typename: 'EvolinciteSubscription';
  id: string;
  name?: string | null;
  price?: number | null;
  dateInitial?: string | null;
  dateFinal?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteCompanies?: {
    __typename: 'ModelEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteSubscriptionMutation = {
  __typename: 'EvolinciteSubscription';
  id: string;
  name?: string | null;
  price?: number | null;
  dateInitial?: string | null;
  dateFinal?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteCompanies?: {
    __typename: 'ModelEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteModuleMutation = {
  __typename: 'EvolinciteModule';
  id: string;
  name?: string | null;
  state?: EvolinciteStates | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteModuleMutation = {
  __typename: 'EvolinciteModule';
  id: string;
  name?: string | null;
  state?: EvolinciteStates | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteModuleMutation = {
  __typename: 'EvolinciteModule';
  id: string;
  name?: string | null;
  state?: EvolinciteStates | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteFunctionalityMutation = {
  __typename: 'EvolinciteFunctionality';
  id: string;
  name?: string | null;
  functionalities?: Array<EvolinciteFunctionalities | null> | null;
  state?: EvolinciteStates | null;
  evolincitePackageID?: string | null;
  EvolincitePackage?: {
    __typename: 'EvolincitePackage';
    id: string;
    name?: string | null;
    description?: string | null;
    goal?: string | null;
    duration?: number | null;
    state?: EvolinciteStates | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteFunctionalityMutation = {
  __typename: 'EvolinciteFunctionality';
  id: string;
  name?: string | null;
  functionalities?: Array<EvolinciteFunctionalities | null> | null;
  state?: EvolinciteStates | null;
  evolincitePackageID?: string | null;
  EvolincitePackage?: {
    __typename: 'EvolincitePackage';
    id: string;
    name?: string | null;
    description?: string | null;
    goal?: string | null;
    duration?: number | null;
    state?: EvolinciteStates | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteFunctionalityMutation = {
  __typename: 'EvolinciteFunctionality';
  id: string;
  name?: string | null;
  functionalities?: Array<EvolinciteFunctionalities | null> | null;
  state?: EvolinciteStates | null;
  evolincitePackageID?: string | null;
  EvolincitePackage?: {
    __typename: 'EvolincitePackage';
    id: string;
    name?: string | null;
    description?: string | null;
    goal?: string | null;
    duration?: number | null;
    state?: EvolinciteStates | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteRolMutation = {
  __typename: 'EvolinciteRol';
  id: string;
  name?: string | null;
  permissions?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteRolMutation = {
  __typename: 'EvolinciteRol';
  id: string;
  name?: string | null;
  permissions?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteRolMutation = {
  __typename: 'EvolinciteRol';
  id: string;
  name?: string | null;
  permissions?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteCustomerMutation = {
  __typename: 'EvolinciteCustomer';
  id: string;
  name?: string | null;
  lastName?: string | null;
  documentType?: EvolinciteDocumentType | null;
  documentNumber?: string | null;
  phone?: string | null;
  optionalPhone?: string | null;
  email?: string | null;
  picture?: string | null;
  birthDate?: string | null;
  municipality?: EvolinciteMunicipality | null;
  documents?: Array<string | null> | null;
  address?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteCustomerMutation = {
  __typename: 'EvolinciteCustomer';
  id: string;
  name?: string | null;
  lastName?: string | null;
  documentType?: EvolinciteDocumentType | null;
  documentNumber?: string | null;
  phone?: string | null;
  optionalPhone?: string | null;
  email?: string | null;
  picture?: string | null;
  birthDate?: string | null;
  municipality?: EvolinciteMunicipality | null;
  documents?: Array<string | null> | null;
  address?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteCustomerMutation = {
  __typename: 'EvolinciteCustomer';
  id: string;
  name?: string | null;
  lastName?: string | null;
  documentType?: EvolinciteDocumentType | null;
  documentNumber?: string | null;
  phone?: string | null;
  optionalPhone?: string | null;
  email?: string | null;
  picture?: string | null;
  birthDate?: string | null;
  municipality?: EvolinciteMunicipality | null;
  documents?: Array<string | null> | null;
  address?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteUserSettingsMutation = {
  __typename: 'EvolinciteUserSettings';
  id: string;
  settings?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteUserSettingsMutation = {
  __typename: 'EvolinciteUserSettings';
  id: string;
  settings?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteUserSettingsMutation = {
  __typename: 'EvolinciteUserSettings';
  id: string;
  settings?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteCrmPipelineMutation = {
  __typename: 'EvolinciteCrmPipeline';
  id: string;
  name?: string | null;
  description?: string | null;
  publicDescription?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmStates?: {
    __typename: 'ModelEvolinciteCrmStateConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteCrmPipelineMutation = {
  __typename: 'EvolinciteCrmPipeline';
  id: string;
  name?: string | null;
  description?: string | null;
  publicDescription?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmStates?: {
    __typename: 'ModelEvolinciteCrmStateConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteCrmPipelineMutation = {
  __typename: 'EvolinciteCrmPipeline';
  id: string;
  name?: string | null;
  description?: string | null;
  publicDescription?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmStates?: {
    __typename: 'ModelEvolinciteCrmStateConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteCrmStateMutation = {
  __typename: 'EvolinciteCrmState';
  id: string;
  name?: string | null;
  description?: string | null;
  publicDescription?: string | null;
  color?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmAutomations?: {
    __typename: 'ModelEvolinciteCrmAutomationConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmPipelineID?: string | null;
  EvolinciteCrmPipeline?: {
    __typename: 'EvolinciteCrmPipeline';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteCrmStateMutation = {
  __typename: 'EvolinciteCrmState';
  id: string;
  name?: string | null;
  description?: string | null;
  publicDescription?: string | null;
  color?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmAutomations?: {
    __typename: 'ModelEvolinciteCrmAutomationConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmPipelineID?: string | null;
  EvolinciteCrmPipeline?: {
    __typename: 'EvolinciteCrmPipeline';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteCrmStateMutation = {
  __typename: 'EvolinciteCrmState';
  id: string;
  name?: string | null;
  description?: string | null;
  publicDescription?: string | null;
  color?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmAutomations?: {
    __typename: 'ModelEvolinciteCrmAutomationConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmPipelineID?: string | null;
  EvolinciteCrmPipeline?: {
    __typename: 'EvolinciteCrmPipeline';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteCrmNegotiationLogMutation = {
  __typename: 'EvolinciteCrmNegotiationLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteCrmNegotiationLogMutation = {
  __typename: 'EvolinciteCrmNegotiationLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteCrmNegotiationLogMutation = {
  __typename: 'EvolinciteCrmNegotiationLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteCrmNegotiationMutation = {
  __typename: 'EvolinciteCrmNegotiation';
  id: string;
  name?: string | null;
  value?: number | null;
  due?: number | null;
  parent?: string | null;
  date?: string | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  frozen?: boolean | null;
  valueInterest?: number | null;
  valueCollection?: number | null;
  observers?: Array<string | null> | null;
  exitDate?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserSellerID?: string | null;
  EvolinciteUserSeller?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserReferrerID?: string | null;
  EvolinciteUserReferrer?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserOwnerID?: string | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFieldValues?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldValueConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmStateID?: string | null;
  EvolinciteCrmState?: {
    __typename: 'EvolinciteCrmState';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    color?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmPipelineID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCustomerID?: string | null;
  EvolinciteCustomer?: {
    __typename: 'EvolinciteCustomer';
    id: string;
    name?: string | null;
    lastName?: string | null;
    documentType?: EvolinciteDocumentType | null;
    documentNumber?: string | null;
    phone?: string | null;
    optionalPhone?: string | null;
    email?: string | null;
    picture?: string | null;
    birthDate?: string | null;
    municipality?: EvolinciteMunicipality | null;
    documents?: Array<string | null> | null;
    address?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteComments?: {
    __typename: 'ModelEvolinciteCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivities?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUsersObserver?: {
    __typename: 'ModelEvolinciteUserEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  evolinciteProcessTypeID?: string | null;
  EvolinciteProcessType?: {
    __typename: 'EvolinciteProcessType';
    id: string;
    name?: string | null;
    order?: number | null;
    sellerCommission?: number | null;
    referrerCommission?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  initialGoalID?: string | null;
  InitialGoal?: {
    __typename: 'EvolinciteGoal';
    id: string;
    name?: string | null;
    description?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  finalGoalID?: string | null;
  FinalGoal?: {
    __typename: 'EvolinciteGoal';
    id: string;
    name?: string | null;
    description?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteCrmNegotiationMutation = {
  __typename: 'EvolinciteCrmNegotiation';
  id: string;
  name?: string | null;
  value?: number | null;
  due?: number | null;
  parent?: string | null;
  date?: string | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  frozen?: boolean | null;
  valueInterest?: number | null;
  valueCollection?: number | null;
  observers?: Array<string | null> | null;
  exitDate?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserSellerID?: string | null;
  EvolinciteUserSeller?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserReferrerID?: string | null;
  EvolinciteUserReferrer?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserOwnerID?: string | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFieldValues?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldValueConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmStateID?: string | null;
  EvolinciteCrmState?: {
    __typename: 'EvolinciteCrmState';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    color?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmPipelineID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCustomerID?: string | null;
  EvolinciteCustomer?: {
    __typename: 'EvolinciteCustomer';
    id: string;
    name?: string | null;
    lastName?: string | null;
    documentType?: EvolinciteDocumentType | null;
    documentNumber?: string | null;
    phone?: string | null;
    optionalPhone?: string | null;
    email?: string | null;
    picture?: string | null;
    birthDate?: string | null;
    municipality?: EvolinciteMunicipality | null;
    documents?: Array<string | null> | null;
    address?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteComments?: {
    __typename: 'ModelEvolinciteCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivities?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUsersObserver?: {
    __typename: 'ModelEvolinciteUserEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  evolinciteProcessTypeID?: string | null;
  EvolinciteProcessType?: {
    __typename: 'EvolinciteProcessType';
    id: string;
    name?: string | null;
    order?: number | null;
    sellerCommission?: number | null;
    referrerCommission?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  initialGoalID?: string | null;
  InitialGoal?: {
    __typename: 'EvolinciteGoal';
    id: string;
    name?: string | null;
    description?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  finalGoalID?: string | null;
  FinalGoal?: {
    __typename: 'EvolinciteGoal';
    id: string;
    name?: string | null;
    description?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteCrmNegotiationMutation = {
  __typename: 'EvolinciteCrmNegotiation';
  id: string;
  name?: string | null;
  value?: number | null;
  due?: number | null;
  parent?: string | null;
  date?: string | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  frozen?: boolean | null;
  valueInterest?: number | null;
  valueCollection?: number | null;
  observers?: Array<string | null> | null;
  exitDate?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserSellerID?: string | null;
  EvolinciteUserSeller?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserReferrerID?: string | null;
  EvolinciteUserReferrer?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserOwnerID?: string | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFieldValues?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldValueConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmStateID?: string | null;
  EvolinciteCrmState?: {
    __typename: 'EvolinciteCrmState';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    color?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmPipelineID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCustomerID?: string | null;
  EvolinciteCustomer?: {
    __typename: 'EvolinciteCustomer';
    id: string;
    name?: string | null;
    lastName?: string | null;
    documentType?: EvolinciteDocumentType | null;
    documentNumber?: string | null;
    phone?: string | null;
    optionalPhone?: string | null;
    email?: string | null;
    picture?: string | null;
    birthDate?: string | null;
    municipality?: EvolinciteMunicipality | null;
    documents?: Array<string | null> | null;
    address?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteComments?: {
    __typename: 'ModelEvolinciteCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivities?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUsersObserver?: {
    __typename: 'ModelEvolinciteUserEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  evolinciteProcessTypeID?: string | null;
  EvolinciteProcessType?: {
    __typename: 'EvolinciteProcessType';
    id: string;
    name?: string | null;
    order?: number | null;
    sellerCommission?: number | null;
    referrerCommission?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  initialGoalID?: string | null;
  InitialGoal?: {
    __typename: 'EvolinciteGoal';
    id: string;
    name?: string | null;
    description?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  finalGoalID?: string | null;
  FinalGoal?: {
    __typename: 'EvolinciteGoal';
    id: string;
    name?: string | null;
    description?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteRoomMutation = {
  __typename: 'EvolinciteRoom';
  id: string;
  Key?: string | null;
  name?: string | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  EvolinciteUsers?: {
    __typename: 'ModelEvolinciteRoomEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteRoomMutation = {
  __typename: 'EvolinciteRoom';
  id: string;
  Key?: string | null;
  name?: string | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  EvolinciteUsers?: {
    __typename: 'ModelEvolinciteRoomEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteRoomMutation = {
  __typename: 'EvolinciteRoom';
  id: string;
  Key?: string | null;
  name?: string | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  EvolinciteUsers?: {
    __typename: 'ModelEvolinciteRoomEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteMessageMutation = {
  __typename: 'EvolinciteMessage';
  id: string;
  content?: string | null;
  type?: EvolinciteMessageType | null;
  state?: EvolinciteStates | null;
  createdAt?: string | null;
  updatedAt?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteRoomID?: string | null;
  EvolinciteRoom?: {
    __typename: 'EvolinciteRoom';
    id: string;
    Key?: string | null;
    name?: string | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
};

export type UpdateEvolinciteMessageMutation = {
  __typename: 'EvolinciteMessage';
  id: string;
  content?: string | null;
  type?: EvolinciteMessageType | null;
  state?: EvolinciteStates | null;
  createdAt?: string | null;
  updatedAt?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteRoomID?: string | null;
  EvolinciteRoom?: {
    __typename: 'EvolinciteRoom';
    id: string;
    Key?: string | null;
    name?: string | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
};

export type DeleteEvolinciteMessageMutation = {
  __typename: 'EvolinciteMessage';
  id: string;
  content?: string | null;
  type?: EvolinciteMessageType | null;
  state?: EvolinciteStates | null;
  createdAt?: string | null;
  updatedAt?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteRoomID?: string | null;
  EvolinciteRoom?: {
    __typename: 'EvolinciteRoom';
    id: string;
    Key?: string | null;
    name?: string | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
};

export type CreateEvolinciteCrmNegotiationFieldValueMutation = {
  __typename: 'EvolinciteCrmNegotiationFieldValue';
  id: string;
  value?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCrmNegotiationFieldID?: string | null;
  EvolinciteCrmNegotiationField?: {
    __typename: 'EvolinciteCrmNegotiationField';
    id: string;
    field?: string | null;
    type?: EvolinciteField | null;
    required?: boolean | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationSectionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteCrmNegotiationFieldValueMutation = {
  __typename: 'EvolinciteCrmNegotiationFieldValue';
  id: string;
  value?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCrmNegotiationFieldID?: string | null;
  EvolinciteCrmNegotiationField?: {
    __typename: 'EvolinciteCrmNegotiationField';
    id: string;
    field?: string | null;
    type?: EvolinciteField | null;
    required?: boolean | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationSectionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteCrmNegotiationFieldValueMutation = {
  __typename: 'EvolinciteCrmNegotiationFieldValue';
  id: string;
  value?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCrmNegotiationFieldID?: string | null;
  EvolinciteCrmNegotiationField?: {
    __typename: 'EvolinciteCrmNegotiationField';
    id: string;
    field?: string | null;
    type?: EvolinciteField | null;
    required?: boolean | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationSectionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteEmailMutation = {
  __typename: 'EvolinciteEmail';
  id: string;
  from?: string | null;
  to?: string | null;
  content?: string | null;
  subject?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteEmailMutation = {
  __typename: 'EvolinciteEmail';
  id: string;
  from?: string | null;
  to?: string | null;
  content?: string | null;
  subject?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteEmailMutation = {
  __typename: 'EvolinciteEmail';
  id: string;
  from?: string | null;
  to?: string | null;
  content?: string | null;
  subject?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteEmailTemplateMutation = {
  __typename: 'EvolinciteEmailTemplate';
  id: string;
  content?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteEmailTemplateMutation = {
  __typename: 'EvolinciteEmailTemplate';
  id: string;
  content?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteEmailTemplateMutation = {
  __typename: 'EvolinciteEmailTemplate';
  id: string;
  content?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteNotificationMutation = {
  __typename: 'EvolinciteNotification';
  id: string;
  content?: string | null;
  title?: string | null;
  priority?: EvolinciteNotificationPriority | null;
  type?: EvolunciteNotificationType | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteNotificationMutation = {
  __typename: 'EvolinciteNotification';
  id: string;
  content?: string | null;
  title?: string | null;
  priority?: EvolinciteNotificationPriority | null;
  type?: EvolunciteNotificationType | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteNotificationMutation = {
  __typename: 'EvolinciteNotification';
  id: string;
  content?: string | null;
  title?: string | null;
  priority?: EvolinciteNotificationPriority | null;
  type?: EvolunciteNotificationType | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteUserDepartmentMutation = {
  __typename: 'EvolinciteUserDepartment';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteDepartmentID?: string | null;
  EvolinciteDepartment?: {
    __typename: 'EvolinciteDepartment';
    id: string;
    name?: string | null;
    parent?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteUserDepartmentMutation = {
  __typename: 'EvolinciteUserDepartment';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteDepartmentID?: string | null;
  EvolinciteDepartment?: {
    __typename: 'EvolinciteDepartment';
    id: string;
    name?: string | null;
    parent?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteUserDepartmentMutation = {
  __typename: 'EvolinciteUserDepartment';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteDepartmentID?: string | null;
  EvolinciteDepartment?: {
    __typename: 'EvolinciteDepartment';
    id: string;
    name?: string | null;
    parent?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteUserEvolinciteCompanyMutation = {
  __typename: 'EvolinciteUserEvolinciteCompany';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteUserEvolinciteCompanyMutation = {
  __typename: 'EvolinciteUserEvolinciteCompany';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteUserEvolinciteCompanyMutation = {
  __typename: 'EvolinciteUserEvolinciteCompany';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteUserMutation = {
  __typename: 'EvolinciteUser';
  id: string;
  name?: string | null;
  nit?: string | null;
  phone?: string | null;
  picture?: string | null;
  email?: string | null;
  sub?: string | null;
  meta?: string | null;
  cv?: string | null;
  contract?: string | null;
  memos?: Array<string | null> | null;
  personalMail?: string | null;
  personalPhone?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteUserEvolinciteCompanies?: {
    __typename: 'ModelEvolinciteUserEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivitiesOwner?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivitiesParticipants?: {
    __typename: 'ModelEvolinciteActivityEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRooms?: {
    __typename: 'ModelEvolinciteRoomEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsOwner?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsReferrer?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsSeller?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentsUserSeller?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentsUserReferrer?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteNotifications?: {
    __typename: 'ModelEvolinciteNotificationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteComments?: {
    __typename: 'ModelEvolinciteCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserSettings?: {
    __typename: 'ModelEvolinciteUserSettingsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsObserver?: {
    __typename: 'ModelEvolinciteUserEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicket?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFolders?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticles?: {
    __typename: 'ModelEvolinciteArticleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticleComments?: {
    __typename: 'ModelEvolinciteArticleCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFoldersOwner?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormConfigurations?: {
    __typename: 'ModelEvolinciteFormConfigurationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMails?: {
    __typename: 'ModelEvolinciteMailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmployeeObservations?: {
    __typename: 'ModelEvolinciteEmployeeObservationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteUserMutation = {
  __typename: 'EvolinciteUser';
  id: string;
  name?: string | null;
  nit?: string | null;
  phone?: string | null;
  picture?: string | null;
  email?: string | null;
  sub?: string | null;
  meta?: string | null;
  cv?: string | null;
  contract?: string | null;
  memos?: Array<string | null> | null;
  personalMail?: string | null;
  personalPhone?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteUserEvolinciteCompanies?: {
    __typename: 'ModelEvolinciteUserEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivitiesOwner?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivitiesParticipants?: {
    __typename: 'ModelEvolinciteActivityEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRooms?: {
    __typename: 'ModelEvolinciteRoomEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsOwner?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsReferrer?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsSeller?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentsUserSeller?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentsUserReferrer?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteNotifications?: {
    __typename: 'ModelEvolinciteNotificationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteComments?: {
    __typename: 'ModelEvolinciteCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserSettings?: {
    __typename: 'ModelEvolinciteUserSettingsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsObserver?: {
    __typename: 'ModelEvolinciteUserEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicket?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFolders?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticles?: {
    __typename: 'ModelEvolinciteArticleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticleComments?: {
    __typename: 'ModelEvolinciteArticleCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFoldersOwner?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormConfigurations?: {
    __typename: 'ModelEvolinciteFormConfigurationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMails?: {
    __typename: 'ModelEvolinciteMailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmployeeObservations?: {
    __typename: 'ModelEvolinciteEmployeeObservationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteUserMutation = {
  __typename: 'EvolinciteUser';
  id: string;
  name?: string | null;
  nit?: string | null;
  phone?: string | null;
  picture?: string | null;
  email?: string | null;
  sub?: string | null;
  meta?: string | null;
  cv?: string | null;
  contract?: string | null;
  memos?: Array<string | null> | null;
  personalMail?: string | null;
  personalPhone?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteUserEvolinciteCompanies?: {
    __typename: 'ModelEvolinciteUserEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivitiesOwner?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivitiesParticipants?: {
    __typename: 'ModelEvolinciteActivityEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRooms?: {
    __typename: 'ModelEvolinciteRoomEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsOwner?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsReferrer?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsSeller?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentsUserSeller?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentsUserReferrer?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteNotifications?: {
    __typename: 'ModelEvolinciteNotificationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteComments?: {
    __typename: 'ModelEvolinciteCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserSettings?: {
    __typename: 'ModelEvolinciteUserSettingsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsObserver?: {
    __typename: 'ModelEvolinciteUserEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicket?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFolders?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticles?: {
    __typename: 'ModelEvolinciteArticleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticleComments?: {
    __typename: 'ModelEvolinciteArticleCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFoldersOwner?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormConfigurations?: {
    __typename: 'ModelEvolinciteFormConfigurationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMails?: {
    __typename: 'ModelEvolinciteMailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmployeeObservations?: {
    __typename: 'ModelEvolinciteEmployeeObservationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteCompanyMutation = {
  __typename: 'EvolinciteCompany';
  id: string;
  name?: string | null;
  nit?: string | null;
  picture?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteUserEvolinciteCompanies?: {
    __typename: 'ModelEvolinciteUserEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  evolinciteSubscriptionID?: string | null;
  EvolinciteSubscription?: {
    __typename: 'EvolinciteSubscription';
    id: string;
    name?: string | null;
    price?: number | null;
    dateInitial?: string | null;
    dateFinal?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationFields?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationSections?: {
    __typename: 'ModelEvolinciteCrmNegotiationSectionConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmAutomations?: {
    __typename: 'ModelEvolinciteCrmAutomationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteDepartments?: {
    __typename: 'ModelEvolinciteDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCustomers?: {
    __typename: 'ModelEvolinciteCustomerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmPipelines?: {
    __typename: 'ModelEvolinciteCrmPipelineConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmStates?: {
    __typename: 'ModelEvolinciteCrmStateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteJobTitles?: {
    __typename: 'ModelEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteNotifications?: {
    __typename: 'ModelEvolinciteNotificationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmailTemplates?: {
    __typename: 'ModelEvolinciteEmailTemplateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmails?: {
    __typename: 'ModelEvolinciteEmailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivities?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRoles?: {
    __typename: 'ModelEvolinciteRolConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserSettings?: {
    __typename: 'ModelEvolinciteUserSettingsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRooms?: {
    __typename: 'ModelEvolinciteRoomConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseTypes?: {
    __typename: 'ModelEvolinciteExpenseTypeConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteProcessTypes?: {
    __typename: 'ModelEvolinciteProcessTypeConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteGoal?: {
    __typename: 'ModelEvolinciteGoalConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketOwner?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketOrigin?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFolders?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticles?: {
    __typename: 'ModelEvolinciteArticleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormConfigurations?: {
    __typename: 'ModelEvolinciteFormConfigurationConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentAutomations?: {
    __typename: 'ModelEvolincitePaymentAutomationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMails?: {
    __typename: 'ModelEvolinciteMailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMailTemplates?: {
    __typename: 'ModelEvolinciteMailTemplateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCompanySubscriptions?: {
    __typename: 'ModelEvolinciteCompanySubscriptionConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmployeeObservations?: {
    __typename: 'ModelEvolinciteEmployeeObservationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteCompanyMutation = {
  __typename: 'EvolinciteCompany';
  id: string;
  name?: string | null;
  nit?: string | null;
  picture?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteUserEvolinciteCompanies?: {
    __typename: 'ModelEvolinciteUserEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  evolinciteSubscriptionID?: string | null;
  EvolinciteSubscription?: {
    __typename: 'EvolinciteSubscription';
    id: string;
    name?: string | null;
    price?: number | null;
    dateInitial?: string | null;
    dateFinal?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationFields?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationSections?: {
    __typename: 'ModelEvolinciteCrmNegotiationSectionConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmAutomations?: {
    __typename: 'ModelEvolinciteCrmAutomationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteDepartments?: {
    __typename: 'ModelEvolinciteDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCustomers?: {
    __typename: 'ModelEvolinciteCustomerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmPipelines?: {
    __typename: 'ModelEvolinciteCrmPipelineConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmStates?: {
    __typename: 'ModelEvolinciteCrmStateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteJobTitles?: {
    __typename: 'ModelEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteNotifications?: {
    __typename: 'ModelEvolinciteNotificationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmailTemplates?: {
    __typename: 'ModelEvolinciteEmailTemplateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmails?: {
    __typename: 'ModelEvolinciteEmailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivities?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRoles?: {
    __typename: 'ModelEvolinciteRolConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserSettings?: {
    __typename: 'ModelEvolinciteUserSettingsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRooms?: {
    __typename: 'ModelEvolinciteRoomConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseTypes?: {
    __typename: 'ModelEvolinciteExpenseTypeConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteProcessTypes?: {
    __typename: 'ModelEvolinciteProcessTypeConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteGoal?: {
    __typename: 'ModelEvolinciteGoalConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketOwner?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketOrigin?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFolders?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticles?: {
    __typename: 'ModelEvolinciteArticleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormConfigurations?: {
    __typename: 'ModelEvolinciteFormConfigurationConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentAutomations?: {
    __typename: 'ModelEvolincitePaymentAutomationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMails?: {
    __typename: 'ModelEvolinciteMailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMailTemplates?: {
    __typename: 'ModelEvolinciteMailTemplateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCompanySubscriptions?: {
    __typename: 'ModelEvolinciteCompanySubscriptionConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmployeeObservations?: {
    __typename: 'ModelEvolinciteEmployeeObservationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteCompanyMutation = {
  __typename: 'EvolinciteCompany';
  id: string;
  name?: string | null;
  nit?: string | null;
  picture?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteUserEvolinciteCompanies?: {
    __typename: 'ModelEvolinciteUserEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  evolinciteSubscriptionID?: string | null;
  EvolinciteSubscription?: {
    __typename: 'EvolinciteSubscription';
    id: string;
    name?: string | null;
    price?: number | null;
    dateInitial?: string | null;
    dateFinal?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationFields?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationSections?: {
    __typename: 'ModelEvolinciteCrmNegotiationSectionConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmAutomations?: {
    __typename: 'ModelEvolinciteCrmAutomationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteDepartments?: {
    __typename: 'ModelEvolinciteDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCustomers?: {
    __typename: 'ModelEvolinciteCustomerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmPipelines?: {
    __typename: 'ModelEvolinciteCrmPipelineConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmStates?: {
    __typename: 'ModelEvolinciteCrmStateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteJobTitles?: {
    __typename: 'ModelEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteNotifications?: {
    __typename: 'ModelEvolinciteNotificationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmailTemplates?: {
    __typename: 'ModelEvolinciteEmailTemplateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmails?: {
    __typename: 'ModelEvolinciteEmailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivities?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRoles?: {
    __typename: 'ModelEvolinciteRolConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserSettings?: {
    __typename: 'ModelEvolinciteUserSettingsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRooms?: {
    __typename: 'ModelEvolinciteRoomConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseTypes?: {
    __typename: 'ModelEvolinciteExpenseTypeConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteProcessTypes?: {
    __typename: 'ModelEvolinciteProcessTypeConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteGoal?: {
    __typename: 'ModelEvolinciteGoalConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketOwner?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketOrigin?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFolders?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticles?: {
    __typename: 'ModelEvolinciteArticleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormConfigurations?: {
    __typename: 'ModelEvolinciteFormConfigurationConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentAutomations?: {
    __typename: 'ModelEvolincitePaymentAutomationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMails?: {
    __typename: 'ModelEvolinciteMailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMailTemplates?: {
    __typename: 'ModelEvolinciteMailTemplateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCompanySubscriptions?: {
    __typename: 'ModelEvolinciteCompanySubscriptionConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmployeeObservations?: {
    __typename: 'ModelEvolinciteEmployeeObservationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteGoalMutation = {
  __typename: 'EvolinciteGoal';
  id: string;
  name?: string | null;
  description?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationsInitial?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsFinal?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteGoalMutation = {
  __typename: 'EvolinciteGoal';
  id: string;
  name?: string | null;
  description?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationsInitial?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsFinal?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteGoalMutation = {
  __typename: 'EvolinciteGoal';
  id: string;
  name?: string | null;
  description?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationsInitial?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsFinal?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteWalletPaymentLogMutation = {
  __typename: 'EvolinciteWalletPaymentLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteWalletPaymentID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayment?: {
    __typename: 'EvolinciteWalletPayment';
    id: string;
    amount?: number | null;
    scheduledDate?: string | null;
    datePayment?: string | null;
    paymentStatus?: EvolinciteWalletPaymentStatus | null;
    prePayment?: string | null;
    postPayment?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    amountInterest?: number | null;
    amountCollection?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteWalletPaymentLogMutation = {
  __typename: 'EvolinciteWalletPaymentLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteWalletPaymentID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayment?: {
    __typename: 'EvolinciteWalletPayment';
    id: string;
    amount?: number | null;
    scheduledDate?: string | null;
    datePayment?: string | null;
    paymentStatus?: EvolinciteWalletPaymentStatus | null;
    prePayment?: string | null;
    postPayment?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    amountInterest?: number | null;
    amountCollection?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteWalletPaymentLogMutation = {
  __typename: 'EvolinciteWalletPaymentLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteWalletPaymentID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayment?: {
    __typename: 'EvolinciteWalletPayment';
    id: string;
    amount?: number | null;
    scheduledDate?: string | null;
    datePayment?: string | null;
    paymentStatus?: EvolinciteWalletPaymentStatus | null;
    prePayment?: string | null;
    postPayment?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    amountInterest?: number | null;
    amountCollection?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteExpenseLogMutation = {
  __typename: 'EvolinciteExpenseLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteExpenseID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteExpense?: {
    __typename: 'EvolinciteExpense';
    id: string;
    amount?: number | null;
    process?: string | null;
    expenseState?: EvolinciteExpenseStates | null;
    expenseDate?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    state?: EvolinciteStates | null;
    evolinciteExpenseTypeID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteExpenseLogMutation = {
  __typename: 'EvolinciteExpenseLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteExpenseID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteExpense?: {
    __typename: 'EvolinciteExpense';
    id: string;
    amount?: number | null;
    process?: string | null;
    expenseState?: EvolinciteExpenseStates | null;
    expenseDate?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    state?: EvolinciteStates | null;
    evolinciteExpenseTypeID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteExpenseLogMutation = {
  __typename: 'EvolinciteExpenseLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteExpenseID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteExpense?: {
    __typename: 'EvolinciteExpense';
    id: string;
    amount?: number | null;
    process?: string | null;
    expenseState?: EvolinciteExpenseStates | null;
    expenseDate?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    state?: EvolinciteStates | null;
    evolinciteExpenseTypeID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteTicketMutation = {
  __typename: 'EvolinciteTicket';
  id: string;
  name?: string | null;
  description?: string | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  ticketState?: EvolinciteTicketState | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyOwnerID?: string | null;
  evolinciteCompanyOriginID?: string | null;
  EvolinciteCompanyOwner?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCompanyOrigin?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteTicketMutation = {
  __typename: 'EvolinciteTicket';
  id: string;
  name?: string | null;
  description?: string | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  ticketState?: EvolinciteTicketState | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyOwnerID?: string | null;
  evolinciteCompanyOriginID?: string | null;
  EvolinciteCompanyOwner?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCompanyOrigin?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteTicketMutation = {
  __typename: 'EvolinciteTicket';
  id: string;
  name?: string | null;
  description?: string | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  ticketState?: EvolinciteTicketState | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyOwnerID?: string | null;
  evolinciteCompanyOriginID?: string | null;
  EvolinciteCompanyOwner?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCompanyOrigin?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteTicketLogMutation = {
  __typename: 'EvolinciteTicketLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteTicketID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteTicket?: {
    __typename: 'EvolinciteTicket';
    id: string;
    name?: string | null;
    description?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    ticketState?: EvolinciteTicketState | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyOwnerID?: string | null;
    evolinciteCompanyOriginID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteTicketLogMutation = {
  __typename: 'EvolinciteTicketLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteTicketID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteTicket?: {
    __typename: 'EvolinciteTicket';
    id: string;
    name?: string | null;
    description?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    ticketState?: EvolinciteTicketState | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyOwnerID?: string | null;
    evolinciteCompanyOriginID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteTicketLogMutation = {
  __typename: 'EvolinciteTicketLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteTicketID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteTicket?: {
    __typename: 'EvolinciteTicket';
    id: string;
    name?: string | null;
    description?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    ticketState?: EvolinciteTicketState | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyOwnerID?: string | null;
    evolinciteCompanyOriginID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteFileMutation = {
  __typename: 'EvolinciteFile';
  id: string;
  name?: string | null;
  size?: number | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteFolderID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFolder?: {
    __typename: 'EvolinciteFolder';
    id: string;
    parent?: string | null;
    name?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteFileMutation = {
  __typename: 'EvolinciteFile';
  id: string;
  name?: string | null;
  size?: number | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteFolderID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFolder?: {
    __typename: 'EvolinciteFolder';
    id: string;
    parent?: string | null;
    name?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteFileMutation = {
  __typename: 'EvolinciteFile';
  id: string;
  name?: string | null;
  size?: number | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteFolderID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFolder?: {
    __typename: 'EvolinciteFolder';
    id: string;
    parent?: string | null;
    name?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteFolderMutation = {
  __typename: 'EvolinciteFolder';
  id: string;
  parent?: string | null;
  name?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteUserOwnerID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteFolderMutation = {
  __typename: 'EvolinciteFolder';
  id: string;
  parent?: string | null;
  name?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteUserOwnerID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteFolderMutation = {
  __typename: 'EvolinciteFolder';
  id: string;
  parent?: string | null;
  name?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteUserOwnerID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteArticleMutation = {
  __typename: 'EvolinciteArticle';
  id: string;
  front?: string | null;
  cover?: Array<string | null> | null;
  title?: string | null;
  content?: string | null;
  articleState?: EvolinciteArticleStates | null;
  visibility?: Array<string | null> | null;
  publicationDate?: string | null;
  meta?: string | null;
  files?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteArticleComments?: {
    __typename: 'ModelEvolinciteArticleCommentConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteArticleMutation = {
  __typename: 'EvolinciteArticle';
  id: string;
  front?: string | null;
  cover?: Array<string | null> | null;
  title?: string | null;
  content?: string | null;
  articleState?: EvolinciteArticleStates | null;
  visibility?: Array<string | null> | null;
  publicationDate?: string | null;
  meta?: string | null;
  files?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteArticleComments?: {
    __typename: 'ModelEvolinciteArticleCommentConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteArticleMutation = {
  __typename: 'EvolinciteArticle';
  id: string;
  front?: string | null;
  cover?: Array<string | null> | null;
  title?: string | null;
  content?: string | null;
  articleState?: EvolinciteArticleStates | null;
  visibility?: Array<string | null> | null;
  publicationDate?: string | null;
  meta?: string | null;
  files?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteArticleComments?: {
    __typename: 'ModelEvolinciteArticleCommentConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteArticleCommentMutation = {
  __typename: 'EvolinciteArticleComment';
  id: string;
  content?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteArticleID?: string | null;
  EvolinciteArticle?: {
    __typename: 'EvolinciteArticle';
    id: string;
    front?: string | null;
    cover?: Array<string | null> | null;
    title?: string | null;
    content?: string | null;
    articleState?: EvolinciteArticleStates | null;
    visibility?: Array<string | null> | null;
    publicationDate?: string | null;
    meta?: string | null;
    files?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteArticleCommentMutation = {
  __typename: 'EvolinciteArticleComment';
  id: string;
  content?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteArticleID?: string | null;
  EvolinciteArticle?: {
    __typename: 'EvolinciteArticle';
    id: string;
    front?: string | null;
    cover?: Array<string | null> | null;
    title?: string | null;
    content?: string | null;
    articleState?: EvolinciteArticleStates | null;
    visibility?: Array<string | null> | null;
    publicationDate?: string | null;
    meta?: string | null;
    files?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteArticleCommentMutation = {
  __typename: 'EvolinciteArticleComment';
  id: string;
  content?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteArticleID?: string | null;
  EvolinciteArticle?: {
    __typename: 'EvolinciteArticle';
    id: string;
    front?: string | null;
    cover?: Array<string | null> | null;
    title?: string | null;
    content?: string | null;
    articleState?: EvolinciteArticleStates | null;
    visibility?: Array<string | null> | null;
    publicationDate?: string | null;
    meta?: string | null;
    files?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteFormConfigurationMutation = {
  __typename: 'EvolinciteFormConfiguration';
  id: string;
  key?: string | null;
  name?: string | null;
  config?: string | null;
  meta?: string | null;
  title?: string | null;
  description?: string | null;
  observations?: string | null;
  front?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteFormConfigurationMutation = {
  __typename: 'EvolinciteFormConfiguration';
  id: string;
  key?: string | null;
  name?: string | null;
  config?: string | null;
  meta?: string | null;
  title?: string | null;
  description?: string | null;
  observations?: string | null;
  front?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteFormConfigurationMutation = {
  __typename: 'EvolinciteFormConfiguration';
  id: string;
  key?: string | null;
  name?: string | null;
  config?: string | null;
  meta?: string | null;
  title?: string | null;
  description?: string | null;
  observations?: string | null;
  front?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteFormAnswerMutation = {
  __typename: 'EvolinciteFormAnswer';
  id: string;
  meta?: string | null;
  answerState?: EvolinciteSurveyAnswerState | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteFormConfigurationID?: string | null;
  EvolinciteFormConfiguration?: {
    __typename: 'EvolinciteFormConfiguration';
    id: string;
    key?: string | null;
    name?: string | null;
    config?: string | null;
    meta?: string | null;
    title?: string | null;
    description?: string | null;
    observations?: string | null;
    front?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteFormAnswerMutation = {
  __typename: 'EvolinciteFormAnswer';
  id: string;
  meta?: string | null;
  answerState?: EvolinciteSurveyAnswerState | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteFormConfigurationID?: string | null;
  EvolinciteFormConfiguration?: {
    __typename: 'EvolinciteFormConfiguration';
    id: string;
    key?: string | null;
    name?: string | null;
    config?: string | null;
    meta?: string | null;
    title?: string | null;
    description?: string | null;
    observations?: string | null;
    front?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteFormAnswerMutation = {
  __typename: 'EvolinciteFormAnswer';
  id: string;
  meta?: string | null;
  answerState?: EvolinciteSurveyAnswerState | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteFormConfigurationID?: string | null;
  EvolinciteFormConfiguration?: {
    __typename: 'EvolinciteFormConfiguration';
    id: string;
    key?: string | null;
    name?: string | null;
    config?: string | null;
    meta?: string | null;
    title?: string | null;
    description?: string | null;
    observations?: string | null;
    front?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolincitePaymentAutomationMutation = {
  __typename: 'EvolincitePaymentAutomation';
  id: string;
  name?: string | null;
  setting?: string | null;
  order?: number | null;
  repeat?: boolean | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolincitePaymentAutomationMutation = {
  __typename: 'EvolincitePaymentAutomation';
  id: string;
  name?: string | null;
  setting?: string | null;
  order?: number | null;
  repeat?: boolean | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolincitePaymentAutomationMutation = {
  __typename: 'EvolincitePaymentAutomation';
  id: string;
  name?: string | null;
  setting?: string | null;
  order?: number | null;
  repeat?: boolean | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteMailMutation = {
  __typename: 'EvolinciteMail';
  id: string;
  destinations?: Array<string | null> | null;
  subject?: string | null;
  content?: string | null;
  submissionStatus?: EvolinciteMailStates | null;
  setting?: string | null;
  response?: string | null;
  files?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteMailMutation = {
  __typename: 'EvolinciteMail';
  id: string;
  destinations?: Array<string | null> | null;
  subject?: string | null;
  content?: string | null;
  submissionStatus?: EvolinciteMailStates | null;
  setting?: string | null;
  response?: string | null;
  files?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteMailMutation = {
  __typename: 'EvolinciteMail';
  id: string;
  destinations?: Array<string | null> | null;
  subject?: string | null;
  content?: string | null;
  submissionStatus?: EvolinciteMailStates | null;
  setting?: string | null;
  response?: string | null;
  files?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteMailConfigurationMutation = {
  __typename: 'EvolinciteMailConfiguration';
  id: string;
  SMTP?: string | null;
  email?: string | null;
  password?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteMailConfigurationMutation = {
  __typename: 'EvolinciteMailConfiguration';
  id: string;
  SMTP?: string | null;
  email?: string | null;
  password?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteMailConfigurationMutation = {
  __typename: 'EvolinciteMailConfiguration';
  id: string;
  SMTP?: string | null;
  email?: string | null;
  password?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteMailTemplateMutation = {
  __typename: 'EvolinciteMailTemplate';
  id: string;
  destinations?: Array<string | null> | null;
  subject?: string | null;
  content?: string | null;
  files?: Array<string | null> | null;
  transmitter?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteMailTemplateMutation = {
  __typename: 'EvolinciteMailTemplate';
  id: string;
  destinations?: Array<string | null> | null;
  subject?: string | null;
  content?: string | null;
  files?: Array<string | null> | null;
  transmitter?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteMailTemplateMutation = {
  __typename: 'EvolinciteMailTemplate';
  id: string;
  destinations?: Array<string | null> | null;
  subject?: string | null;
  content?: string | null;
  files?: Array<string | null> | null;
  transmitter?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteMailTemplateLogMutation = {
  __typename: 'EvolinciteMailTemplateLog';
  id: string;
  key?: string | null;
  log?: string | null;
  date?: string | null;
  previousLog?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteMailTemplateLogMutation = {
  __typename: 'EvolinciteMailTemplateLog';
  id: string;
  key?: string | null;
  log?: string | null;
  date?: string | null;
  previousLog?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteMailTemplateLogMutation = {
  __typename: 'EvolinciteMailTemplateLog';
  id: string;
  key?: string | null;
  log?: string | null;
  date?: string | null;
  previousLog?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolincitePackageMutation = {
  __typename: 'EvolincitePackage';
  id: string;
  name?: string | null;
  description?: string | null;
  goal?: string | null;
  duration?: number | null;
  state?: EvolinciteStates | null;
  EvolinciteFunctionalities?: {
    __typename: 'ModelEvolinciteFunctionalityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCompanySubscriptions?: {
    __typename: 'ModelEvolinciteCompanySubscriptionConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolincitePackageMutation = {
  __typename: 'EvolincitePackage';
  id: string;
  name?: string | null;
  description?: string | null;
  goal?: string | null;
  duration?: number | null;
  state?: EvolinciteStates | null;
  EvolinciteFunctionalities?: {
    __typename: 'ModelEvolinciteFunctionalityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCompanySubscriptions?: {
    __typename: 'ModelEvolinciteCompanySubscriptionConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolincitePackageMutation = {
  __typename: 'EvolincitePackage';
  id: string;
  name?: string | null;
  description?: string | null;
  goal?: string | null;
  duration?: number | null;
  state?: EvolinciteStates | null;
  EvolinciteFunctionalities?: {
    __typename: 'ModelEvolinciteFunctionalityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCompanySubscriptions?: {
    __typename: 'ModelEvolinciteCompanySubscriptionConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteCompanySubscriptionMutation = {
  __typename: 'EvolinciteCompanySubscription';
  id: string;
  name?: string | null;
  price?: number | null;
  dateInitial?: string | null;
  dateFinal?: string | null;
  activatorUser?: string | null;
  state?: EvolinciteStates | null;
  evolincitePackageID?: string | null;
  EvolincitePackage?: {
    __typename: 'EvolincitePackage';
    id: string;
    name?: string | null;
    description?: string | null;
    goal?: string | null;
    duration?: number | null;
    state?: EvolinciteStates | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteCompanySubscriptionMutation = {
  __typename: 'EvolinciteCompanySubscription';
  id: string;
  name?: string | null;
  price?: number | null;
  dateInitial?: string | null;
  dateFinal?: string | null;
  activatorUser?: string | null;
  state?: EvolinciteStates | null;
  evolincitePackageID?: string | null;
  EvolincitePackage?: {
    __typename: 'EvolincitePackage';
    id: string;
    name?: string | null;
    description?: string | null;
    goal?: string | null;
    duration?: number | null;
    state?: EvolinciteStates | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteCompanySubscriptionMutation = {
  __typename: 'EvolinciteCompanySubscription';
  id: string;
  name?: string | null;
  price?: number | null;
  dateInitial?: string | null;
  dateFinal?: string | null;
  activatorUser?: string | null;
  state?: EvolinciteStates | null;
  evolincitePackageID?: string | null;
  EvolincitePackage?: {
    __typename: 'EvolincitePackage';
    id: string;
    name?: string | null;
    description?: string | null;
    goal?: string | null;
    duration?: number | null;
    state?: EvolinciteStates | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteEmployeeObservationMutation = {
  __typename: 'EvolinciteEmployeeObservation';
  id: string;
  name?: string | null;
  content?: string | null;
  isPublic?: boolean | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteEmployeeObservationMutation = {
  __typename: 'EvolinciteEmployeeObservation';
  id: string;
  name?: string | null;
  content?: string | null;
  isPublic?: boolean | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteEmployeeObservationMutation = {
  __typename: 'EvolinciteEmployeeObservation';
  id: string;
  name?: string | null;
  content?: string | null;
  isPublic?: boolean | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteTagMutation = {
  __typename: 'EvolinciteTag';
  id: string;
  name?: string | null;
  description?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteTagMutation = {
  __typename: 'EvolinciteTag';
  id: string;
  name?: string | null;
  description?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteTagMutation = {
  __typename: 'EvolinciteTag';
  id: string;
  name?: string | null;
  description?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteMilestoneMutation = {
  __typename: 'EvolinciteMilestone';
  name?: string | null;
  description?: string | null;
  tags?: Array<string | null> | null;
  type?: EvolunciteMilestoneType | null;
  config?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  employees?: Array<string | null> | null;
  managers?: Array<string | null> | null;
  isClosed?: boolean | null;
  closingNotes?: string | null;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
  id: string;
};

export type UpdateEvolinciteMilestoneMutation = {
  __typename: 'EvolinciteMilestone';
  name?: string | null;
  description?: string | null;
  tags?: Array<string | null> | null;
  type?: EvolunciteMilestoneType | null;
  config?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  employees?: Array<string | null> | null;
  managers?: Array<string | null> | null;
  isClosed?: boolean | null;
  closingNotes?: string | null;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
  id: string;
};

export type DeleteEvolinciteMilestoneMutation = {
  __typename: 'EvolinciteMilestone';
  name?: string | null;
  description?: string | null;
  tags?: Array<string | null> | null;
  type?: EvolunciteMilestoneType | null;
  config?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  employees?: Array<string | null> | null;
  managers?: Array<string | null> | null;
  isClosed?: boolean | null;
  closingNotes?: string | null;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
  id: string;
};

export type CreateEvolinciteUserLogMutation = {
  __typename: 'EvolinciteUserLog';
  id: string;
  log?: string | null;
  functionality?: EvolinciteFunctionalities | null;
  state?: EvolinciteStates | null;
  key?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteUserLogMutation = {
  __typename: 'EvolinciteUserLog';
  id: string;
  log?: string | null;
  functionality?: EvolinciteFunctionalities | null;
  state?: EvolinciteStates | null;
  key?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteUserLogMutation = {
  __typename: 'EvolinciteUserLog';
  id: string;
  log?: string | null;
  functionality?: EvolinciteFunctionalities | null;
  state?: EvolinciteStates | null;
  key?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteUserTimeTrackingMutation = {
  __typename: 'EvolinciteUserTimeTracking';
  id: string;
  time?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteUserTimeTrackingMutation = {
  __typename: 'EvolinciteUserTimeTracking';
  id: string;
  time?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteUserTimeTrackingMutation = {
  __typename: 'EvolinciteUserTimeTracking';
  id: string;
  time?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteScheduleMutation = {
  __typename: 'EvolinciteSchedule';
  id: string;
  name?: string | null;
  description?: string | null;
  config?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteScheduleMutation = {
  __typename: 'EvolinciteSchedule';
  id: string;
  name?: string | null;
  description?: string | null;
  config?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteScheduleMutation = {
  __typename: 'EvolinciteSchedule';
  id: string;
  name?: string | null;
  description?: string | null;
  config?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteTemplateRequestMutation = {
  __typename: 'EvolinciteTemplateRequest';
  id: string;
  name?: string | null;
  description?: string | null;
  tags?: Array<string | null> | null;
  questions?: string | null;
  elementType?: EvolunciteRequestType | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  owners?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteTemplateRequestMutation = {
  __typename: 'EvolinciteTemplateRequest';
  id: string;
  name?: string | null;
  description?: string | null;
  tags?: Array<string | null> | null;
  questions?: string | null;
  elementType?: EvolunciteRequestType | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  owners?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteTemplateRequestMutation = {
  __typename: 'EvolinciteTemplateRequest';
  id: string;
  name?: string | null;
  description?: string | null;
  tags?: Array<string | null> | null;
  questions?: string | null;
  elementType?: EvolunciteRequestType | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  owners?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteRequestMutation = {
  __typename: 'EvolinciteRequest';
  id: string;
  templateID?: string | null;
  answers?: string | null;
  requester?: string | null;
  priority?: EvolinciteRequestPriority | null;
  elementID?: Array<string | null> | null;
  elementType?: EvolunciteRequestType | null;
  status?: EvolinciteRequestStatus | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type UpdateEvolinciteRequestMutation = {
  __typename: 'EvolinciteRequest';
  id: string;
  templateID?: string | null;
  answers?: string | null;
  requester?: string | null;
  priority?: EvolinciteRequestPriority | null;
  elementID?: Array<string | null> | null;
  elementType?: EvolunciteRequestType | null;
  status?: EvolinciteRequestStatus | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type DeleteEvolinciteRequestMutation = {
  __typename: 'EvolinciteRequest';
  id: string;
  templateID?: string | null;
  answers?: string | null;
  requester?: string | null;
  priority?: EvolinciteRequestPriority | null;
  elementID?: Array<string | null> | null;
  elementType?: EvolunciteRequestType | null;
  status?: EvolinciteRequestStatus | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type CreateEvolinciteActivityEvolinciteUserMutation = {
  __typename: 'EvolinciteActivityEvolinciteUser';
  id: string;
  evolinciteActivityId: string;
  evolinciteUserId: string;
  evolinciteActivity: {
    __typename: 'EvolinciteActivity';
    id: string;
    name?: string | null;
    description?: string | null;
    startDate?: string | null;
    endDate?: string | null;
    color?: string | null;
    type?: EvolinciteActivityTypes | null;
    priority?: number | null;
    meta?: string | null;
    taskState?: EvolinciteTaskStates | null;
    documents?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    createdAt: string;
    updatedAt: string;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteActivityEvolinciteUserMutation = {
  __typename: 'EvolinciteActivityEvolinciteUser';
  id: string;
  evolinciteActivityId: string;
  evolinciteUserId: string;
  evolinciteActivity: {
    __typename: 'EvolinciteActivity';
    id: string;
    name?: string | null;
    description?: string | null;
    startDate?: string | null;
    endDate?: string | null;
    color?: string | null;
    type?: EvolinciteActivityTypes | null;
    priority?: number | null;
    meta?: string | null;
    taskState?: EvolinciteTaskStates | null;
    documents?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    createdAt: string;
    updatedAt: string;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteActivityEvolinciteUserMutation = {
  __typename: 'EvolinciteActivityEvolinciteUser';
  id: string;
  evolinciteActivityId: string;
  evolinciteUserId: string;
  evolinciteActivity: {
    __typename: 'EvolinciteActivity';
    id: string;
    name?: string | null;
    description?: string | null;
    startDate?: string | null;
    endDate?: string | null;
    color?: string | null;
    type?: EvolinciteActivityTypes | null;
    priority?: number | null;
    meta?: string | null;
    taskState?: EvolinciteTaskStates | null;
    documents?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    createdAt: string;
    updatedAt: string;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteUserEvolinciteCrmNegotiationMutation = {
  __typename: 'EvolinciteUserEvolinciteCrmNegotiation';
  id: string;
  evolinciteCrmNegotiationId: string;
  evolinciteUserId: string;
  evolinciteCrmNegotiation: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteUserEvolinciteCrmNegotiationMutation = {
  __typename: 'EvolinciteUserEvolinciteCrmNegotiation';
  id: string;
  evolinciteCrmNegotiationId: string;
  evolinciteUserId: string;
  evolinciteCrmNegotiation: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteUserEvolinciteCrmNegotiationMutation = {
  __typename: 'EvolinciteUserEvolinciteCrmNegotiation';
  id: string;
  evolinciteCrmNegotiationId: string;
  evolinciteUserId: string;
  evolinciteCrmNegotiation: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export type CreateEvolinciteRoomEvolinciteUserMutation = {
  __typename: 'EvolinciteRoomEvolinciteUser';
  id: string;
  evolinciteRoomId: string;
  evolinciteUserId: string;
  evolinciteRoom: {
    __typename: 'EvolinciteRoom';
    id: string;
    Key?: string | null;
    name?: string | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export type UpdateEvolinciteRoomEvolinciteUserMutation = {
  __typename: 'EvolinciteRoomEvolinciteUser';
  id: string;
  evolinciteRoomId: string;
  evolinciteUserId: string;
  evolinciteRoom: {
    __typename: 'EvolinciteRoom';
    id: string;
    Key?: string | null;
    name?: string | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export type DeleteEvolinciteRoomEvolinciteUserMutation = {
  __typename: 'EvolinciteRoomEvolinciteUser';
  id: string;
  evolinciteRoomId: string;
  evolinciteUserId: string;
  evolinciteRoom: {
    __typename: 'EvolinciteRoom';
    id: string;
    Key?: string | null;
    name?: string | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export type GetEvolinciteCompetenceQuery = {
  __typename: 'EvolinciteCompetence';
  id: string;
  name?: string | null;
  description?: string | null;
  content?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteCompetenceEvolinciteSyllabusId?: string | null;
};

export type ListEvolinciteCompetencesQuery = {
  __typename: 'ModelEvolinciteCompetenceConnection';
  items: Array<{
    __typename: 'EvolinciteCompetence';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteCompetenceEvolinciteSyllabusId?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteCourseQuery = {
  __typename: 'EvolinciteCourse';
  id: string;
  name?: string | null;
  description?: string | null;
  durationUnit?: string | null;
  duration?: number | null;
  objectives?: Array<string | null> | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteCourseEvolinciteSyllabusId?: string | null;
};

export type ListEvolinciteCoursesQuery = {
  __typename: 'ModelEvolinciteCourseConnection';
  items: Array<{
    __typename: 'EvolinciteCourse';
    id: string;
    name?: string | null;
    description?: string | null;
    durationUnit?: string | null;
    duration?: number | null;
    objectives?: Array<string | null> | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteCourseEvolinciteSyllabusId?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteSyllabusQuery = {
  __typename: 'EvolinciteSyllabus';
  id: string;
  name?: string | null;
  description?: string | null;
  content?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteCompetence?: {
    __typename: 'EvolinciteCompetence';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteCompetenceEvolinciteSyllabusId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteSyllabusEvolinciteCompetenceId?: string | null;
};

export type ListEvolinciteSyllabiQuery = {
  __typename: 'ModelEvolinciteSyllabusConnection';
  items: Array<{
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteUserAnswersQuery = {
  __typename: 'EvolinciteUserAnswers';
  id: string;
  answers?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteUserAnswersEvolinciteUserId?: string | null;
  evolinciteUserAnswersEvolinciteSyllabusId?: string | null;
};

export type ListEvolinciteUserAnswersQuery = {
  __typename: 'ModelEvolinciteUserAnswersConnection';
  items: Array<{
    __typename: 'EvolinciteUserAnswers';
    id: string;
    answers?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteUserAnswersEvolinciteUserId?: string | null;
    evolinciteUserAnswersEvolinciteSyllabusId?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteProcessTypeQuery = {
  __typename: 'EvolinciteProcessType';
  id: string;
  name?: string | null;
  order?: number | null;
  sellerCommission?: number | null;
  referrerCommission?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteProcessTypesQuery = {
  __typename: 'ModelEvolinciteProcessTypeConnection';
  items: Array<{
    __typename: 'EvolinciteProcessType';
    id: string;
    name?: string | null;
    order?: number | null;
    sellerCommission?: number | null;
    referrerCommission?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteProcessTypesByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteProcessTypeConnection';
  items: Array<{
    __typename: 'EvolinciteProcessType';
    id: string;
    name?: string | null;
    order?: number | null;
    sellerCommission?: number | null;
    referrerCommission?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteExpenseTypeQuery = {
  __typename: 'EvolinciteExpenseType';
  id: string;
  name?: string | null;
  type?: EvolinciteField | null;
  setting?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteExpenseTypesQuery = {
  __typename: 'ModelEvolinciteExpenseTypeConnection';
  items: Array<{
    __typename: 'EvolinciteExpenseType';
    id: string;
    name?: string | null;
    type?: EvolinciteField | null;
    setting?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteExpenseTypesByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteExpenseTypeConnection';
  items: Array<{
    __typename: 'EvolinciteExpenseType';
    id: string;
    name?: string | null;
    type?: EvolinciteField | null;
    setting?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteExpenseQuery = {
  __typename: 'EvolinciteExpense';
  id: string;
  amount?: number | null;
  process?: string | null;
  expenseState?: EvolinciteExpenseStates | null;
  expenseDate?: string | null;
  observations?: string | null;
  voucher?: Array<string | null> | null;
  transactionType?: EvolinciteTransactionType | null;
  reference?: string | null;
  state?: EvolinciteStates | null;
  evolinciteExpenseTypeID?: string | null;
  EvolinciteExpenseType?: {
    __typename: 'EvolinciteExpenseType';
    id: string;
    name?: string | null;
    type?: EvolinciteField | null;
    setting?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserResponsibleID?: string | null;
  EvolinciteUserResponsible?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteExpensesQuery = {
  __typename: 'ModelEvolinciteExpenseConnection';
  items: Array<{
    __typename: 'EvolinciteExpense';
    id: string;
    amount?: number | null;
    process?: string | null;
    expenseState?: EvolinciteExpenseStates | null;
    expenseDate?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    state?: EvolinciteStates | null;
    evolinciteExpenseTypeID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteExpensesByEvolinciteExpenseTypeIDQuery = {
  __typename: 'ModelEvolinciteExpenseConnection';
  items: Array<{
    __typename: 'EvolinciteExpense';
    id: string;
    amount?: number | null;
    process?: string | null;
    expenseState?: EvolinciteExpenseStates | null;
    expenseDate?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    state?: EvolinciteStates | null;
    evolinciteExpenseTypeID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteExpensesByEvolinciteCrmNegotiationIDQuery = {
  __typename: 'ModelEvolinciteExpenseConnection';
  items: Array<{
    __typename: 'EvolinciteExpense';
    id: string;
    amount?: number | null;
    process?: string | null;
    expenseState?: EvolinciteExpenseStates | null;
    expenseDate?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    state?: EvolinciteStates | null;
    evolinciteExpenseTypeID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteExpensesByEvolinciteCompanyIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteExpenseConnection';
  items: Array<{
    __typename: 'EvolinciteExpense';
    id: string;
    amount?: number | null;
    process?: string | null;
    expenseState?: EvolinciteExpenseStates | null;
    expenseDate?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    state?: EvolinciteStates | null;
    evolinciteExpenseTypeID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteExpensesByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolinciteExpenseConnection';
  items: Array<{
    __typename: 'EvolinciteExpense';
    id: string;
    amount?: number | null;
    process?: string | null;
    expenseState?: EvolinciteExpenseStates | null;
    expenseDate?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    state?: EvolinciteStates | null;
    evolinciteExpenseTypeID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteExpensesByEvolinciteUserResponsibleIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteExpenseConnection';
  items: Array<{
    __typename: 'EvolinciteExpense';
    id: string;
    amount?: number | null;
    process?: string | null;
    expenseState?: EvolinciteExpenseStates | null;
    expenseDate?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    state?: EvolinciteStates | null;
    evolinciteExpenseTypeID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteUserEvolinciteJobTitleQuery = {
  __typename: 'EvolinciteUserEvolinciteJobTitle';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteJobTitleID?: string | null;
  EvolinciteJobTitle?: {
    __typename: 'EvolinciteJobTitle';
    id: string;
    name?: string | null;
    salary?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteUserEvolinciteJobTitlesQuery = {
  __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
  items: Array<{
    __typename: 'EvolinciteUserEvolinciteJobTitle';
    id: string;
    state?: EvolinciteStates | null;
    evolinciteJobTitleID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteUserEvolinciteJobTitlesByEvolinciteJobTitleIDQuery = {
  __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
  items: Array<{
    __typename: 'EvolinciteUserEvolinciteJobTitle';
    id: string;
    state?: EvolinciteStates | null;
    evolinciteJobTitleID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteUserEvolinciteJobTitlesByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
  items: Array<{
    __typename: 'EvolinciteUserEvolinciteJobTitle';
    id: string;
    state?: EvolinciteStates | null;
    evolinciteJobTitleID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteUserEvolinciteJobTitlesByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
  items: Array<{
    __typename: 'EvolinciteUserEvolinciteJobTitle';
    id: string;
    state?: EvolinciteStates | null;
    evolinciteJobTitleID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteJobTitleQuery = {
  __typename: 'EvolinciteJobTitle';
  id: string;
  name?: string | null;
  salary?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteJobTitlesQuery = {
  __typename: 'ModelEvolinciteJobTitleConnection';
  items: Array<{
    __typename: 'EvolinciteJobTitle';
    id: string;
    name?: string | null;
    salary?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteJobTitlesByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteJobTitleConnection';
  items: Array<{
    __typename: 'EvolinciteJobTitle';
    id: string;
    name?: string | null;
    salary?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteWalletPaymentQuery = {
  __typename: 'EvolinciteWalletPayment';
  id: string;
  amount?: number | null;
  scheduledDate?: string | null;
  datePayment?: string | null;
  paymentStatus?: EvolinciteWalletPaymentStatus | null;
  prePayment?: string | null;
  postPayment?: string | null;
  observations?: string | null;
  voucher?: Array<string | null> | null;
  transactionType?: EvolinciteTransactionType | null;
  reference?: string | null;
  amountInterest?: number | null;
  amountCollection?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserReferrerID?: string | null;
  EvolinciteUserReferrer?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserSellerID?: string | null;
  EvolinciteUserSeller?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCustomerID?: string | null;
  EvolinciteCustomer?: {
    __typename: 'EvolinciteCustomer';
    id: string;
    name?: string | null;
    lastName?: string | null;
    documentType?: EvolinciteDocumentType | null;
    documentNumber?: string | null;
    phone?: string | null;
    optionalPhone?: string | null;
    email?: string | null;
    picture?: string | null;
    birthDate?: string | null;
    municipality?: EvolinciteMunicipality | null;
    documents?: Array<string | null> | null;
    address?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  evolinciteUserResponsibleID?: string | null;
  EvolinciteUserResponsible?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteWalletPaymentsQuery = {
  __typename: 'ModelEvolinciteWalletPaymentConnection';
  items: Array<{
    __typename: 'EvolinciteWalletPayment';
    id: string;
    amount?: number | null;
    scheduledDate?: string | null;
    datePayment?: string | null;
    paymentStatus?: EvolinciteWalletPaymentStatus | null;
    prePayment?: string | null;
    postPayment?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    amountInterest?: number | null;
    amountCollection?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteWalletPaymentsByEvolinciteCompanyIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteWalletPaymentConnection';
  items: Array<{
    __typename: 'EvolinciteWalletPayment';
    id: string;
    amount?: number | null;
    scheduledDate?: string | null;
    datePayment?: string | null;
    paymentStatus?: EvolinciteWalletPaymentStatus | null;
    prePayment?: string | null;
    postPayment?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    amountInterest?: number | null;
    amountCollection?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteWalletPaymentsByEvolinciteUserReferrerIDQuery = {
  __typename: 'ModelEvolinciteWalletPaymentConnection';
  items: Array<{
    __typename: 'EvolinciteWalletPayment';
    id: string;
    amount?: number | null;
    scheduledDate?: string | null;
    datePayment?: string | null;
    paymentStatus?: EvolinciteWalletPaymentStatus | null;
    prePayment?: string | null;
    postPayment?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    amountInterest?: number | null;
    amountCollection?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteWalletPaymentsByEvolinciteUserSellerIDQuery = {
  __typename: 'ModelEvolinciteWalletPaymentConnection';
  items: Array<{
    __typename: 'EvolinciteWalletPayment';
    id: string;
    amount?: number | null;
    scheduledDate?: string | null;
    datePayment?: string | null;
    paymentStatus?: EvolinciteWalletPaymentStatus | null;
    prePayment?: string | null;
    postPayment?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    amountInterest?: number | null;
    amountCollection?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteWalletPaymentsByEvolinciteCrmNegotiationIDQuery = {
  __typename: 'ModelEvolinciteWalletPaymentConnection';
  items: Array<{
    __typename: 'EvolinciteWalletPayment';
    id: string;
    amount?: number | null;
    scheduledDate?: string | null;
    datePayment?: string | null;
    paymentStatus?: EvolinciteWalletPaymentStatus | null;
    prePayment?: string | null;
    postPayment?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    amountInterest?: number | null;
    amountCollection?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteWalletPaymentsByEvolinciteCustomerIDQuery = {
  __typename: 'ModelEvolinciteWalletPaymentConnection';
  items: Array<{
    __typename: 'EvolinciteWalletPayment';
    id: string;
    amount?: number | null;
    scheduledDate?: string | null;
    datePayment?: string | null;
    paymentStatus?: EvolinciteWalletPaymentStatus | null;
    prePayment?: string | null;
    postPayment?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    amountInterest?: number | null;
    amountCollection?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteWalletPaymentsByEvolinciteUserResponsibleIDAndCreatedAtQuery =
  {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    items: Array<{
      __typename: 'EvolinciteWalletPayment';
      id: string;
      amount?: number | null;
      scheduledDate?: string | null;
      datePayment?: string | null;
      paymentStatus?: EvolinciteWalletPaymentStatus | null;
      prePayment?: string | null;
      postPayment?: string | null;
      observations?: string | null;
      voucher?: Array<string | null> | null;
      transactionType?: EvolinciteTransactionType | null;
      reference?: string | null;
      amountInterest?: number | null;
      amountCollection?: number | null;
      state?: EvolinciteStates | null;
      evolinciteCompanyID?: string | null;
      evolinciteUserReferrerID?: string | null;
      evolinciteUserSellerID?: string | null;
      evolinciteCrmNegotiationID?: string | null;
      evolinciteCustomerID?: string | null;
      evolinciteUserResponsibleID?: string | null;
      createdAt?: string | null;
      updatedAt?: string | null;
    } | null>;
    nextToken?: string | null;
  };

export type GetEvolinciteCrmNegotiationFieldQuery = {
  __typename: 'EvolinciteCrmNegotiationField';
  id: string;
  field?: string | null;
  type?: EvolinciteField | null;
  required?: boolean | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFieldValues?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldValueConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmNegotiationSectionID?: string | null;
  EvolinciteCrmNegotiationSection?: {
    __typename: 'EvolinciteCrmNegotiationSection';
    id: string;
    name?: string | null;
    order?: number | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteCrmNegotiationFieldsQuery = {
  __typename: 'ModelEvolinciteCrmNegotiationFieldConnection';
  items: Array<{
    __typename: 'EvolinciteCrmNegotiationField';
    id: string;
    field?: string | null;
    type?: EvolinciteField | null;
    required?: boolean | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationSectionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmNegotiationFieldsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteCrmNegotiationFieldConnection';
  items: Array<{
    __typename: 'EvolinciteCrmNegotiationField';
    id: string;
    field?: string | null;
    type?: EvolinciteField | null;
    required?: boolean | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationSectionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmNegotiationFieldsByEvolinciteCrmNegotiationSectionIDQuery =
  {
    __typename: 'ModelEvolinciteCrmNegotiationFieldConnection';
    items: Array<{
      __typename: 'EvolinciteCrmNegotiationField';
      id: string;
      field?: string | null;
      type?: EvolinciteField | null;
      required?: boolean | null;
      order?: number | null;
      state?: EvolinciteStates | null;
      meta?: string | null;
      evolinciteCompanyID?: string | null;
      evolinciteCrmNegotiationSectionID?: string | null;
      createdAt: string;
      updatedAt: string;
    } | null>;
    nextToken?: string | null;
  };

export type GetEvolinciteCrmNegotiationSectionQuery = {
  __typename: 'EvolinciteCrmNegotiationSection';
  id: string;
  name?: string | null;
  order?: number | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFields?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteCrmNegotiationSectionsQuery = {
  __typename: 'ModelEvolinciteCrmNegotiationSectionConnection';
  items: Array<{
    __typename: 'EvolinciteCrmNegotiationSection';
    id: string;
    name?: string | null;
    order?: number | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmNegotiationSectionsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteCrmNegotiationSectionConnection';
  items: Array<{
    __typename: 'EvolinciteCrmNegotiationSection';
    id: string;
    name?: string | null;
    order?: number | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteCrmAutomationQuery = {
  __typename: 'EvolinciteCrmAutomation';
  id: string;
  name?: string | null;
  rule?: EvolinciteRule | null;
  setting?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmStateID?: string | null;
  EvolinciteCrmState?: {
    __typename: 'EvolinciteCrmState';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    color?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmPipelineID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteCrmAutomationsQuery = {
  __typename: 'ModelEvolinciteCrmAutomationConnection';
  items: Array<{
    __typename: 'EvolinciteCrmAutomation';
    id: string;
    name?: string | null;
    rule?: EvolinciteRule | null;
    setting?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmStateID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmAutomationsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteCrmAutomationConnection';
  items: Array<{
    __typename: 'EvolinciteCrmAutomation';
    id: string;
    name?: string | null;
    rule?: EvolinciteRule | null;
    setting?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmStateID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmAutomationsByEvolinciteCrmStateIDAndOrderQuery = {
  __typename: 'ModelEvolinciteCrmAutomationConnection';
  items: Array<{
    __typename: 'EvolinciteCrmAutomation';
    id: string;
    name?: string | null;
    rule?: EvolinciteRule | null;
    setting?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmStateID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteCommentQuery = {
  __typename: 'EvolinciteComment';
  id: string;
  files?: Array<string | null> | null;
  content?: string | null;
  pinned?: boolean | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteCommentsQuery = {
  __typename: 'ModelEvolinciteCommentConnection';
  items: Array<{
    __typename: 'EvolinciteComment';
    id: string;
    files?: Array<string | null> | null;
    content?: string | null;
    pinned?: boolean | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCommentsByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolinciteCommentConnection';
  items: Array<{
    __typename: 'EvolinciteComment';
    id: string;
    files?: Array<string | null> | null;
    content?: string | null;
    pinned?: boolean | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCommentsByEvolinciteCrmNegotiationIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteCommentConnection';
  items: Array<{
    __typename: 'EvolinciteComment';
    id: string;
    files?: Array<string | null> | null;
    content?: string | null;
    pinned?: boolean | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteActivityQuery = {
  __typename: 'EvolinciteActivity';
  id: string;
  name?: string | null;
  description?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  color?: string | null;
  type?: EvolinciteActivityTypes | null;
  priority?: number | null;
  meta?: string | null;
  taskState?: EvolinciteTaskStates | null;
  documents?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  Participants?: {
    __typename: 'ModelEvolinciteActivityEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteActivitiesQuery = {
  __typename: 'ModelEvolinciteActivityConnection';
  items: Array<{
    __typename: 'EvolinciteActivity';
    id: string;
    name?: string | null;
    description?: string | null;
    startDate?: string | null;
    endDate?: string | null;
    color?: string | null;
    type?: EvolinciteActivityTypes | null;
    priority?: number | null;
    meta?: string | null;
    taskState?: EvolinciteTaskStates | null;
    documents?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteActivitiesByEvolinciteUserIDAndEndDateQuery = {
  __typename: 'ModelEvolinciteActivityConnection';
  items: Array<{
    __typename: 'EvolinciteActivity';
    id: string;
    name?: string | null;
    description?: string | null;
    startDate?: string | null;
    endDate?: string | null;
    color?: string | null;
    type?: EvolinciteActivityTypes | null;
    priority?: number | null;
    meta?: string | null;
    taskState?: EvolinciteTaskStates | null;
    documents?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteActivitiesByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteActivityConnection';
  items: Array<{
    __typename: 'EvolinciteActivity';
    id: string;
    name?: string | null;
    description?: string | null;
    startDate?: string | null;
    endDate?: string | null;
    color?: string | null;
    type?: EvolinciteActivityTypes | null;
    priority?: number | null;
    meta?: string | null;
    taskState?: EvolinciteTaskStates | null;
    documents?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteActivitiesByEvolinciteCrmNegotiationIDQuery = {
  __typename: 'ModelEvolinciteActivityConnection';
  items: Array<{
    __typename: 'EvolinciteActivity';
    id: string;
    name?: string | null;
    description?: string | null;
    startDate?: string | null;
    endDate?: string | null;
    color?: string | null;
    type?: EvolinciteActivityTypes | null;
    priority?: number | null;
    meta?: string | null;
    taskState?: EvolinciteTaskStates | null;
    documents?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolincitePermissionsQuery = {
  __typename: 'EvolincitePermissions';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  evolinciteDepartmentID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteDepartment?: {
    __typename: 'EvolinciteDepartment';
    id: string;
    name?: string | null;
    parent?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteRolID?: string | null;
  EvolinciteRol?: {
    __typename: 'EvolinciteRol';
    id: string;
    name?: string | null;
    permissions?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolincitePermissionsQuery = {
  __typename: 'ModelEvolincitePermissionsConnection';
  items: Array<{
    __typename: 'EvolincitePermissions';
    id: string;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteDepartmentID?: string | null;
    evolinciteRolID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolincitePermissionsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolincitePermissionsConnection';
  items: Array<{
    __typename: 'EvolincitePermissions';
    id: string;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteDepartmentID?: string | null;
    evolinciteRolID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolincitePermissionsByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolincitePermissionsConnection';
  items: Array<{
    __typename: 'EvolincitePermissions';
    id: string;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteDepartmentID?: string | null;
    evolinciteRolID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolincitePermissionsByEvolinciteDepartmentIDQuery = {
  __typename: 'ModelEvolincitePermissionsConnection';
  items: Array<{
    __typename: 'EvolincitePermissions';
    id: string;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteDepartmentID?: string | null;
    evolinciteRolID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolincitePermissionsByEvolinciteRolIDQuery = {
  __typename: 'ModelEvolincitePermissionsConnection';
  items: Array<{
    __typename: 'EvolincitePermissions';
    id: string;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteDepartmentID?: string | null;
    evolinciteRolID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteDepartmentQuery = {
  __typename: 'EvolinciteDepartment';
  id: string;
  name?: string | null;
  parent?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteDepartmentsQuery = {
  __typename: 'ModelEvolinciteDepartmentConnection';
  items: Array<{
    __typename: 'EvolinciteDepartment';
    id: string;
    name?: string | null;
    parent?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteDepartmentsByEvolinciteCompanyIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteDepartmentConnection';
  items: Array<{
    __typename: 'EvolinciteDepartment';
    id: string;
    name?: string | null;
    parent?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteSubscriptionQuery = {
  __typename: 'EvolinciteSubscription';
  id: string;
  name?: string | null;
  price?: number | null;
  dateInitial?: string | null;
  dateFinal?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteCompanies?: {
    __typename: 'ModelEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteSubscriptionsQuery = {
  __typename: 'ModelEvolinciteSubscriptionConnection';
  items: Array<{
    __typename: 'EvolinciteSubscription';
    id: string;
    name?: string | null;
    price?: number | null;
    dateInitial?: string | null;
    dateFinal?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteModuleQuery = {
  __typename: 'EvolinciteModule';
  id: string;
  name?: string | null;
  state?: EvolinciteStates | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteModulesQuery = {
  __typename: 'ModelEvolinciteModuleConnection';
  items: Array<{
    __typename: 'EvolinciteModule';
    id: string;
    name?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteFunctionalityQuery = {
  __typename: 'EvolinciteFunctionality';
  id: string;
  name?: string | null;
  functionalities?: Array<EvolinciteFunctionalities | null> | null;
  state?: EvolinciteStates | null;
  evolincitePackageID?: string | null;
  EvolincitePackage?: {
    __typename: 'EvolincitePackage';
    id: string;
    name?: string | null;
    description?: string | null;
    goal?: string | null;
    duration?: number | null;
    state?: EvolinciteStates | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteFunctionalitiesQuery = {
  __typename: 'ModelEvolinciteFunctionalityConnection';
  items: Array<{
    __typename: 'EvolinciteFunctionality';
    id: string;
    name?: string | null;
    functionalities?: Array<EvolinciteFunctionalities | null> | null;
    state?: EvolinciteStates | null;
    evolincitePackageID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteFunctionalitiesByEvolincitePackageIDQuery = {
  __typename: 'ModelEvolinciteFunctionalityConnection';
  items: Array<{
    __typename: 'EvolinciteFunctionality';
    id: string;
    name?: string | null;
    functionalities?: Array<EvolinciteFunctionalities | null> | null;
    state?: EvolinciteStates | null;
    evolincitePackageID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteRolQuery = {
  __typename: 'EvolinciteRol';
  id: string;
  name?: string | null;
  permissions?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteRolsQuery = {
  __typename: 'ModelEvolinciteRolConnection';
  items: Array<{
    __typename: 'EvolinciteRol';
    id: string;
    name?: string | null;
    permissions?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteRolsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteRolConnection';
  items: Array<{
    __typename: 'EvolinciteRol';
    id: string;
    name?: string | null;
    permissions?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteCustomerQuery = {
  __typename: 'EvolinciteCustomer';
  id: string;
  name?: string | null;
  lastName?: string | null;
  documentType?: EvolinciteDocumentType | null;
  documentNumber?: string | null;
  phone?: string | null;
  optionalPhone?: string | null;
  email?: string | null;
  picture?: string | null;
  birthDate?: string | null;
  municipality?: EvolinciteMunicipality | null;
  documents?: Array<string | null> | null;
  address?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteCustomersQuery = {
  __typename: 'ModelEvolinciteCustomerConnection';
  items: Array<{
    __typename: 'EvolinciteCustomer';
    id: string;
    name?: string | null;
    lastName?: string | null;
    documentType?: EvolinciteDocumentType | null;
    documentNumber?: string | null;
    phone?: string | null;
    optionalPhone?: string | null;
    email?: string | null;
    picture?: string | null;
    birthDate?: string | null;
    municipality?: EvolinciteMunicipality | null;
    documents?: Array<string | null> | null;
    address?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCustomersByDocumentNumberQuery = {
  __typename: 'ModelEvolinciteCustomerConnection';
  items: Array<{
    __typename: 'EvolinciteCustomer';
    id: string;
    name?: string | null;
    lastName?: string | null;
    documentType?: EvolinciteDocumentType | null;
    documentNumber?: string | null;
    phone?: string | null;
    optionalPhone?: string | null;
    email?: string | null;
    picture?: string | null;
    birthDate?: string | null;
    municipality?: EvolinciteMunicipality | null;
    documents?: Array<string | null> | null;
    address?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCustomersByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteCustomerConnection';
  items: Array<{
    __typename: 'EvolinciteCustomer';
    id: string;
    name?: string | null;
    lastName?: string | null;
    documentType?: EvolinciteDocumentType | null;
    documentNumber?: string | null;
    phone?: string | null;
    optionalPhone?: string | null;
    email?: string | null;
    picture?: string | null;
    birthDate?: string | null;
    municipality?: EvolinciteMunicipality | null;
    documents?: Array<string | null> | null;
    address?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteUserSettingsQuery = {
  __typename: 'EvolinciteUserSettings';
  id: string;
  settings?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteUserSettingsQuery = {
  __typename: 'ModelEvolinciteUserSettingsConnection';
  items: Array<{
    __typename: 'EvolinciteUserSettings';
    id: string;
    settings?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteUserSettingsByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolinciteUserSettingsConnection';
  items: Array<{
    __typename: 'EvolinciteUserSettings';
    id: string;
    settings?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteUserSettingsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteUserSettingsConnection';
  items: Array<{
    __typename: 'EvolinciteUserSettings';
    id: string;
    settings?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteCrmPipelineQuery = {
  __typename: 'EvolinciteCrmPipeline';
  id: string;
  name?: string | null;
  description?: string | null;
  publicDescription?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmStates?: {
    __typename: 'ModelEvolinciteCrmStateConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteCrmPipelinesQuery = {
  __typename: 'ModelEvolinciteCrmPipelineConnection';
  items: Array<{
    __typename: 'EvolinciteCrmPipeline';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmPipelinesByEvolinciteCompanyIDAndOrderQuery = {
  __typename: 'ModelEvolinciteCrmPipelineConnection';
  items: Array<{
    __typename: 'EvolinciteCrmPipeline';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteCrmStateQuery = {
  __typename: 'EvolinciteCrmState';
  id: string;
  name?: string | null;
  description?: string | null;
  publicDescription?: string | null;
  color?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmAutomations?: {
    __typename: 'ModelEvolinciteCrmAutomationConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmPipelineID?: string | null;
  EvolinciteCrmPipeline?: {
    __typename: 'EvolinciteCrmPipeline';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteCrmStatesQuery = {
  __typename: 'ModelEvolinciteCrmStateConnection';
  items: Array<{
    __typename: 'EvolinciteCrmState';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    color?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmPipelineID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmStatesByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteCrmStateConnection';
  items: Array<{
    __typename: 'EvolinciteCrmState';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    color?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmPipelineID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmStatesByEvolinciteCrmPipelineIDAndOrderQuery = {
  __typename: 'ModelEvolinciteCrmStateConnection';
  items: Array<{
    __typename: 'EvolinciteCrmState';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    color?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmPipelineID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteCrmNegotiationLogQuery = {
  __typename: 'EvolinciteCrmNegotiationLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteCrmNegotiationLogsQuery = {
  __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
  items: Array<{
    __typename: 'EvolinciteCrmNegotiationLog';
    id: string;
    log?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmNegotiationLogsByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
  items: Array<{
    __typename: 'EvolinciteCrmNegotiationLog';
    id: string;
    log?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmNegotiationLogsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
  items: Array<{
    __typename: 'EvolinciteCrmNegotiationLog';
    id: string;
    log?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmNegotiationLogsByEvolinciteCrmNegotiationIDAndCreatedAtQuery =
  {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    items: Array<{
      __typename: 'EvolinciteCrmNegotiationLog';
      id: string;
      log?: string | null;
      state?: EvolinciteStates | null;
      evolinciteUserID?: string | null;
      evolinciteCompanyID?: string | null;
      evolinciteCrmNegotiationID?: string | null;
      createdAt?: string | null;
      updatedAt?: string | null;
    } | null>;
    nextToken?: string | null;
  };

export type GetEvolinciteCrmNegotiationQuery = {
  __typename: 'EvolinciteCrmNegotiation';
  id: string;
  name?: string | null;
  value?: number | null;
  due?: number | null;
  parent?: string | null;
  date?: string | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  frozen?: boolean | null;
  valueInterest?: number | null;
  valueCollection?: number | null;
  observers?: Array<string | null> | null;
  exitDate?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserSellerID?: string | null;
  EvolinciteUserSeller?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserReferrerID?: string | null;
  EvolinciteUserReferrer?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserOwnerID?: string | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFieldValues?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldValueConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmStateID?: string | null;
  EvolinciteCrmState?: {
    __typename: 'EvolinciteCrmState';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    color?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmPipelineID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCustomerID?: string | null;
  EvolinciteCustomer?: {
    __typename: 'EvolinciteCustomer';
    id: string;
    name?: string | null;
    lastName?: string | null;
    documentType?: EvolinciteDocumentType | null;
    documentNumber?: string | null;
    phone?: string | null;
    optionalPhone?: string | null;
    email?: string | null;
    picture?: string | null;
    birthDate?: string | null;
    municipality?: EvolinciteMunicipality | null;
    documents?: Array<string | null> | null;
    address?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteComments?: {
    __typename: 'ModelEvolinciteCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivities?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUsersObserver?: {
    __typename: 'ModelEvolinciteUserEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  evolinciteProcessTypeID?: string | null;
  EvolinciteProcessType?: {
    __typename: 'EvolinciteProcessType';
    id: string;
    name?: string | null;
    order?: number | null;
    sellerCommission?: number | null;
    referrerCommission?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  initialGoalID?: string | null;
  InitialGoal?: {
    __typename: 'EvolinciteGoal';
    id: string;
    name?: string | null;
    description?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  finalGoalID?: string | null;
  FinalGoal?: {
    __typename: 'EvolinciteGoal';
    id: string;
    name?: string | null;
    description?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteCrmNegotiationsQuery = {
  __typename: 'ModelEvolinciteCrmNegotiationConnection';
  items: Array<{
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmNegotiationsByParentQuery = {
  __typename: 'ModelEvolinciteCrmNegotiationConnection';
  items: Array<{
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmNegotiationsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteCrmNegotiationConnection';
  items: Array<{
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmNegotiationsByEvolinciteUserSellerIDQuery = {
  __typename: 'ModelEvolinciteCrmNegotiationConnection';
  items: Array<{
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmNegotiationsByEvolinciteUserReferrerIDQuery = {
  __typename: 'ModelEvolinciteCrmNegotiationConnection';
  items: Array<{
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmNegotiationsByEvolinciteUserOwnerIDQuery = {
  __typename: 'ModelEvolinciteCrmNegotiationConnection';
  items: Array<{
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmNegotiationsByEvolinciteCrmStateIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteCrmNegotiationConnection';
  items: Array<{
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmNegotiationsByEvolinciteCustomerIDQuery = {
  __typename: 'ModelEvolinciteCrmNegotiationConnection';
  items: Array<{
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmNegotiationsByEvolinciteProcessTypeIDQuery = {
  __typename: 'ModelEvolinciteCrmNegotiationConnection';
  items: Array<{
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmNegotiationsByInitialGoalIDQuery = {
  __typename: 'ModelEvolinciteCrmNegotiationConnection';
  items: Array<{
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmNegotiationsByFinalGoalIDQuery = {
  __typename: 'ModelEvolinciteCrmNegotiationConnection';
  items: Array<{
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteRoomQuery = {
  __typename: 'EvolinciteRoom';
  id: string;
  Key?: string | null;
  name?: string | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  EvolinciteUsers?: {
    __typename: 'ModelEvolinciteRoomEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteRoomsQuery = {
  __typename: 'ModelEvolinciteRoomConnection';
  items: Array<{
    __typename: 'EvolinciteRoom';
    id: string;
    Key?: string | null;
    name?: string | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteRoomsByKeyQuery = {
  __typename: 'ModelEvolinciteRoomConnection';
  items: Array<{
    __typename: 'EvolinciteRoom';
    id: string;
    Key?: string | null;
    name?: string | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteRoomsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteRoomConnection';
  items: Array<{
    __typename: 'EvolinciteRoom';
    id: string;
    Key?: string | null;
    name?: string | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteMessageQuery = {
  __typename: 'EvolinciteMessage';
  id: string;
  content?: string | null;
  type?: EvolinciteMessageType | null;
  state?: EvolinciteStates | null;
  createdAt?: string | null;
  updatedAt?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteRoomID?: string | null;
  EvolinciteRoom?: {
    __typename: 'EvolinciteRoom';
    id: string;
    Key?: string | null;
    name?: string | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
};

export type ListEvolinciteMessagesQuery = {
  __typename: 'ModelEvolinciteMessageConnection';
  items: Array<{
    __typename: 'EvolinciteMessage';
    id: string;
    content?: string | null;
    type?: EvolinciteMessageType | null;
    state?: EvolinciteStates | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteRoomID?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteMessagesByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteMessageConnection';
  items: Array<{
    __typename: 'EvolinciteMessage';
    id: string;
    content?: string | null;
    type?: EvolinciteMessageType | null;
    state?: EvolinciteStates | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteRoomID?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteMessagesByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolinciteMessageConnection';
  items: Array<{
    __typename: 'EvolinciteMessage';
    id: string;
    content?: string | null;
    type?: EvolinciteMessageType | null;
    state?: EvolinciteStates | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteRoomID?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteMessagesByEvolinciteRoomIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteMessageConnection';
  items: Array<{
    __typename: 'EvolinciteMessage';
    id: string;
    content?: string | null;
    type?: EvolinciteMessageType | null;
    state?: EvolinciteStates | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteRoomID?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteCrmNegotiationFieldValueQuery = {
  __typename: 'EvolinciteCrmNegotiationFieldValue';
  id: string;
  value?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCrmNegotiationFieldID?: string | null;
  EvolinciteCrmNegotiationField?: {
    __typename: 'EvolinciteCrmNegotiationField';
    id: string;
    field?: string | null;
    type?: EvolinciteField | null;
    required?: boolean | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationSectionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteCrmNegotiationFieldValuesQuery = {
  __typename: 'ModelEvolinciteCrmNegotiationFieldValueConnection';
  items: Array<{
    __typename: 'EvolinciteCrmNegotiationFieldValue';
    id: string;
    value?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCrmNegotiationFieldID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCrmNegotiationFieldValuesByEvolinciteCrmNegotiationFieldIDQuery =
  {
    __typename: 'ModelEvolinciteCrmNegotiationFieldValueConnection';
    items: Array<{
      __typename: 'EvolinciteCrmNegotiationFieldValue';
      id: string;
      value?: string | null;
      state?: EvolinciteStates | null;
      evolinciteCrmNegotiationFieldID?: string | null;
      evolinciteCrmNegotiationID?: string | null;
      createdAt: string;
      updatedAt: string;
    } | null>;
    nextToken?: string | null;
  };

export type EvolinciteCrmNegotiationFieldValuesByEvolinciteCrmNegotiationIDQuery =
  {
    __typename: 'ModelEvolinciteCrmNegotiationFieldValueConnection';
    items: Array<{
      __typename: 'EvolinciteCrmNegotiationFieldValue';
      id: string;
      value?: string | null;
      state?: EvolinciteStates | null;
      evolinciteCrmNegotiationFieldID?: string | null;
      evolinciteCrmNegotiationID?: string | null;
      createdAt: string;
      updatedAt: string;
    } | null>;
    nextToken?: string | null;
  };

export type GetEvolinciteEmailQuery = {
  __typename: 'EvolinciteEmail';
  id: string;
  from?: string | null;
  to?: string | null;
  content?: string | null;
  subject?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteEmailsQuery = {
  __typename: 'ModelEvolinciteEmailConnection';
  items: Array<{
    __typename: 'EvolinciteEmail';
    id: string;
    from?: string | null;
    to?: string | null;
    content?: string | null;
    subject?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteEmailsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteEmailConnection';
  items: Array<{
    __typename: 'EvolinciteEmail';
    id: string;
    from?: string | null;
    to?: string | null;
    content?: string | null;
    subject?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteEmailTemplateQuery = {
  __typename: 'EvolinciteEmailTemplate';
  id: string;
  content?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteEmailTemplatesQuery = {
  __typename: 'ModelEvolinciteEmailTemplateConnection';
  items: Array<{
    __typename: 'EvolinciteEmailTemplate';
    id: string;
    content?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteEmailTemplatesByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteEmailTemplateConnection';
  items: Array<{
    __typename: 'EvolinciteEmailTemplate';
    id: string;
    content?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteNotificationQuery = {
  __typename: 'EvolinciteNotification';
  id: string;
  content?: string | null;
  title?: string | null;
  priority?: EvolinciteNotificationPriority | null;
  type?: EvolunciteNotificationType | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteNotificationsQuery = {
  __typename: 'ModelEvolinciteNotificationConnection';
  items: Array<{
    __typename: 'EvolinciteNotification';
    id: string;
    content?: string | null;
    title?: string | null;
    priority?: EvolinciteNotificationPriority | null;
    type?: EvolunciteNotificationType | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteNotificationsByEvolinciteUserIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteNotificationConnection';
  items: Array<{
    __typename: 'EvolinciteNotification';
    id: string;
    content?: string | null;
    title?: string | null;
    priority?: EvolinciteNotificationPriority | null;
    type?: EvolunciteNotificationType | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteNotificationsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteNotificationConnection';
  items: Array<{
    __typename: 'EvolinciteNotification';
    id: string;
    content?: string | null;
    title?: string | null;
    priority?: EvolinciteNotificationPriority | null;
    type?: EvolunciteNotificationType | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteUserDepartmentQuery = {
  __typename: 'EvolinciteUserDepartment';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteDepartmentID?: string | null;
  EvolinciteDepartment?: {
    __typename: 'EvolinciteDepartment';
    id: string;
    name?: string | null;
    parent?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteUserDepartmentsQuery = {
  __typename: 'ModelEvolinciteUserDepartmentConnection';
  items: Array<{
    __typename: 'EvolinciteUserDepartment';
    id: string;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteDepartmentID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteUserDepartmentsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteUserDepartmentConnection';
  items: Array<{
    __typename: 'EvolinciteUserDepartment';
    id: string;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteDepartmentID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteUserDepartmentsByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolinciteUserDepartmentConnection';
  items: Array<{
    __typename: 'EvolinciteUserDepartment';
    id: string;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteDepartmentID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteUserDepartmentsByEvolinciteDepartmentIDQuery = {
  __typename: 'ModelEvolinciteUserDepartmentConnection';
  items: Array<{
    __typename: 'EvolinciteUserDepartment';
    id: string;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteDepartmentID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteUserEvolinciteCompanyQuery = {
  __typename: 'EvolinciteUserEvolinciteCompany';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteUserEvolinciteCompaniesQuery = {
  __typename: 'ModelEvolinciteUserEvolinciteCompanyConnection';
  items: Array<{
    __typename: 'EvolinciteUserEvolinciteCompany';
    id: string;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteUserEvolinciteCompaniesByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolinciteUserEvolinciteCompanyConnection';
  items: Array<{
    __typename: 'EvolinciteUserEvolinciteCompany';
    id: string;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteUserEvolinciteCompaniesByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteUserEvolinciteCompanyConnection';
  items: Array<{
    __typename: 'EvolinciteUserEvolinciteCompany';
    id: string;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteUserQuery = {
  __typename: 'EvolinciteUser';
  id: string;
  name?: string | null;
  nit?: string | null;
  phone?: string | null;
  picture?: string | null;
  email?: string | null;
  sub?: string | null;
  meta?: string | null;
  cv?: string | null;
  contract?: string | null;
  memos?: Array<string | null> | null;
  personalMail?: string | null;
  personalPhone?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteUserEvolinciteCompanies?: {
    __typename: 'ModelEvolinciteUserEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivitiesOwner?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivitiesParticipants?: {
    __typename: 'ModelEvolinciteActivityEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRooms?: {
    __typename: 'ModelEvolinciteRoomEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsOwner?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsReferrer?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsSeller?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentsUserSeller?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentsUserReferrer?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteNotifications?: {
    __typename: 'ModelEvolinciteNotificationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteComments?: {
    __typename: 'ModelEvolinciteCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserSettings?: {
    __typename: 'ModelEvolinciteUserSettingsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsObserver?: {
    __typename: 'ModelEvolinciteUserEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicket?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFolders?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticles?: {
    __typename: 'ModelEvolinciteArticleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticleComments?: {
    __typename: 'ModelEvolinciteArticleCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFoldersOwner?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormConfigurations?: {
    __typename: 'ModelEvolinciteFormConfigurationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMails?: {
    __typename: 'ModelEvolinciteMailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmployeeObservations?: {
    __typename: 'ModelEvolinciteEmployeeObservationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteUsersQuery = {
  __typename: 'ModelEvolinciteUserConnection';
  items: Array<{
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteCompanyQuery = {
  __typename: 'EvolinciteCompany';
  id: string;
  name?: string | null;
  nit?: string | null;
  picture?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteUserEvolinciteCompanies?: {
    __typename: 'ModelEvolinciteUserEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  evolinciteSubscriptionID?: string | null;
  EvolinciteSubscription?: {
    __typename: 'EvolinciteSubscription';
    id: string;
    name?: string | null;
    price?: number | null;
    dateInitial?: string | null;
    dateFinal?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationFields?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationSections?: {
    __typename: 'ModelEvolinciteCrmNegotiationSectionConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmAutomations?: {
    __typename: 'ModelEvolinciteCrmAutomationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteDepartments?: {
    __typename: 'ModelEvolinciteDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCustomers?: {
    __typename: 'ModelEvolinciteCustomerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmPipelines?: {
    __typename: 'ModelEvolinciteCrmPipelineConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmStates?: {
    __typename: 'ModelEvolinciteCrmStateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteJobTitles?: {
    __typename: 'ModelEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteNotifications?: {
    __typename: 'ModelEvolinciteNotificationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmailTemplates?: {
    __typename: 'ModelEvolinciteEmailTemplateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmails?: {
    __typename: 'ModelEvolinciteEmailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivities?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRoles?: {
    __typename: 'ModelEvolinciteRolConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserSettings?: {
    __typename: 'ModelEvolinciteUserSettingsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRooms?: {
    __typename: 'ModelEvolinciteRoomConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseTypes?: {
    __typename: 'ModelEvolinciteExpenseTypeConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteProcessTypes?: {
    __typename: 'ModelEvolinciteProcessTypeConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteGoal?: {
    __typename: 'ModelEvolinciteGoalConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketOwner?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketOrigin?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFolders?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticles?: {
    __typename: 'ModelEvolinciteArticleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormConfigurations?: {
    __typename: 'ModelEvolinciteFormConfigurationConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentAutomations?: {
    __typename: 'ModelEvolincitePaymentAutomationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMails?: {
    __typename: 'ModelEvolinciteMailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMailTemplates?: {
    __typename: 'ModelEvolinciteMailTemplateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCompanySubscriptions?: {
    __typename: 'ModelEvolinciteCompanySubscriptionConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmployeeObservations?: {
    __typename: 'ModelEvolinciteEmployeeObservationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteCompaniesQuery = {
  __typename: 'ModelEvolinciteCompanyConnection';
  items: Array<{
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCompaniesByNitQuery = {
  __typename: 'ModelEvolinciteCompanyConnection';
  items: Array<{
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCompaniesByEvolinciteSubscriptionIDQuery = {
  __typename: 'ModelEvolinciteCompanyConnection';
  items: Array<{
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteGoalQuery = {
  __typename: 'EvolinciteGoal';
  id: string;
  name?: string | null;
  description?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationsInitial?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsFinal?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteGoalsQuery = {
  __typename: 'ModelEvolinciteGoalConnection';
  items: Array<{
    __typename: 'EvolinciteGoal';
    id: string;
    name?: string | null;
    description?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteGoalsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteGoalConnection';
  items: Array<{
    __typename: 'EvolinciteGoal';
    id: string;
    name?: string | null;
    description?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteWalletPaymentLogQuery = {
  __typename: 'EvolinciteWalletPaymentLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteWalletPaymentID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayment?: {
    __typename: 'EvolinciteWalletPayment';
    id: string;
    amount?: number | null;
    scheduledDate?: string | null;
    datePayment?: string | null;
    paymentStatus?: EvolinciteWalletPaymentStatus | null;
    prePayment?: string | null;
    postPayment?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    amountInterest?: number | null;
    amountCollection?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteWalletPaymentLogsQuery = {
  __typename: 'ModelEvolinciteWalletPaymentLogConnection';
  items: Array<{
    __typename: 'EvolinciteWalletPaymentLog';
    id: string;
    log?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteWalletPaymentID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteWalletPaymentLogsByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolinciteWalletPaymentLogConnection';
  items: Array<{
    __typename: 'EvolinciteWalletPaymentLog';
    id: string;
    log?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteWalletPaymentID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteWalletPaymentLogsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteWalletPaymentLogConnection';
  items: Array<{
    __typename: 'EvolinciteWalletPaymentLog';
    id: string;
    log?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteWalletPaymentID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteWalletPaymentLogsByEvolinciteWalletPaymentIDAndCreatedAtQuery =
  {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    items: Array<{
      __typename: 'EvolinciteWalletPaymentLog';
      id: string;
      log?: string | null;
      state?: EvolinciteStates | null;
      evolinciteUserID?: string | null;
      evolinciteCompanyID?: string | null;
      evolinciteWalletPaymentID?: string | null;
      createdAt?: string | null;
      updatedAt?: string | null;
    } | null>;
    nextToken?: string | null;
  };

export type GetEvolinciteExpenseLogQuery = {
  __typename: 'EvolinciteExpenseLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteExpenseID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteExpense?: {
    __typename: 'EvolinciteExpense';
    id: string;
    amount?: number | null;
    process?: string | null;
    expenseState?: EvolinciteExpenseStates | null;
    expenseDate?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    state?: EvolinciteStates | null;
    evolinciteExpenseTypeID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteExpenseLogsQuery = {
  __typename: 'ModelEvolinciteExpenseLogConnection';
  items: Array<{
    __typename: 'EvolinciteExpenseLog';
    id: string;
    log?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteExpenseID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteExpenseLogsByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolinciteExpenseLogConnection';
  items: Array<{
    __typename: 'EvolinciteExpenseLog';
    id: string;
    log?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteExpenseID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteExpenseLogsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteExpenseLogConnection';
  items: Array<{
    __typename: 'EvolinciteExpenseLog';
    id: string;
    log?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteExpenseID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteExpenseLogsByEvolinciteExpenseIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteExpenseLogConnection';
  items: Array<{
    __typename: 'EvolinciteExpenseLog';
    id: string;
    log?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteExpenseID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteTicketQuery = {
  __typename: 'EvolinciteTicket';
  id: string;
  name?: string | null;
  description?: string | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  ticketState?: EvolinciteTicketState | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyOwnerID?: string | null;
  evolinciteCompanyOriginID?: string | null;
  EvolinciteCompanyOwner?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCompanyOrigin?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteTicketsQuery = {
  __typename: 'ModelEvolinciteTicketConnection';
  items: Array<{
    __typename: 'EvolinciteTicket';
    id: string;
    name?: string | null;
    description?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    ticketState?: EvolinciteTicketState | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyOwnerID?: string | null;
    evolinciteCompanyOriginID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteTicketsByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolinciteTicketConnection';
  items: Array<{
    __typename: 'EvolinciteTicket';
    id: string;
    name?: string | null;
    description?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    ticketState?: EvolinciteTicketState | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyOwnerID?: string | null;
    evolinciteCompanyOriginID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteTicketsByEvolinciteCompanyOwnerIDQuery = {
  __typename: 'ModelEvolinciteTicketConnection';
  items: Array<{
    __typename: 'EvolinciteTicket';
    id: string;
    name?: string | null;
    description?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    ticketState?: EvolinciteTicketState | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyOwnerID?: string | null;
    evolinciteCompanyOriginID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteTicketsByEvolinciteCompanyOriginIDQuery = {
  __typename: 'ModelEvolinciteTicketConnection';
  items: Array<{
    __typename: 'EvolinciteTicket';
    id: string;
    name?: string | null;
    description?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    ticketState?: EvolinciteTicketState | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyOwnerID?: string | null;
    evolinciteCompanyOriginID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteTicketLogQuery = {
  __typename: 'EvolinciteTicketLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteTicketID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteTicket?: {
    __typename: 'EvolinciteTicket';
    id: string;
    name?: string | null;
    description?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    ticketState?: EvolinciteTicketState | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyOwnerID?: string | null;
    evolinciteCompanyOriginID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteTicketLogsQuery = {
  __typename: 'ModelEvolinciteTicketLogConnection';
  items: Array<{
    __typename: 'EvolinciteTicketLog';
    id: string;
    log?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteTicketID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteTicketLogsByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolinciteTicketLogConnection';
  items: Array<{
    __typename: 'EvolinciteTicketLog';
    id: string;
    log?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteTicketID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteTicketLogsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteTicketLogConnection';
  items: Array<{
    __typename: 'EvolinciteTicketLog';
    id: string;
    log?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteTicketID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteTicketLogsByEvolinciteTicketIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteTicketLogConnection';
  items: Array<{
    __typename: 'EvolinciteTicketLog';
    id: string;
    log?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteTicketID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteFileQuery = {
  __typename: 'EvolinciteFile';
  id: string;
  name?: string | null;
  size?: number | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteFolderID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFolder?: {
    __typename: 'EvolinciteFolder';
    id: string;
    parent?: string | null;
    name?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteFilesQuery = {
  __typename: 'ModelEvolinciteFileConnection';
  items: Array<{
    __typename: 'EvolinciteFile';
    id: string;
    name?: string | null;
    size?: number | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteFolderID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteFilesByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolinciteFileConnection';
  items: Array<{
    __typename: 'EvolinciteFile';
    id: string;
    name?: string | null;
    size?: number | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteFolderID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteFilesByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteFileConnection';
  items: Array<{
    __typename: 'EvolinciteFile';
    id: string;
    name?: string | null;
    size?: number | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteFolderID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteFilesByEvolinciteFolderIDAndUpdatedAtQuery = {
  __typename: 'ModelEvolinciteFileConnection';
  items: Array<{
    __typename: 'EvolinciteFile';
    id: string;
    name?: string | null;
    size?: number | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteFolderID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteFolderQuery = {
  __typename: 'EvolinciteFolder';
  id: string;
  parent?: string | null;
  name?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteUserOwnerID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteFoldersQuery = {
  __typename: 'ModelEvolinciteFolderConnection';
  items: Array<{
    __typename: 'EvolinciteFolder';
    id: string;
    parent?: string | null;
    name?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteFoldersByParentQuery = {
  __typename: 'ModelEvolinciteFolderConnection';
  items: Array<{
    __typename: 'EvolinciteFolder';
    id: string;
    parent?: string | null;
    name?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteFoldersByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolinciteFolderConnection';
  items: Array<{
    __typename: 'EvolinciteFolder';
    id: string;
    parent?: string | null;
    name?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteFoldersByEvolinciteUserOwnerIDQuery = {
  __typename: 'ModelEvolinciteFolderConnection';
  items: Array<{
    __typename: 'EvolinciteFolder';
    id: string;
    parent?: string | null;
    name?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteFoldersByEvolinciteCompanyIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteFolderConnection';
  items: Array<{
    __typename: 'EvolinciteFolder';
    id: string;
    parent?: string | null;
    name?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteArticleQuery = {
  __typename: 'EvolinciteArticle';
  id: string;
  front?: string | null;
  cover?: Array<string | null> | null;
  title?: string | null;
  content?: string | null;
  articleState?: EvolinciteArticleStates | null;
  visibility?: Array<string | null> | null;
  publicationDate?: string | null;
  meta?: string | null;
  files?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteArticleComments?: {
    __typename: 'ModelEvolinciteArticleCommentConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteArticlesQuery = {
  __typename: 'ModelEvolinciteArticleConnection';
  items: Array<{
    __typename: 'EvolinciteArticle';
    id: string;
    front?: string | null;
    cover?: Array<string | null> | null;
    title?: string | null;
    content?: string | null;
    articleState?: EvolinciteArticleStates | null;
    visibility?: Array<string | null> | null;
    publicationDate?: string | null;
    meta?: string | null;
    files?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteArticlesByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolinciteArticleConnection';
  items: Array<{
    __typename: 'EvolinciteArticle';
    id: string;
    front?: string | null;
    cover?: Array<string | null> | null;
    title?: string | null;
    content?: string | null;
    articleState?: EvolinciteArticleStates | null;
    visibility?: Array<string | null> | null;
    publicationDate?: string | null;
    meta?: string | null;
    files?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteArticlesByEvolinciteCompanyIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteArticleConnection';
  items: Array<{
    __typename: 'EvolinciteArticle';
    id: string;
    front?: string | null;
    cover?: Array<string | null> | null;
    title?: string | null;
    content?: string | null;
    articleState?: EvolinciteArticleStates | null;
    visibility?: Array<string | null> | null;
    publicationDate?: string | null;
    meta?: string | null;
    files?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteArticleCommentQuery = {
  __typename: 'EvolinciteArticleComment';
  id: string;
  content?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteArticleID?: string | null;
  EvolinciteArticle?: {
    __typename: 'EvolinciteArticle';
    id: string;
    front?: string | null;
    cover?: Array<string | null> | null;
    title?: string | null;
    content?: string | null;
    articleState?: EvolinciteArticleStates | null;
    visibility?: Array<string | null> | null;
    publicationDate?: string | null;
    meta?: string | null;
    files?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteArticleCommentsQuery = {
  __typename: 'ModelEvolinciteArticleCommentConnection';
  items: Array<{
    __typename: 'EvolinciteArticleComment';
    id: string;
    content?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteArticleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteArticleCommentsByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolinciteArticleCommentConnection';
  items: Array<{
    __typename: 'EvolinciteArticleComment';
    id: string;
    content?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteArticleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteArticleCommentsByEvolinciteArticleIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteArticleCommentConnection';
  items: Array<{
    __typename: 'EvolinciteArticleComment';
    id: string;
    content?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteArticleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteFormConfigurationQuery = {
  __typename: 'EvolinciteFormConfiguration';
  id: string;
  key?: string | null;
  name?: string | null;
  config?: string | null;
  meta?: string | null;
  title?: string | null;
  description?: string | null;
  observations?: string | null;
  front?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteFormConfigurationsQuery = {
  __typename: 'ModelEvolinciteFormConfigurationConnection';
  items: Array<{
    __typename: 'EvolinciteFormConfiguration';
    id: string;
    key?: string | null;
    name?: string | null;
    config?: string | null;
    meta?: string | null;
    title?: string | null;
    description?: string | null;
    observations?: string | null;
    front?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteFormConfigurationsByKeyQuery = {
  __typename: 'ModelEvolinciteFormConfigurationConnection';
  items: Array<{
    __typename: 'EvolinciteFormConfiguration';
    id: string;
    key?: string | null;
    name?: string | null;
    config?: string | null;
    meta?: string | null;
    title?: string | null;
    description?: string | null;
    observations?: string | null;
    front?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteFormConfigurationsByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolinciteFormConfigurationConnection';
  items: Array<{
    __typename: 'EvolinciteFormConfiguration';
    id: string;
    key?: string | null;
    name?: string | null;
    config?: string | null;
    meta?: string | null;
    title?: string | null;
    description?: string | null;
    observations?: string | null;
    front?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteFormConfigurationsByEvolinciteCompanyIDAndCreatedAtQuery =
  {
    __typename: 'ModelEvolinciteFormConfigurationConnection';
    items: Array<{
      __typename: 'EvolinciteFormConfiguration';
      id: string;
      key?: string | null;
      name?: string | null;
      config?: string | null;
      meta?: string | null;
      title?: string | null;
      description?: string | null;
      observations?: string | null;
      front?: string | null;
      state?: EvolinciteStates | null;
      evolinciteUserID?: string | null;
      evolinciteCompanyID?: string | null;
      createdAt?: string | null;
      updatedAt?: string | null;
    } | null>;
    nextToken?: string | null;
  };

export type GetEvolinciteFormAnswerQuery = {
  __typename: 'EvolinciteFormAnswer';
  id: string;
  meta?: string | null;
  answerState?: EvolinciteSurveyAnswerState | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteFormConfigurationID?: string | null;
  EvolinciteFormConfiguration?: {
    __typename: 'EvolinciteFormConfiguration';
    id: string;
    key?: string | null;
    name?: string | null;
    config?: string | null;
    meta?: string | null;
    title?: string | null;
    description?: string | null;
    observations?: string | null;
    front?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteFormAnswersQuery = {
  __typename: 'ModelEvolinciteFormAnswerConnection';
  items: Array<{
    __typename: 'EvolinciteFormAnswer';
    id: string;
    meta?: string | null;
    answerState?: EvolinciteSurveyAnswerState | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteFormConfigurationID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteFormAnswersByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolinciteFormAnswerConnection';
  items: Array<{
    __typename: 'EvolinciteFormAnswer';
    id: string;
    meta?: string | null;
    answerState?: EvolinciteSurveyAnswerState | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteFormConfigurationID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteFormAnswersByEvolinciteFormConfigurationIDAndCreatedAtQuery =
  {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    items: Array<{
      __typename: 'EvolinciteFormAnswer';
      id: string;
      meta?: string | null;
      answerState?: EvolinciteSurveyAnswerState | null;
      state?: EvolinciteStates | null;
      evolinciteUserID?: string | null;
      evolinciteFormConfigurationID?: string | null;
      evolinciteCompanyID?: string | null;
      createdAt?: string | null;
      updatedAt?: string | null;
    } | null>;
    nextToken?: string | null;
  };

export type EvolinciteFormAnswersByEvolinciteCompanyIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteFormAnswerConnection';
  items: Array<{
    __typename: 'EvolinciteFormAnswer';
    id: string;
    meta?: string | null;
    answerState?: EvolinciteSurveyAnswerState | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteFormConfigurationID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolincitePaymentAutomationQuery = {
  __typename: 'EvolincitePaymentAutomation';
  id: string;
  name?: string | null;
  setting?: string | null;
  order?: number | null;
  repeat?: boolean | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolincitePaymentAutomationsQuery = {
  __typename: 'ModelEvolincitePaymentAutomationConnection';
  items: Array<{
    __typename: 'EvolincitePaymentAutomation';
    id: string;
    name?: string | null;
    setting?: string | null;
    order?: number | null;
    repeat?: boolean | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolincitePaymentAutomationsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolincitePaymentAutomationConnection';
  items: Array<{
    __typename: 'EvolincitePaymentAutomation';
    id: string;
    name?: string | null;
    setting?: string | null;
    order?: number | null;
    repeat?: boolean | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteMailQuery = {
  __typename: 'EvolinciteMail';
  id: string;
  destinations?: Array<string | null> | null;
  subject?: string | null;
  content?: string | null;
  submissionStatus?: EvolinciteMailStates | null;
  setting?: string | null;
  response?: string | null;
  files?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteMailsQuery = {
  __typename: 'ModelEvolinciteMailConnection';
  items: Array<{
    __typename: 'EvolinciteMail';
    id: string;
    destinations?: Array<string | null> | null;
    subject?: string | null;
    content?: string | null;
    submissionStatus?: EvolinciteMailStates | null;
    setting?: string | null;
    response?: string | null;
    files?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteMailsByEvolinciteCompanyIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteMailConnection';
  items: Array<{
    __typename: 'EvolinciteMail';
    id: string;
    destinations?: Array<string | null> | null;
    subject?: string | null;
    content?: string | null;
    submissionStatus?: EvolinciteMailStates | null;
    setting?: string | null;
    response?: string | null;
    files?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteMailsByEvolinciteUserIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteMailConnection';
  items: Array<{
    __typename: 'EvolinciteMail';
    id: string;
    destinations?: Array<string | null> | null;
    subject?: string | null;
    content?: string | null;
    submissionStatus?: EvolinciteMailStates | null;
    setting?: string | null;
    response?: string | null;
    files?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteMailConfigurationQuery = {
  __typename: 'EvolinciteMailConfiguration';
  id: string;
  SMTP?: string | null;
  email?: string | null;
  password?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteMailConfigurationsQuery = {
  __typename: 'ModelEvolinciteMailConfigurationConnection';
  items: Array<{
    __typename: 'EvolinciteMailConfiguration';
    id: string;
    SMTP?: string | null;
    email?: string | null;
    password?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteMailConfigurationsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteMailConfigurationConnection';
  items: Array<{
    __typename: 'EvolinciteMailConfiguration';
    id: string;
    SMTP?: string | null;
    email?: string | null;
    password?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteMailConfigurationsByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolinciteMailConfigurationConnection';
  items: Array<{
    __typename: 'EvolinciteMailConfiguration';
    id: string;
    SMTP?: string | null;
    email?: string | null;
    password?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteMailTemplateQuery = {
  __typename: 'EvolinciteMailTemplate';
  id: string;
  destinations?: Array<string | null> | null;
  subject?: string | null;
  content?: string | null;
  files?: Array<string | null> | null;
  transmitter?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteMailTemplatesQuery = {
  __typename: 'ModelEvolinciteMailTemplateConnection';
  items: Array<{
    __typename: 'EvolinciteMailTemplate';
    id: string;
    destinations?: Array<string | null> | null;
    subject?: string | null;
    content?: string | null;
    files?: Array<string | null> | null;
    transmitter?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteMailTemplatesByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteMailTemplateConnection';
  items: Array<{
    __typename: 'EvolinciteMailTemplate';
    id: string;
    destinations?: Array<string | null> | null;
    subject?: string | null;
    content?: string | null;
    files?: Array<string | null> | null;
    transmitter?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteMailTemplateLogQuery = {
  __typename: 'EvolinciteMailTemplateLog';
  id: string;
  key?: string | null;
  log?: string | null;
  date?: string | null;
  previousLog?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteMailTemplateLogsQuery = {
  __typename: 'ModelEvolinciteMailTemplateLogConnection';
  items: Array<{
    __typename: 'EvolinciteMailTemplateLog';
    id: string;
    key?: string | null;
    log?: string | null;
    date?: string | null;
    previousLog?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteMailTemplateLogsByKeyQuery = {
  __typename: 'ModelEvolinciteMailTemplateLogConnection';
  items: Array<{
    __typename: 'EvolinciteMailTemplateLog';
    id: string;
    key?: string | null;
    log?: string | null;
    date?: string | null;
    previousLog?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteMailTemplateLogsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteMailTemplateLogConnection';
  items: Array<{
    __typename: 'EvolinciteMailTemplateLog';
    id: string;
    key?: string | null;
    log?: string | null;
    date?: string | null;
    previousLog?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteMailTemplateLogsByEvolinciteUserIDQuery = {
  __typename: 'ModelEvolinciteMailTemplateLogConnection';
  items: Array<{
    __typename: 'EvolinciteMailTemplateLog';
    id: string;
    key?: string | null;
    log?: string | null;
    date?: string | null;
    previousLog?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolincitePackageQuery = {
  __typename: 'EvolincitePackage';
  id: string;
  name?: string | null;
  description?: string | null;
  goal?: string | null;
  duration?: number | null;
  state?: EvolinciteStates | null;
  EvolinciteFunctionalities?: {
    __typename: 'ModelEvolinciteFunctionalityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCompanySubscriptions?: {
    __typename: 'ModelEvolinciteCompanySubscriptionConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolincitePackagesQuery = {
  __typename: 'ModelEvolincitePackageConnection';
  items: Array<{
    __typename: 'EvolincitePackage';
    id: string;
    name?: string | null;
    description?: string | null;
    goal?: string | null;
    duration?: number | null;
    state?: EvolinciteStates | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteCompanySubscriptionQuery = {
  __typename: 'EvolinciteCompanySubscription';
  id: string;
  name?: string | null;
  price?: number | null;
  dateInitial?: string | null;
  dateFinal?: string | null;
  activatorUser?: string | null;
  state?: EvolinciteStates | null;
  evolincitePackageID?: string | null;
  EvolincitePackage?: {
    __typename: 'EvolincitePackage';
    id: string;
    name?: string | null;
    description?: string | null;
    goal?: string | null;
    duration?: number | null;
    state?: EvolinciteStates | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteCompanySubscriptionsQuery = {
  __typename: 'ModelEvolinciteCompanySubscriptionConnection';
  items: Array<{
    __typename: 'EvolinciteCompanySubscription';
    id: string;
    name?: string | null;
    price?: number | null;
    dateInitial?: string | null;
    dateFinal?: string | null;
    activatorUser?: string | null;
    state?: EvolinciteStates | null;
    evolincitePackageID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCompanySubscriptionsByEvolincitePackageIDQuery = {
  __typename: 'ModelEvolinciteCompanySubscriptionConnection';
  items: Array<{
    __typename: 'EvolinciteCompanySubscription';
    id: string;
    name?: string | null;
    price?: number | null;
    dateInitial?: string | null;
    dateFinal?: string | null;
    activatorUser?: string | null;
    state?: EvolinciteStates | null;
    evolincitePackageID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteCompanySubscriptionsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteCompanySubscriptionConnection';
  items: Array<{
    __typename: 'EvolinciteCompanySubscription';
    id: string;
    name?: string | null;
    price?: number | null;
    dateInitial?: string | null;
    dateFinal?: string | null;
    activatorUser?: string | null;
    state?: EvolinciteStates | null;
    evolincitePackageID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteEmployeeObservationQuery = {
  __typename: 'EvolinciteEmployeeObservation';
  id: string;
  name?: string | null;
  content?: string | null;
  isPublic?: boolean | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteEmployeeObservationsQuery = {
  __typename: 'ModelEvolinciteEmployeeObservationConnection';
  items: Array<{
    __typename: 'EvolinciteEmployeeObservation';
    id: string;
    name?: string | null;
    content?: string | null;
    isPublic?: boolean | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteEmployeeObservationsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteEmployeeObservationConnection';
  items: Array<{
    __typename: 'EvolinciteEmployeeObservation';
    id: string;
    name?: string | null;
    content?: string | null;
    isPublic?: boolean | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteEmployeeObservationsByEvolinciteUserIDAndCreatedAtQuery =
  {
    __typename: 'ModelEvolinciteEmployeeObservationConnection';
    items: Array<{
      __typename: 'EvolinciteEmployeeObservation';
      id: string;
      name?: string | null;
      content?: string | null;
      isPublic?: boolean | null;
      meta?: string | null;
      state?: EvolinciteStates | null;
      evolinciteCompanyID?: string | null;
      evolinciteUserID?: string | null;
      createdAt?: string | null;
      updatedAt?: string | null;
    } | null>;
    nextToken?: string | null;
  };

export type GetEvolinciteTagQuery = {
  __typename: 'EvolinciteTag';
  id: string;
  name?: string | null;
  description?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteTagsQuery = {
  __typename: 'ModelEvolinciteTagConnection';
  items: Array<{
    __typename: 'EvolinciteTag';
    id: string;
    name?: string | null;
    description?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteTagsByNameQuery = {
  __typename: 'ModelEvolinciteTagConnection';
  items: Array<{
    __typename: 'EvolinciteTag';
    id: string;
    name?: string | null;
    description?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteTagsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteTagConnection';
  items: Array<{
    __typename: 'EvolinciteTag';
    id: string;
    name?: string | null;
    description?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteTagsByEvolinciteUserIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteTagConnection';
  items: Array<{
    __typename: 'EvolinciteTag';
    id: string;
    name?: string | null;
    description?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteMilestoneQuery = {
  __typename: 'EvolinciteMilestone';
  name?: string | null;
  description?: string | null;
  tags?: Array<string | null> | null;
  type?: EvolunciteMilestoneType | null;
  config?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  employees?: Array<string | null> | null;
  managers?: Array<string | null> | null;
  isClosed?: boolean | null;
  closingNotes?: string | null;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
  id: string;
};

export type ListEvolinciteMilestonesQuery = {
  __typename: 'ModelEvolinciteMilestoneConnection';
  items: Array<{
    __typename: 'EvolinciteMilestone';
    name?: string | null;
    description?: string | null;
    tags?: Array<string | null> | null;
    type?: EvolunciteMilestoneType | null;
    config?: string | null;
    startDate?: string | null;
    endDate?: string | null;
    employees?: Array<string | null> | null;
    managers?: Array<string | null> | null;
    isClosed?: boolean | null;
    closingNotes?: string | null;
    log?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    id: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteMilestonesByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteMilestoneConnection';
  items: Array<{
    __typename: 'EvolinciteMilestone';
    name?: string | null;
    description?: string | null;
    tags?: Array<string | null> | null;
    type?: EvolunciteMilestoneType | null;
    config?: string | null;
    startDate?: string | null;
    endDate?: string | null;
    employees?: Array<string | null> | null;
    managers?: Array<string | null> | null;
    isClosed?: boolean | null;
    closingNotes?: string | null;
    log?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    id: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteMilestonesByEvolinciteUserIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteMilestoneConnection';
  items: Array<{
    __typename: 'EvolinciteMilestone';
    name?: string | null;
    description?: string | null;
    tags?: Array<string | null> | null;
    type?: EvolunciteMilestoneType | null;
    config?: string | null;
    startDate?: string | null;
    endDate?: string | null;
    employees?: Array<string | null> | null;
    managers?: Array<string | null> | null;
    isClosed?: boolean | null;
    closingNotes?: string | null;
    log?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    id: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteUserLogQuery = {
  __typename: 'EvolinciteUserLog';
  id: string;
  log?: string | null;
  functionality?: EvolinciteFunctionalities | null;
  state?: EvolinciteStates | null;
  key?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteUserLogsQuery = {
  __typename: 'ModelEvolinciteUserLogConnection';
  items: Array<{
    __typename: 'EvolinciteUserLog';
    id: string;
    log?: string | null;
    functionality?: EvolinciteFunctionalities | null;
    state?: EvolinciteStates | null;
    key?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteUserLogsByKeyQuery = {
  __typename: 'ModelEvolinciteUserLogConnection';
  items: Array<{
    __typename: 'EvolinciteUserLog';
    id: string;
    log?: string | null;
    functionality?: EvolinciteFunctionalities | null;
    state?: EvolinciteStates | null;
    key?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteUserLogsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteUserLogConnection';
  items: Array<{
    __typename: 'EvolinciteUserLog';
    id: string;
    log?: string | null;
    functionality?: EvolinciteFunctionalities | null;
    state?: EvolinciteStates | null;
    key?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteUserLogsByEvolinciteUserIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteUserLogConnection';
  items: Array<{
    __typename: 'EvolinciteUserLog';
    id: string;
    log?: string | null;
    functionality?: EvolinciteFunctionalities | null;
    state?: EvolinciteStates | null;
    key?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteUserTimeTrackingQuery = {
  __typename: 'EvolinciteUserTimeTracking';
  id: string;
  time?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteUserTimeTrackingsQuery = {
  __typename: 'ModelEvolinciteUserTimeTrackingConnection';
  items: Array<{
    __typename: 'EvolinciteUserTimeTracking';
    id: string;
    time?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteUserTimeTrackingsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteUserTimeTrackingConnection';
  items: Array<{
    __typename: 'EvolinciteUserTimeTracking';
    id: string;
    time?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteUserTimeTrackingsByEvolinciteUserIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteUserTimeTrackingConnection';
  items: Array<{
    __typename: 'EvolinciteUserTimeTracking';
    id: string;
    time?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteScheduleQuery = {
  __typename: 'EvolinciteSchedule';
  id: string;
  name?: string | null;
  description?: string | null;
  config?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteSchedulesQuery = {
  __typename: 'ModelEvolinciteScheduleConnection';
  items: Array<{
    __typename: 'EvolinciteSchedule';
    id: string;
    name?: string | null;
    description?: string | null;
    config?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteSchedulesByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteScheduleConnection';
  items: Array<{
    __typename: 'EvolinciteSchedule';
    id: string;
    name?: string | null;
    description?: string | null;
    config?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteSchedulesByEvolinciteUserIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteScheduleConnection';
  items: Array<{
    __typename: 'EvolinciteSchedule';
    id: string;
    name?: string | null;
    description?: string | null;
    config?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteTemplateRequestQuery = {
  __typename: 'EvolinciteTemplateRequest';
  id: string;
  name?: string | null;
  description?: string | null;
  tags?: Array<string | null> | null;
  questions?: string | null;
  elementType?: EvolunciteRequestType | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  owners?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteTemplateRequestsQuery = {
  __typename: 'ModelEvolinciteTemplateRequestConnection';
  items: Array<{
    __typename: 'EvolinciteTemplateRequest';
    id: string;
    name?: string | null;
    description?: string | null;
    tags?: Array<string | null> | null;
    questions?: string | null;
    elementType?: EvolunciteRequestType | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    owners?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteTemplateRequestsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteTemplateRequestConnection';
  items: Array<{
    __typename: 'EvolinciteTemplateRequest';
    id: string;
    name?: string | null;
    description?: string | null;
    tags?: Array<string | null> | null;
    questions?: string | null;
    elementType?: EvolunciteRequestType | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    owners?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteTemplateRequestsByEvolinciteUserIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteTemplateRequestConnection';
  items: Array<{
    __typename: 'EvolinciteTemplateRequest';
    id: string;
    name?: string | null;
    description?: string | null;
    tags?: Array<string | null> | null;
    questions?: string | null;
    elementType?: EvolunciteRequestType | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    owners?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteRequestQuery = {
  __typename: 'EvolinciteRequest';
  id: string;
  templateID?: string | null;
  answers?: string | null;
  requester?: string | null;
  priority?: EvolinciteRequestPriority | null;
  elementID?: Array<string | null> | null;
  elementType?: EvolunciteRequestType | null;
  status?: EvolinciteRequestStatus | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type ListEvolinciteRequestsQuery = {
  __typename: 'ModelEvolinciteRequestConnection';
  items: Array<{
    __typename: 'EvolinciteRequest';
    id: string;
    templateID?: string | null;
    answers?: string | null;
    requester?: string | null;
    priority?: EvolinciteRequestPriority | null;
    elementID?: Array<string | null> | null;
    elementType?: EvolunciteRequestType | null;
    status?: EvolinciteRequestStatus | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteRequestsByTemplateIDQuery = {
  __typename: 'ModelEvolinciteRequestConnection';
  items: Array<{
    __typename: 'EvolinciteRequest';
    id: string;
    templateID?: string | null;
    answers?: string | null;
    requester?: string | null;
    priority?: EvolinciteRequestPriority | null;
    elementID?: Array<string | null> | null;
    elementType?: EvolunciteRequestType | null;
    status?: EvolinciteRequestStatus | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteRequestsByRequesterQuery = {
  __typename: 'ModelEvolinciteRequestConnection';
  items: Array<{
    __typename: 'EvolinciteRequest';
    id: string;
    templateID?: string | null;
    answers?: string | null;
    requester?: string | null;
    priority?: EvolinciteRequestPriority | null;
    elementID?: Array<string | null> | null;
    elementType?: EvolunciteRequestType | null;
    status?: EvolinciteRequestStatus | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteRequestsByEvolinciteCompanyIDQuery = {
  __typename: 'ModelEvolinciteRequestConnection';
  items: Array<{
    __typename: 'EvolinciteRequest';
    id: string;
    templateID?: string | null;
    answers?: string | null;
    requester?: string | null;
    priority?: EvolinciteRequestPriority | null;
    elementID?: Array<string | null> | null;
    elementType?: EvolunciteRequestType | null;
    status?: EvolinciteRequestStatus | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteRequestsByEvolinciteUserIDAndCreatedAtQuery = {
  __typename: 'ModelEvolinciteRequestConnection';
  items: Array<{
    __typename: 'EvolinciteRequest';
    id: string;
    templateID?: string | null;
    answers?: string | null;
    requester?: string | null;
    priority?: EvolinciteRequestPriority | null;
    elementID?: Array<string | null> | null;
    elementType?: EvolunciteRequestType | null;
    status?: EvolinciteRequestStatus | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteActivityEvolinciteUserQuery = {
  __typename: 'EvolinciteActivityEvolinciteUser';
  id: string;
  evolinciteActivityId: string;
  evolinciteUserId: string;
  evolinciteActivity: {
    __typename: 'EvolinciteActivity';
    id: string;
    name?: string | null;
    description?: string | null;
    startDate?: string | null;
    endDate?: string | null;
    color?: string | null;
    type?: EvolinciteActivityTypes | null;
    priority?: number | null;
    meta?: string | null;
    taskState?: EvolinciteTaskStates | null;
    documents?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    createdAt: string;
    updatedAt: string;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteActivityEvolinciteUsersQuery = {
  __typename: 'ModelEvolinciteActivityEvolinciteUserConnection';
  items: Array<{
    __typename: 'EvolinciteActivityEvolinciteUser';
    id: string;
    evolinciteActivityId: string;
    evolinciteUserId: string;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteActivityEvolinciteUsersByEvolinciteActivityIdQuery = {
  __typename: 'ModelEvolinciteActivityEvolinciteUserConnection';
  items: Array<{
    __typename: 'EvolinciteActivityEvolinciteUser';
    id: string;
    evolinciteActivityId: string;
    evolinciteUserId: string;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteActivityEvolinciteUsersByEvolinciteUserIdQuery = {
  __typename: 'ModelEvolinciteActivityEvolinciteUserConnection';
  items: Array<{
    __typename: 'EvolinciteActivityEvolinciteUser';
    id: string;
    evolinciteActivityId: string;
    evolinciteUserId: string;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteUserEvolinciteCrmNegotiationQuery = {
  __typename: 'EvolinciteUserEvolinciteCrmNegotiation';
  id: string;
  evolinciteCrmNegotiationId: string;
  evolinciteUserId: string;
  evolinciteCrmNegotiation: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteUserEvolinciteCrmNegotiationsQuery = {
  __typename: 'ModelEvolinciteUserEvolinciteCrmNegotiationConnection';
  items: Array<{
    __typename: 'EvolinciteUserEvolinciteCrmNegotiation';
    id: string;
    evolinciteCrmNegotiationId: string;
    evolinciteUserId: string;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteUserEvolinciteCrmNegotiationsByEvolinciteCrmNegotiationIdQuery =
  {
    __typename: 'ModelEvolinciteUserEvolinciteCrmNegotiationConnection';
    items: Array<{
      __typename: 'EvolinciteUserEvolinciteCrmNegotiation';
      id: string;
      evolinciteCrmNegotiationId: string;
      evolinciteUserId: string;
      createdAt: string;
      updatedAt: string;
    } | null>;
    nextToken?: string | null;
  };

export type EvolinciteUserEvolinciteCrmNegotiationsByEvolinciteUserIdQuery = {
  __typename: 'ModelEvolinciteUserEvolinciteCrmNegotiationConnection';
  items: Array<{
    __typename: 'EvolinciteUserEvolinciteCrmNegotiation';
    id: string;
    evolinciteCrmNegotiationId: string;
    evolinciteUserId: string;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type GetEvolinciteRoomEvolinciteUserQuery = {
  __typename: 'EvolinciteRoomEvolinciteUser';
  id: string;
  evolinciteRoomId: string;
  evolinciteUserId: string;
  evolinciteRoom: {
    __typename: 'EvolinciteRoom';
    id: string;
    Key?: string | null;
    name?: string | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export type ListEvolinciteRoomEvolinciteUsersQuery = {
  __typename: 'ModelEvolinciteRoomEvolinciteUserConnection';
  items: Array<{
    __typename: 'EvolinciteRoomEvolinciteUser';
    id: string;
    evolinciteRoomId: string;
    evolinciteUserId: string;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteRoomEvolinciteUsersByEvolinciteRoomIdQuery = {
  __typename: 'ModelEvolinciteRoomEvolinciteUserConnection';
  items: Array<{
    __typename: 'EvolinciteRoomEvolinciteUser';
    id: string;
    evolinciteRoomId: string;
    evolinciteUserId: string;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type EvolinciteRoomEvolinciteUsersByEvolinciteUserIdQuery = {
  __typename: 'ModelEvolinciteRoomEvolinciteUserConnection';
  items: Array<{
    __typename: 'EvolinciteRoomEvolinciteUser';
    id: string;
    evolinciteRoomId: string;
    evolinciteUserId: string;
    createdAt: string;
    updatedAt: string;
  } | null>;
  nextToken?: string | null;
};

export type OnCreateEvolinciteCompetenceSubscription = {
  __typename: 'EvolinciteCompetence';
  id: string;
  name?: string | null;
  description?: string | null;
  content?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteCompetenceEvolinciteSyllabusId?: string | null;
};

export type OnUpdateEvolinciteCompetenceSubscription = {
  __typename: 'EvolinciteCompetence';
  id: string;
  name?: string | null;
  description?: string | null;
  content?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteCompetenceEvolinciteSyllabusId?: string | null;
};

export type OnDeleteEvolinciteCompetenceSubscription = {
  __typename: 'EvolinciteCompetence';
  id: string;
  name?: string | null;
  description?: string | null;
  content?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteCompetenceEvolinciteSyllabusId?: string | null;
};

export type OnCreateEvolinciteCourseSubscription = {
  __typename: 'EvolinciteCourse';
  id: string;
  name?: string | null;
  description?: string | null;
  durationUnit?: string | null;
  duration?: number | null;
  objectives?: Array<string | null> | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteCourseEvolinciteSyllabusId?: string | null;
};

export type OnUpdateEvolinciteCourseSubscription = {
  __typename: 'EvolinciteCourse';
  id: string;
  name?: string | null;
  description?: string | null;
  durationUnit?: string | null;
  duration?: number | null;
  objectives?: Array<string | null> | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteCourseEvolinciteSyllabusId?: string | null;
};

export type OnDeleteEvolinciteCourseSubscription = {
  __typename: 'EvolinciteCourse';
  id: string;
  name?: string | null;
  description?: string | null;
  durationUnit?: string | null;
  duration?: number | null;
  objectives?: Array<string | null> | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteCourseEvolinciteSyllabusId?: string | null;
};

export type OnCreateEvolinciteSyllabusSubscription = {
  __typename: 'EvolinciteSyllabus';
  id: string;
  name?: string | null;
  description?: string | null;
  content?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteCompetence?: {
    __typename: 'EvolinciteCompetence';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteCompetenceEvolinciteSyllabusId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteSyllabusEvolinciteCompetenceId?: string | null;
};

export type OnUpdateEvolinciteSyllabusSubscription = {
  __typename: 'EvolinciteSyllabus';
  id: string;
  name?: string | null;
  description?: string | null;
  content?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteCompetence?: {
    __typename: 'EvolinciteCompetence';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteCompetenceEvolinciteSyllabusId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteSyllabusEvolinciteCompetenceId?: string | null;
};

export type OnDeleteEvolinciteSyllabusSubscription = {
  __typename: 'EvolinciteSyllabus';
  id: string;
  name?: string | null;
  description?: string | null;
  content?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteCompetence?: {
    __typename: 'EvolinciteCompetence';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteCompetenceEvolinciteSyllabusId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteSyllabusEvolinciteCompetenceId?: string | null;
};

export type OnCreateEvolinciteUserAnswersSubscription = {
  __typename: 'EvolinciteUserAnswers';
  id: string;
  answers?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteUserAnswersEvolinciteUserId?: string | null;
  evolinciteUserAnswersEvolinciteSyllabusId?: string | null;
};

export type OnUpdateEvolinciteUserAnswersSubscription = {
  __typename: 'EvolinciteUserAnswers';
  id: string;
  answers?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteUserAnswersEvolinciteUserId?: string | null;
  evolinciteUserAnswersEvolinciteSyllabusId?: string | null;
};

export type OnDeleteEvolinciteUserAnswersSubscription = {
  __typename: 'EvolinciteUserAnswers';
  id: string;
  answers?: string | null;
  application?: EvolinciteApplication | null;
  state?: EvolinciteStates | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteSyllabus?: {
    __typename: 'EvolinciteSyllabus';
    id: string;
    name?: string | null;
    description?: string | null;
    content?: string | null;
    application?: EvolinciteApplication | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
    evolinciteSyllabusEvolinciteCompetenceId?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
  evolinciteUserAnswersEvolinciteUserId?: string | null;
  evolinciteUserAnswersEvolinciteSyllabusId?: string | null;
};

export type OnCreateEvolinciteProcessTypeSubscription = {
  __typename: 'EvolinciteProcessType';
  id: string;
  name?: string | null;
  order?: number | null;
  sellerCommission?: number | null;
  referrerCommission?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteProcessTypeSubscription = {
  __typename: 'EvolinciteProcessType';
  id: string;
  name?: string | null;
  order?: number | null;
  sellerCommission?: number | null;
  referrerCommission?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteProcessTypeSubscription = {
  __typename: 'EvolinciteProcessType';
  id: string;
  name?: string | null;
  order?: number | null;
  sellerCommission?: number | null;
  referrerCommission?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteExpenseTypeSubscription = {
  __typename: 'EvolinciteExpenseType';
  id: string;
  name?: string | null;
  type?: EvolinciteField | null;
  setting?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteExpenseTypeSubscription = {
  __typename: 'EvolinciteExpenseType';
  id: string;
  name?: string | null;
  type?: EvolinciteField | null;
  setting?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteExpenseTypeSubscription = {
  __typename: 'EvolinciteExpenseType';
  id: string;
  name?: string | null;
  type?: EvolinciteField | null;
  setting?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteExpenseSubscription = {
  __typename: 'EvolinciteExpense';
  id: string;
  amount?: number | null;
  process?: string | null;
  expenseState?: EvolinciteExpenseStates | null;
  expenseDate?: string | null;
  observations?: string | null;
  voucher?: Array<string | null> | null;
  transactionType?: EvolinciteTransactionType | null;
  reference?: string | null;
  state?: EvolinciteStates | null;
  evolinciteExpenseTypeID?: string | null;
  EvolinciteExpenseType?: {
    __typename: 'EvolinciteExpenseType';
    id: string;
    name?: string | null;
    type?: EvolinciteField | null;
    setting?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserResponsibleID?: string | null;
  EvolinciteUserResponsible?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteExpenseSubscription = {
  __typename: 'EvolinciteExpense';
  id: string;
  amount?: number | null;
  process?: string | null;
  expenseState?: EvolinciteExpenseStates | null;
  expenseDate?: string | null;
  observations?: string | null;
  voucher?: Array<string | null> | null;
  transactionType?: EvolinciteTransactionType | null;
  reference?: string | null;
  state?: EvolinciteStates | null;
  evolinciteExpenseTypeID?: string | null;
  EvolinciteExpenseType?: {
    __typename: 'EvolinciteExpenseType';
    id: string;
    name?: string | null;
    type?: EvolinciteField | null;
    setting?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserResponsibleID?: string | null;
  EvolinciteUserResponsible?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteExpenseSubscription = {
  __typename: 'EvolinciteExpense';
  id: string;
  amount?: number | null;
  process?: string | null;
  expenseState?: EvolinciteExpenseStates | null;
  expenseDate?: string | null;
  observations?: string | null;
  voucher?: Array<string | null> | null;
  transactionType?: EvolinciteTransactionType | null;
  reference?: string | null;
  state?: EvolinciteStates | null;
  evolinciteExpenseTypeID?: string | null;
  EvolinciteExpenseType?: {
    __typename: 'EvolinciteExpenseType';
    id: string;
    name?: string | null;
    type?: EvolinciteField | null;
    setting?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserResponsibleID?: string | null;
  EvolinciteUserResponsible?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteUserEvolinciteJobTitleSubscription = {
  __typename: 'EvolinciteUserEvolinciteJobTitle';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteJobTitleID?: string | null;
  EvolinciteJobTitle?: {
    __typename: 'EvolinciteJobTitle';
    id: string;
    name?: string | null;
    salary?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteUserEvolinciteJobTitleSubscription = {
  __typename: 'EvolinciteUserEvolinciteJobTitle';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteJobTitleID?: string | null;
  EvolinciteJobTitle?: {
    __typename: 'EvolinciteJobTitle';
    id: string;
    name?: string | null;
    salary?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteUserEvolinciteJobTitleSubscription = {
  __typename: 'EvolinciteUserEvolinciteJobTitle';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteJobTitleID?: string | null;
  EvolinciteJobTitle?: {
    __typename: 'EvolinciteJobTitle';
    id: string;
    name?: string | null;
    salary?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteJobTitleSubscription = {
  __typename: 'EvolinciteJobTitle';
  id: string;
  name?: string | null;
  salary?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteJobTitleSubscription = {
  __typename: 'EvolinciteJobTitle';
  id: string;
  name?: string | null;
  salary?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteJobTitleSubscription = {
  __typename: 'EvolinciteJobTitle';
  id: string;
  name?: string | null;
  salary?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteWalletPaymentSubscription = {
  __typename: 'EvolinciteWalletPayment';
  id: string;
  amount?: number | null;
  scheduledDate?: string | null;
  datePayment?: string | null;
  paymentStatus?: EvolinciteWalletPaymentStatus | null;
  prePayment?: string | null;
  postPayment?: string | null;
  observations?: string | null;
  voucher?: Array<string | null> | null;
  transactionType?: EvolinciteTransactionType | null;
  reference?: string | null;
  amountInterest?: number | null;
  amountCollection?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserReferrerID?: string | null;
  EvolinciteUserReferrer?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserSellerID?: string | null;
  EvolinciteUserSeller?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCustomerID?: string | null;
  EvolinciteCustomer?: {
    __typename: 'EvolinciteCustomer';
    id: string;
    name?: string | null;
    lastName?: string | null;
    documentType?: EvolinciteDocumentType | null;
    documentNumber?: string | null;
    phone?: string | null;
    optionalPhone?: string | null;
    email?: string | null;
    picture?: string | null;
    birthDate?: string | null;
    municipality?: EvolinciteMunicipality | null;
    documents?: Array<string | null> | null;
    address?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  evolinciteUserResponsibleID?: string | null;
  EvolinciteUserResponsible?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteWalletPaymentSubscription = {
  __typename: 'EvolinciteWalletPayment';
  id: string;
  amount?: number | null;
  scheduledDate?: string | null;
  datePayment?: string | null;
  paymentStatus?: EvolinciteWalletPaymentStatus | null;
  prePayment?: string | null;
  postPayment?: string | null;
  observations?: string | null;
  voucher?: Array<string | null> | null;
  transactionType?: EvolinciteTransactionType | null;
  reference?: string | null;
  amountInterest?: number | null;
  amountCollection?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserReferrerID?: string | null;
  EvolinciteUserReferrer?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserSellerID?: string | null;
  EvolinciteUserSeller?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCustomerID?: string | null;
  EvolinciteCustomer?: {
    __typename: 'EvolinciteCustomer';
    id: string;
    name?: string | null;
    lastName?: string | null;
    documentType?: EvolinciteDocumentType | null;
    documentNumber?: string | null;
    phone?: string | null;
    optionalPhone?: string | null;
    email?: string | null;
    picture?: string | null;
    birthDate?: string | null;
    municipality?: EvolinciteMunicipality | null;
    documents?: Array<string | null> | null;
    address?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  evolinciteUserResponsibleID?: string | null;
  EvolinciteUserResponsible?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteWalletPaymentSubscription = {
  __typename: 'EvolinciteWalletPayment';
  id: string;
  amount?: number | null;
  scheduledDate?: string | null;
  datePayment?: string | null;
  paymentStatus?: EvolinciteWalletPaymentStatus | null;
  prePayment?: string | null;
  postPayment?: string | null;
  observations?: string | null;
  voucher?: Array<string | null> | null;
  transactionType?: EvolinciteTransactionType | null;
  reference?: string | null;
  amountInterest?: number | null;
  amountCollection?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserReferrerID?: string | null;
  EvolinciteUserReferrer?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserSellerID?: string | null;
  EvolinciteUserSeller?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCustomerID?: string | null;
  EvolinciteCustomer?: {
    __typename: 'EvolinciteCustomer';
    id: string;
    name?: string | null;
    lastName?: string | null;
    documentType?: EvolinciteDocumentType | null;
    documentNumber?: string | null;
    phone?: string | null;
    optionalPhone?: string | null;
    email?: string | null;
    picture?: string | null;
    birthDate?: string | null;
    municipality?: EvolinciteMunicipality | null;
    documents?: Array<string | null> | null;
    address?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  evolinciteUserResponsibleID?: string | null;
  EvolinciteUserResponsible?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteCrmNegotiationFieldSubscription = {
  __typename: 'EvolinciteCrmNegotiationField';
  id: string;
  field?: string | null;
  type?: EvolinciteField | null;
  required?: boolean | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFieldValues?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldValueConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmNegotiationSectionID?: string | null;
  EvolinciteCrmNegotiationSection?: {
    __typename: 'EvolinciteCrmNegotiationSection';
    id: string;
    name?: string | null;
    order?: number | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteCrmNegotiationFieldSubscription = {
  __typename: 'EvolinciteCrmNegotiationField';
  id: string;
  field?: string | null;
  type?: EvolinciteField | null;
  required?: boolean | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFieldValues?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldValueConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmNegotiationSectionID?: string | null;
  EvolinciteCrmNegotiationSection?: {
    __typename: 'EvolinciteCrmNegotiationSection';
    id: string;
    name?: string | null;
    order?: number | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteCrmNegotiationFieldSubscription = {
  __typename: 'EvolinciteCrmNegotiationField';
  id: string;
  field?: string | null;
  type?: EvolinciteField | null;
  required?: boolean | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFieldValues?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldValueConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmNegotiationSectionID?: string | null;
  EvolinciteCrmNegotiationSection?: {
    __typename: 'EvolinciteCrmNegotiationSection';
    id: string;
    name?: string | null;
    order?: number | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteCrmNegotiationSectionSubscription = {
  __typename: 'EvolinciteCrmNegotiationSection';
  id: string;
  name?: string | null;
  order?: number | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFields?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteCrmNegotiationSectionSubscription = {
  __typename: 'EvolinciteCrmNegotiationSection';
  id: string;
  name?: string | null;
  order?: number | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFields?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteCrmNegotiationSectionSubscription = {
  __typename: 'EvolinciteCrmNegotiationSection';
  id: string;
  name?: string | null;
  order?: number | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFields?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteCrmAutomationSubscription = {
  __typename: 'EvolinciteCrmAutomation';
  id: string;
  name?: string | null;
  rule?: EvolinciteRule | null;
  setting?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmStateID?: string | null;
  EvolinciteCrmState?: {
    __typename: 'EvolinciteCrmState';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    color?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmPipelineID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteCrmAutomationSubscription = {
  __typename: 'EvolinciteCrmAutomation';
  id: string;
  name?: string | null;
  rule?: EvolinciteRule | null;
  setting?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmStateID?: string | null;
  EvolinciteCrmState?: {
    __typename: 'EvolinciteCrmState';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    color?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmPipelineID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteCrmAutomationSubscription = {
  __typename: 'EvolinciteCrmAutomation';
  id: string;
  name?: string | null;
  rule?: EvolinciteRule | null;
  setting?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmStateID?: string | null;
  EvolinciteCrmState?: {
    __typename: 'EvolinciteCrmState';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    color?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmPipelineID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteCommentSubscription = {
  __typename: 'EvolinciteComment';
  id: string;
  files?: Array<string | null> | null;
  content?: string | null;
  pinned?: boolean | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteCommentSubscription = {
  __typename: 'EvolinciteComment';
  id: string;
  files?: Array<string | null> | null;
  content?: string | null;
  pinned?: boolean | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteCommentSubscription = {
  __typename: 'EvolinciteComment';
  id: string;
  files?: Array<string | null> | null;
  content?: string | null;
  pinned?: boolean | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteActivitySubscription = {
  __typename: 'EvolinciteActivity';
  id: string;
  name?: string | null;
  description?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  color?: string | null;
  type?: EvolinciteActivityTypes | null;
  priority?: number | null;
  meta?: string | null;
  taskState?: EvolinciteTaskStates | null;
  documents?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  Participants?: {
    __typename: 'ModelEvolinciteActivityEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteActivitySubscription = {
  __typename: 'EvolinciteActivity';
  id: string;
  name?: string | null;
  description?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  color?: string | null;
  type?: EvolinciteActivityTypes | null;
  priority?: number | null;
  meta?: string | null;
  taskState?: EvolinciteTaskStates | null;
  documents?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  Participants?: {
    __typename: 'ModelEvolinciteActivityEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteActivitySubscription = {
  __typename: 'EvolinciteActivity';
  id: string;
  name?: string | null;
  description?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  color?: string | null;
  type?: EvolinciteActivityTypes | null;
  priority?: number | null;
  meta?: string | null;
  taskState?: EvolinciteTaskStates | null;
  documents?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  Participants?: {
    __typename: 'ModelEvolinciteActivityEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolincitePermissionsSubscription = {
  __typename: 'EvolincitePermissions';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  evolinciteDepartmentID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteDepartment?: {
    __typename: 'EvolinciteDepartment';
    id: string;
    name?: string | null;
    parent?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteRolID?: string | null;
  EvolinciteRol?: {
    __typename: 'EvolinciteRol';
    id: string;
    name?: string | null;
    permissions?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolincitePermissionsSubscription = {
  __typename: 'EvolincitePermissions';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  evolinciteDepartmentID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteDepartment?: {
    __typename: 'EvolinciteDepartment';
    id: string;
    name?: string | null;
    parent?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteRolID?: string | null;
  EvolinciteRol?: {
    __typename: 'EvolinciteRol';
    id: string;
    name?: string | null;
    permissions?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolincitePermissionsSubscription = {
  __typename: 'EvolincitePermissions';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  evolinciteDepartmentID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteDepartment?: {
    __typename: 'EvolinciteDepartment';
    id: string;
    name?: string | null;
    parent?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteRolID?: string | null;
  EvolinciteRol?: {
    __typename: 'EvolinciteRol';
    id: string;
    name?: string | null;
    permissions?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteDepartmentSubscription = {
  __typename: 'EvolinciteDepartment';
  id: string;
  name?: string | null;
  parent?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteDepartmentSubscription = {
  __typename: 'EvolinciteDepartment';
  id: string;
  name?: string | null;
  parent?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteDepartmentSubscription = {
  __typename: 'EvolinciteDepartment';
  id: string;
  name?: string | null;
  parent?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteSubscriptionSubscription = {
  __typename: 'EvolinciteSubscription';
  id: string;
  name?: string | null;
  price?: number | null;
  dateInitial?: string | null;
  dateFinal?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteCompanies?: {
    __typename: 'ModelEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteSubscriptionSubscription = {
  __typename: 'EvolinciteSubscription';
  id: string;
  name?: string | null;
  price?: number | null;
  dateInitial?: string | null;
  dateFinal?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteCompanies?: {
    __typename: 'ModelEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteSubscriptionSubscription = {
  __typename: 'EvolinciteSubscription';
  id: string;
  name?: string | null;
  price?: number | null;
  dateInitial?: string | null;
  dateFinal?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteCompanies?: {
    __typename: 'ModelEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteModuleSubscription = {
  __typename: 'EvolinciteModule';
  id: string;
  name?: string | null;
  state?: EvolinciteStates | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteModuleSubscription = {
  __typename: 'EvolinciteModule';
  id: string;
  name?: string | null;
  state?: EvolinciteStates | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteModuleSubscription = {
  __typename: 'EvolinciteModule';
  id: string;
  name?: string | null;
  state?: EvolinciteStates | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteFunctionalitySubscription = {
  __typename: 'EvolinciteFunctionality';
  id: string;
  name?: string | null;
  functionalities?: Array<EvolinciteFunctionalities | null> | null;
  state?: EvolinciteStates | null;
  evolincitePackageID?: string | null;
  EvolincitePackage?: {
    __typename: 'EvolincitePackage';
    id: string;
    name?: string | null;
    description?: string | null;
    goal?: string | null;
    duration?: number | null;
    state?: EvolinciteStates | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteFunctionalitySubscription = {
  __typename: 'EvolinciteFunctionality';
  id: string;
  name?: string | null;
  functionalities?: Array<EvolinciteFunctionalities | null> | null;
  state?: EvolinciteStates | null;
  evolincitePackageID?: string | null;
  EvolincitePackage?: {
    __typename: 'EvolincitePackage';
    id: string;
    name?: string | null;
    description?: string | null;
    goal?: string | null;
    duration?: number | null;
    state?: EvolinciteStates | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteFunctionalitySubscription = {
  __typename: 'EvolinciteFunctionality';
  id: string;
  name?: string | null;
  functionalities?: Array<EvolinciteFunctionalities | null> | null;
  state?: EvolinciteStates | null;
  evolincitePackageID?: string | null;
  EvolincitePackage?: {
    __typename: 'EvolincitePackage';
    id: string;
    name?: string | null;
    description?: string | null;
    goal?: string | null;
    duration?: number | null;
    state?: EvolinciteStates | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteRolSubscription = {
  __typename: 'EvolinciteRol';
  id: string;
  name?: string | null;
  permissions?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteRolSubscription = {
  __typename: 'EvolinciteRol';
  id: string;
  name?: string | null;
  permissions?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteRolSubscription = {
  __typename: 'EvolinciteRol';
  id: string;
  name?: string | null;
  permissions?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteCustomerSubscription = {
  __typename: 'EvolinciteCustomer';
  id: string;
  name?: string | null;
  lastName?: string | null;
  documentType?: EvolinciteDocumentType | null;
  documentNumber?: string | null;
  phone?: string | null;
  optionalPhone?: string | null;
  email?: string | null;
  picture?: string | null;
  birthDate?: string | null;
  municipality?: EvolinciteMunicipality | null;
  documents?: Array<string | null> | null;
  address?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteCustomerSubscription = {
  __typename: 'EvolinciteCustomer';
  id: string;
  name?: string | null;
  lastName?: string | null;
  documentType?: EvolinciteDocumentType | null;
  documentNumber?: string | null;
  phone?: string | null;
  optionalPhone?: string | null;
  email?: string | null;
  picture?: string | null;
  birthDate?: string | null;
  municipality?: EvolinciteMunicipality | null;
  documents?: Array<string | null> | null;
  address?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteCustomerSubscription = {
  __typename: 'EvolinciteCustomer';
  id: string;
  name?: string | null;
  lastName?: string | null;
  documentType?: EvolinciteDocumentType | null;
  documentNumber?: string | null;
  phone?: string | null;
  optionalPhone?: string | null;
  email?: string | null;
  picture?: string | null;
  birthDate?: string | null;
  municipality?: EvolinciteMunicipality | null;
  documents?: Array<string | null> | null;
  address?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteUserSettingsSubscription = {
  __typename: 'EvolinciteUserSettings';
  id: string;
  settings?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteUserSettingsSubscription = {
  __typename: 'EvolinciteUserSettings';
  id: string;
  settings?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteUserSettingsSubscription = {
  __typename: 'EvolinciteUserSettings';
  id: string;
  settings?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteCrmPipelineSubscription = {
  __typename: 'EvolinciteCrmPipeline';
  id: string;
  name?: string | null;
  description?: string | null;
  publicDescription?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmStates?: {
    __typename: 'ModelEvolinciteCrmStateConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteCrmPipelineSubscription = {
  __typename: 'EvolinciteCrmPipeline';
  id: string;
  name?: string | null;
  description?: string | null;
  publicDescription?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmStates?: {
    __typename: 'ModelEvolinciteCrmStateConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteCrmPipelineSubscription = {
  __typename: 'EvolinciteCrmPipeline';
  id: string;
  name?: string | null;
  description?: string | null;
  publicDescription?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmStates?: {
    __typename: 'ModelEvolinciteCrmStateConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteCrmStateSubscription = {
  __typename: 'EvolinciteCrmState';
  id: string;
  name?: string | null;
  description?: string | null;
  publicDescription?: string | null;
  color?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmAutomations?: {
    __typename: 'ModelEvolinciteCrmAutomationConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmPipelineID?: string | null;
  EvolinciteCrmPipeline?: {
    __typename: 'EvolinciteCrmPipeline';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteCrmStateSubscription = {
  __typename: 'EvolinciteCrmState';
  id: string;
  name?: string | null;
  description?: string | null;
  publicDescription?: string | null;
  color?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmAutomations?: {
    __typename: 'ModelEvolinciteCrmAutomationConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmPipelineID?: string | null;
  EvolinciteCrmPipeline?: {
    __typename: 'EvolinciteCrmPipeline';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteCrmStateSubscription = {
  __typename: 'EvolinciteCrmState';
  id: string;
  name?: string | null;
  description?: string | null;
  publicDescription?: string | null;
  color?: string | null;
  order?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmAutomations?: {
    __typename: 'ModelEvolinciteCrmAutomationConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmPipelineID?: string | null;
  EvolinciteCrmPipeline?: {
    __typename: 'EvolinciteCrmPipeline';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteCrmNegotiationLogSubscription = {
  __typename: 'EvolinciteCrmNegotiationLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteCrmNegotiationLogSubscription = {
  __typename: 'EvolinciteCrmNegotiationLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteCrmNegotiationLogSubscription = {
  __typename: 'EvolinciteCrmNegotiationLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteCrmNegotiationSubscription = {
  __typename: 'EvolinciteCrmNegotiation';
  id: string;
  name?: string | null;
  value?: number | null;
  due?: number | null;
  parent?: string | null;
  date?: string | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  frozen?: boolean | null;
  valueInterest?: number | null;
  valueCollection?: number | null;
  observers?: Array<string | null> | null;
  exitDate?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserSellerID?: string | null;
  EvolinciteUserSeller?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserReferrerID?: string | null;
  EvolinciteUserReferrer?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserOwnerID?: string | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFieldValues?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldValueConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmStateID?: string | null;
  EvolinciteCrmState?: {
    __typename: 'EvolinciteCrmState';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    color?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmPipelineID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCustomerID?: string | null;
  EvolinciteCustomer?: {
    __typename: 'EvolinciteCustomer';
    id: string;
    name?: string | null;
    lastName?: string | null;
    documentType?: EvolinciteDocumentType | null;
    documentNumber?: string | null;
    phone?: string | null;
    optionalPhone?: string | null;
    email?: string | null;
    picture?: string | null;
    birthDate?: string | null;
    municipality?: EvolinciteMunicipality | null;
    documents?: Array<string | null> | null;
    address?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteComments?: {
    __typename: 'ModelEvolinciteCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivities?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUsersObserver?: {
    __typename: 'ModelEvolinciteUserEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  evolinciteProcessTypeID?: string | null;
  EvolinciteProcessType?: {
    __typename: 'EvolinciteProcessType';
    id: string;
    name?: string | null;
    order?: number | null;
    sellerCommission?: number | null;
    referrerCommission?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  initialGoalID?: string | null;
  InitialGoal?: {
    __typename: 'EvolinciteGoal';
    id: string;
    name?: string | null;
    description?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  finalGoalID?: string | null;
  FinalGoal?: {
    __typename: 'EvolinciteGoal';
    id: string;
    name?: string | null;
    description?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteCrmNegotiationSubscription = {
  __typename: 'EvolinciteCrmNegotiation';
  id: string;
  name?: string | null;
  value?: number | null;
  due?: number | null;
  parent?: string | null;
  date?: string | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  frozen?: boolean | null;
  valueInterest?: number | null;
  valueCollection?: number | null;
  observers?: Array<string | null> | null;
  exitDate?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserSellerID?: string | null;
  EvolinciteUserSeller?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserReferrerID?: string | null;
  EvolinciteUserReferrer?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserOwnerID?: string | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFieldValues?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldValueConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmStateID?: string | null;
  EvolinciteCrmState?: {
    __typename: 'EvolinciteCrmState';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    color?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmPipelineID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCustomerID?: string | null;
  EvolinciteCustomer?: {
    __typename: 'EvolinciteCustomer';
    id: string;
    name?: string | null;
    lastName?: string | null;
    documentType?: EvolinciteDocumentType | null;
    documentNumber?: string | null;
    phone?: string | null;
    optionalPhone?: string | null;
    email?: string | null;
    picture?: string | null;
    birthDate?: string | null;
    municipality?: EvolinciteMunicipality | null;
    documents?: Array<string | null> | null;
    address?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteComments?: {
    __typename: 'ModelEvolinciteCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivities?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUsersObserver?: {
    __typename: 'ModelEvolinciteUserEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  evolinciteProcessTypeID?: string | null;
  EvolinciteProcessType?: {
    __typename: 'EvolinciteProcessType';
    id: string;
    name?: string | null;
    order?: number | null;
    sellerCommission?: number | null;
    referrerCommission?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  initialGoalID?: string | null;
  InitialGoal?: {
    __typename: 'EvolinciteGoal';
    id: string;
    name?: string | null;
    description?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  finalGoalID?: string | null;
  FinalGoal?: {
    __typename: 'EvolinciteGoal';
    id: string;
    name?: string | null;
    description?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteCrmNegotiationSubscription = {
  __typename: 'EvolinciteCrmNegotiation';
  id: string;
  name?: string | null;
  value?: number | null;
  due?: number | null;
  parent?: string | null;
  date?: string | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  frozen?: boolean | null;
  valueInterest?: number | null;
  valueCollection?: number | null;
  observers?: Array<string | null> | null;
  exitDate?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserSellerID?: string | null;
  EvolinciteUserSeller?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserReferrerID?: string | null;
  EvolinciteUserReferrer?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserOwnerID?: string | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationFieldValues?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldValueConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCrmStateID?: string | null;
  EvolinciteCrmState?: {
    __typename: 'EvolinciteCrmState';
    id: string;
    name?: string | null;
    description?: string | null;
    publicDescription?: string | null;
    color?: string | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmPipelineID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCustomerID?: string | null;
  EvolinciteCustomer?: {
    __typename: 'EvolinciteCustomer';
    id: string;
    name?: string | null;
    lastName?: string | null;
    documentType?: EvolinciteDocumentType | null;
    documentNumber?: string | null;
    phone?: string | null;
    optionalPhone?: string | null;
    email?: string | null;
    picture?: string | null;
    birthDate?: string | null;
    municipality?: EvolinciteMunicipality | null;
    documents?: Array<string | null> | null;
    address?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteComments?: {
    __typename: 'ModelEvolinciteCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivities?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUsersObserver?: {
    __typename: 'ModelEvolinciteUserEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  evolinciteProcessTypeID?: string | null;
  EvolinciteProcessType?: {
    __typename: 'EvolinciteProcessType';
    id: string;
    name?: string | null;
    order?: number | null;
    sellerCommission?: number | null;
    referrerCommission?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  initialGoalID?: string | null;
  InitialGoal?: {
    __typename: 'EvolinciteGoal';
    id: string;
    name?: string | null;
    description?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  finalGoalID?: string | null;
  FinalGoal?: {
    __typename: 'EvolinciteGoal';
    id: string;
    name?: string | null;
    description?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteRoomSubscription = {
  __typename: 'EvolinciteRoom';
  id: string;
  Key?: string | null;
  name?: string | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  EvolinciteUsers?: {
    __typename: 'ModelEvolinciteRoomEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteRoomSubscription = {
  __typename: 'EvolinciteRoom';
  id: string;
  Key?: string | null;
  name?: string | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  EvolinciteUsers?: {
    __typename: 'ModelEvolinciteRoomEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteRoomSubscription = {
  __typename: 'EvolinciteRoom';
  id: string;
  Key?: string | null;
  name?: string | null;
  state?: EvolinciteStates | null;
  meta?: string | null;
  EvolinciteUsers?: {
    __typename: 'ModelEvolinciteRoomEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteMessageSubscription = {
  __typename: 'EvolinciteMessage';
  id: string;
  content?: string | null;
  type?: EvolinciteMessageType | null;
  state?: EvolinciteStates | null;
  createdAt?: string | null;
  updatedAt?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteRoomID?: string | null;
  EvolinciteRoom?: {
    __typename: 'EvolinciteRoom';
    id: string;
    Key?: string | null;
    name?: string | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
};

export type OnUpdateEvolinciteMessageSubscription = {
  __typename: 'EvolinciteMessage';
  id: string;
  content?: string | null;
  type?: EvolinciteMessageType | null;
  state?: EvolinciteStates | null;
  createdAt?: string | null;
  updatedAt?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteRoomID?: string | null;
  EvolinciteRoom?: {
    __typename: 'EvolinciteRoom';
    id: string;
    Key?: string | null;
    name?: string | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
};

export type OnDeleteEvolinciteMessageSubscription = {
  __typename: 'EvolinciteMessage';
  id: string;
  content?: string | null;
  type?: EvolinciteMessageType | null;
  state?: EvolinciteStates | null;
  createdAt?: string | null;
  updatedAt?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteRoomID?: string | null;
  EvolinciteRoom?: {
    __typename: 'EvolinciteRoom';
    id: string;
    Key?: string | null;
    name?: string | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
};

export type OnCreateEvolinciteCrmNegotiationFieldValueSubscription = {
  __typename: 'EvolinciteCrmNegotiationFieldValue';
  id: string;
  value?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCrmNegotiationFieldID?: string | null;
  EvolinciteCrmNegotiationField?: {
    __typename: 'EvolinciteCrmNegotiationField';
    id: string;
    field?: string | null;
    type?: EvolinciteField | null;
    required?: boolean | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationSectionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteCrmNegotiationFieldValueSubscription = {
  __typename: 'EvolinciteCrmNegotiationFieldValue';
  id: string;
  value?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCrmNegotiationFieldID?: string | null;
  EvolinciteCrmNegotiationField?: {
    __typename: 'EvolinciteCrmNegotiationField';
    id: string;
    field?: string | null;
    type?: EvolinciteField | null;
    required?: boolean | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationSectionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteCrmNegotiationFieldValueSubscription = {
  __typename: 'EvolinciteCrmNegotiationFieldValue';
  id: string;
  value?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCrmNegotiationFieldID?: string | null;
  EvolinciteCrmNegotiationField?: {
    __typename: 'EvolinciteCrmNegotiationField';
    id: string;
    field?: string | null;
    type?: EvolinciteField | null;
    required?: boolean | null;
    order?: number | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationSectionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCrmNegotiationID?: string | null;
  EvolinciteCrmNegotiation?: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteEmailSubscription = {
  __typename: 'EvolinciteEmail';
  id: string;
  from?: string | null;
  to?: string | null;
  content?: string | null;
  subject?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteEmailSubscription = {
  __typename: 'EvolinciteEmail';
  id: string;
  from?: string | null;
  to?: string | null;
  content?: string | null;
  subject?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteEmailSubscription = {
  __typename: 'EvolinciteEmail';
  id: string;
  from?: string | null;
  to?: string | null;
  content?: string | null;
  subject?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteEmailTemplateSubscription = {
  __typename: 'EvolinciteEmailTemplate';
  id: string;
  content?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteEmailTemplateSubscription = {
  __typename: 'EvolinciteEmailTemplate';
  id: string;
  content?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteEmailTemplateSubscription = {
  __typename: 'EvolinciteEmailTemplate';
  id: string;
  content?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteNotificationSubscription = {
  __typename: 'EvolinciteNotification';
  id: string;
  content?: string | null;
  title?: string | null;
  priority?: EvolinciteNotificationPriority | null;
  type?: EvolunciteNotificationType | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteNotificationSubscription = {
  __typename: 'EvolinciteNotification';
  id: string;
  content?: string | null;
  title?: string | null;
  priority?: EvolinciteNotificationPriority | null;
  type?: EvolunciteNotificationType | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteNotificationSubscription = {
  __typename: 'EvolinciteNotification';
  id: string;
  content?: string | null;
  title?: string | null;
  priority?: EvolinciteNotificationPriority | null;
  type?: EvolunciteNotificationType | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteUserDepartmentSubscription = {
  __typename: 'EvolinciteUserDepartment';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteDepartmentID?: string | null;
  EvolinciteDepartment?: {
    __typename: 'EvolinciteDepartment';
    id: string;
    name?: string | null;
    parent?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteUserDepartmentSubscription = {
  __typename: 'EvolinciteUserDepartment';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteDepartmentID?: string | null;
  EvolinciteDepartment?: {
    __typename: 'EvolinciteDepartment';
    id: string;
    name?: string | null;
    parent?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteUserDepartmentSubscription = {
  __typename: 'EvolinciteUserDepartment';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteDepartmentID?: string | null;
  EvolinciteDepartment?: {
    __typename: 'EvolinciteDepartment';
    id: string;
    name?: string | null;
    parent?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteUserEvolinciteCompanySubscription = {
  __typename: 'EvolinciteUserEvolinciteCompany';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteUserEvolinciteCompanySubscription = {
  __typename: 'EvolinciteUserEvolinciteCompany';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteUserEvolinciteCompanySubscription = {
  __typename: 'EvolinciteUserEvolinciteCompany';
  id: string;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteUserSubscription = {
  __typename: 'EvolinciteUser';
  id: string;
  name?: string | null;
  nit?: string | null;
  phone?: string | null;
  picture?: string | null;
  email?: string | null;
  sub?: string | null;
  meta?: string | null;
  cv?: string | null;
  contract?: string | null;
  memos?: Array<string | null> | null;
  personalMail?: string | null;
  personalPhone?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteUserEvolinciteCompanies?: {
    __typename: 'ModelEvolinciteUserEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivitiesOwner?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivitiesParticipants?: {
    __typename: 'ModelEvolinciteActivityEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRooms?: {
    __typename: 'ModelEvolinciteRoomEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsOwner?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsReferrer?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsSeller?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentsUserSeller?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentsUserReferrer?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteNotifications?: {
    __typename: 'ModelEvolinciteNotificationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteComments?: {
    __typename: 'ModelEvolinciteCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserSettings?: {
    __typename: 'ModelEvolinciteUserSettingsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsObserver?: {
    __typename: 'ModelEvolinciteUserEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicket?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFolders?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticles?: {
    __typename: 'ModelEvolinciteArticleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticleComments?: {
    __typename: 'ModelEvolinciteArticleCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFoldersOwner?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormConfigurations?: {
    __typename: 'ModelEvolinciteFormConfigurationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMails?: {
    __typename: 'ModelEvolinciteMailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmployeeObservations?: {
    __typename: 'ModelEvolinciteEmployeeObservationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteUserSubscription = {
  __typename: 'EvolinciteUser';
  id: string;
  name?: string | null;
  nit?: string | null;
  phone?: string | null;
  picture?: string | null;
  email?: string | null;
  sub?: string | null;
  meta?: string | null;
  cv?: string | null;
  contract?: string | null;
  memos?: Array<string | null> | null;
  personalMail?: string | null;
  personalPhone?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteUserEvolinciteCompanies?: {
    __typename: 'ModelEvolinciteUserEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivitiesOwner?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivitiesParticipants?: {
    __typename: 'ModelEvolinciteActivityEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRooms?: {
    __typename: 'ModelEvolinciteRoomEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsOwner?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsReferrer?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsSeller?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentsUserSeller?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentsUserReferrer?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteNotifications?: {
    __typename: 'ModelEvolinciteNotificationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteComments?: {
    __typename: 'ModelEvolinciteCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserSettings?: {
    __typename: 'ModelEvolinciteUserSettingsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsObserver?: {
    __typename: 'ModelEvolinciteUserEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicket?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFolders?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticles?: {
    __typename: 'ModelEvolinciteArticleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticleComments?: {
    __typename: 'ModelEvolinciteArticleCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFoldersOwner?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormConfigurations?: {
    __typename: 'ModelEvolinciteFormConfigurationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMails?: {
    __typename: 'ModelEvolinciteMailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmployeeObservations?: {
    __typename: 'ModelEvolinciteEmployeeObservationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteUserSubscription = {
  __typename: 'EvolinciteUser';
  id: string;
  name?: string | null;
  nit?: string | null;
  phone?: string | null;
  picture?: string | null;
  email?: string | null;
  sub?: string | null;
  meta?: string | null;
  cv?: string | null;
  contract?: string | null;
  memos?: Array<string | null> | null;
  personalMail?: string | null;
  personalPhone?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteUserEvolinciteCompanies?: {
    __typename: 'ModelEvolinciteUserEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivitiesOwner?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivitiesParticipants?: {
    __typename: 'ModelEvolinciteActivityEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRooms?: {
    __typename: 'ModelEvolinciteRoomEvolinciteUserConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsOwner?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsReferrer?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsSeller?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentsUserSeller?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentsUserReferrer?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteNotifications?: {
    __typename: 'ModelEvolinciteNotificationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteComments?: {
    __typename: 'ModelEvolinciteCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserSettings?: {
    __typename: 'ModelEvolinciteUserSettingsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsObserver?: {
    __typename: 'ModelEvolinciteUserEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicket?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFolders?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticles?: {
    __typename: 'ModelEvolinciteArticleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticleComments?: {
    __typename: 'ModelEvolinciteArticleCommentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFoldersOwner?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormConfigurations?: {
    __typename: 'ModelEvolinciteFormConfigurationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMails?: {
    __typename: 'ModelEvolinciteMailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmployeeObservations?: {
    __typename: 'ModelEvolinciteEmployeeObservationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteCompanySubscription = {
  __typename: 'EvolinciteCompany';
  id: string;
  name?: string | null;
  nit?: string | null;
  picture?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteUserEvolinciteCompanies?: {
    __typename: 'ModelEvolinciteUserEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  evolinciteSubscriptionID?: string | null;
  EvolinciteSubscription?: {
    __typename: 'EvolinciteSubscription';
    id: string;
    name?: string | null;
    price?: number | null;
    dateInitial?: string | null;
    dateFinal?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationFields?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationSections?: {
    __typename: 'ModelEvolinciteCrmNegotiationSectionConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmAutomations?: {
    __typename: 'ModelEvolinciteCrmAutomationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteDepartments?: {
    __typename: 'ModelEvolinciteDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCustomers?: {
    __typename: 'ModelEvolinciteCustomerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmPipelines?: {
    __typename: 'ModelEvolinciteCrmPipelineConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmStates?: {
    __typename: 'ModelEvolinciteCrmStateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteJobTitles?: {
    __typename: 'ModelEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteNotifications?: {
    __typename: 'ModelEvolinciteNotificationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmailTemplates?: {
    __typename: 'ModelEvolinciteEmailTemplateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmails?: {
    __typename: 'ModelEvolinciteEmailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivities?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRoles?: {
    __typename: 'ModelEvolinciteRolConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserSettings?: {
    __typename: 'ModelEvolinciteUserSettingsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRooms?: {
    __typename: 'ModelEvolinciteRoomConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseTypes?: {
    __typename: 'ModelEvolinciteExpenseTypeConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteProcessTypes?: {
    __typename: 'ModelEvolinciteProcessTypeConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteGoal?: {
    __typename: 'ModelEvolinciteGoalConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketOwner?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketOrigin?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFolders?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticles?: {
    __typename: 'ModelEvolinciteArticleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormConfigurations?: {
    __typename: 'ModelEvolinciteFormConfigurationConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentAutomations?: {
    __typename: 'ModelEvolincitePaymentAutomationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMails?: {
    __typename: 'ModelEvolinciteMailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMailTemplates?: {
    __typename: 'ModelEvolinciteMailTemplateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCompanySubscriptions?: {
    __typename: 'ModelEvolinciteCompanySubscriptionConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmployeeObservations?: {
    __typename: 'ModelEvolinciteEmployeeObservationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteCompanySubscription = {
  __typename: 'EvolinciteCompany';
  id: string;
  name?: string | null;
  nit?: string | null;
  picture?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteUserEvolinciteCompanies?: {
    __typename: 'ModelEvolinciteUserEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  evolinciteSubscriptionID?: string | null;
  EvolinciteSubscription?: {
    __typename: 'EvolinciteSubscription';
    id: string;
    name?: string | null;
    price?: number | null;
    dateInitial?: string | null;
    dateFinal?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationFields?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationSections?: {
    __typename: 'ModelEvolinciteCrmNegotiationSectionConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmAutomations?: {
    __typename: 'ModelEvolinciteCrmAutomationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteDepartments?: {
    __typename: 'ModelEvolinciteDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCustomers?: {
    __typename: 'ModelEvolinciteCustomerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmPipelines?: {
    __typename: 'ModelEvolinciteCrmPipelineConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmStates?: {
    __typename: 'ModelEvolinciteCrmStateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteJobTitles?: {
    __typename: 'ModelEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteNotifications?: {
    __typename: 'ModelEvolinciteNotificationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmailTemplates?: {
    __typename: 'ModelEvolinciteEmailTemplateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmails?: {
    __typename: 'ModelEvolinciteEmailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivities?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRoles?: {
    __typename: 'ModelEvolinciteRolConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserSettings?: {
    __typename: 'ModelEvolinciteUserSettingsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRooms?: {
    __typename: 'ModelEvolinciteRoomConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseTypes?: {
    __typename: 'ModelEvolinciteExpenseTypeConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteProcessTypes?: {
    __typename: 'ModelEvolinciteProcessTypeConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteGoal?: {
    __typename: 'ModelEvolinciteGoalConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketOwner?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketOrigin?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFolders?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticles?: {
    __typename: 'ModelEvolinciteArticleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormConfigurations?: {
    __typename: 'ModelEvolinciteFormConfigurationConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentAutomations?: {
    __typename: 'ModelEvolincitePaymentAutomationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMails?: {
    __typename: 'ModelEvolinciteMailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMailTemplates?: {
    __typename: 'ModelEvolinciteMailTemplateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCompanySubscriptions?: {
    __typename: 'ModelEvolinciteCompanySubscriptionConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmployeeObservations?: {
    __typename: 'ModelEvolinciteEmployeeObservationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteCompanySubscription = {
  __typename: 'EvolinciteCompany';
  id: string;
  name?: string | null;
  nit?: string | null;
  picture?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  EvolinciteUserEvolinciteCompanies?: {
    __typename: 'ModelEvolinciteUserEvolinciteCompanyConnection';
    nextToken?: string | null;
  } | null;
  evolinciteSubscriptionID?: string | null;
  EvolinciteSubscription?: {
    __typename: 'EvolinciteSubscription';
    id: string;
    name?: string | null;
    price?: number | null;
    dateInitial?: string | null;
    dateFinal?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayments?: {
    __typename: 'ModelEvolinciteWalletPaymentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationFields?: {
    __typename: 'ModelEvolinciteCrmNegotiationFieldConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationSections?: {
    __typename: 'ModelEvolinciteCrmNegotiationSectionConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmAutomations?: {
    __typename: 'ModelEvolinciteCrmAutomationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserDepartments?: {
    __typename: 'ModelEvolinciteUserDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteDepartments?: {
    __typename: 'ModelEvolinciteDepartmentConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCustomers?: {
    __typename: 'ModelEvolinciteCustomerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmPipelines?: {
    __typename: 'ModelEvolinciteCrmPipelineConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmStates?: {
    __typename: 'ModelEvolinciteCrmStateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiations?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteJobTitles?: {
    __typename: 'ModelEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteNotifications?: {
    __typename: 'ModelEvolinciteNotificationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmailTemplates?: {
    __typename: 'ModelEvolinciteEmailTemplateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmails?: {
    __typename: 'ModelEvolinciteEmailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMessages?: {
    __typename: 'ModelEvolinciteMessageConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationLogs?: {
    __typename: 'ModelEvolinciteCrmNegotiationLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteActivities?: {
    __typename: 'ModelEvolinciteActivityConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePermissions?: {
    __typename: 'ModelEvolincitePermissionsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRoles?: {
    __typename: 'ModelEvolinciteRolConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserSettings?: {
    __typename: 'ModelEvolinciteUserSettingsConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteRooms?: {
    __typename: 'ModelEvolinciteRoomConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteUserEvolinciteJobTitle?: {
    __typename: 'ModelEvolinciteUserEvolinciteJobTitleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseTypes?: {
    __typename: 'ModelEvolinciteExpenseTypeConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenses?: {
    __typename: 'ModelEvolinciteExpenseConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteProcessTypes?: {
    __typename: 'ModelEvolinciteProcessTypeConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteGoal?: {
    __typename: 'ModelEvolinciteGoalConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteWalletPaymentLogs?: {
    __typename: 'ModelEvolinciteWalletPaymentLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteExpenseLogs?: {
    __typename: 'ModelEvolinciteExpenseLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketOwner?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketOrigin?: {
    __typename: 'ModelEvolinciteTicketConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFolders?: {
    __typename: 'ModelEvolinciteFolderConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteArticles?: {
    __typename: 'ModelEvolinciteArticleConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormConfigurations?: {
    __typename: 'ModelEvolinciteFormConfigurationConnection';
    nextToken?: string | null;
  } | null;
  EvolincitePaymentAutomations?: {
    __typename: 'ModelEvolincitePaymentAutomationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMails?: {
    __typename: 'ModelEvolinciteMailConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteMailTemplates?: {
    __typename: 'ModelEvolinciteMailTemplateConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCompanySubscriptions?: {
    __typename: 'ModelEvolinciteCompanySubscriptionConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteEmployeeObservations?: {
    __typename: 'ModelEvolinciteEmployeeObservationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteGoalSubscription = {
  __typename: 'EvolinciteGoal';
  id: string;
  name?: string | null;
  description?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationsInitial?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsFinal?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteGoalSubscription = {
  __typename: 'EvolinciteGoal';
  id: string;
  name?: string | null;
  description?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationsInitial?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsFinal?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteGoalSubscription = {
  __typename: 'EvolinciteGoal';
  id: string;
  name?: string | null;
  description?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCrmNegotiationsInitial?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCrmNegotiationsFinal?: {
    __typename: 'ModelEvolinciteCrmNegotiationConnection';
    nextToken?: string | null;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteWalletPaymentLogSubscription = {
  __typename: 'EvolinciteWalletPaymentLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteWalletPaymentID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayment?: {
    __typename: 'EvolinciteWalletPayment';
    id: string;
    amount?: number | null;
    scheduledDate?: string | null;
    datePayment?: string | null;
    paymentStatus?: EvolinciteWalletPaymentStatus | null;
    prePayment?: string | null;
    postPayment?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    amountInterest?: number | null;
    amountCollection?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteWalletPaymentLogSubscription = {
  __typename: 'EvolinciteWalletPaymentLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteWalletPaymentID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayment?: {
    __typename: 'EvolinciteWalletPayment';
    id: string;
    amount?: number | null;
    scheduledDate?: string | null;
    datePayment?: string | null;
    paymentStatus?: EvolinciteWalletPaymentStatus | null;
    prePayment?: string | null;
    postPayment?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    amountInterest?: number | null;
    amountCollection?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteWalletPaymentLogSubscription = {
  __typename: 'EvolinciteWalletPaymentLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteWalletPaymentID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteWalletPayment?: {
    __typename: 'EvolinciteWalletPayment';
    id: string;
    amount?: number | null;
    scheduledDate?: string | null;
    datePayment?: string | null;
    paymentStatus?: EvolinciteWalletPaymentStatus | null;
    prePayment?: string | null;
    postPayment?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    amountInterest?: number | null;
    amountCollection?: number | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteExpenseLogSubscription = {
  __typename: 'EvolinciteExpenseLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteExpenseID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteExpense?: {
    __typename: 'EvolinciteExpense';
    id: string;
    amount?: number | null;
    process?: string | null;
    expenseState?: EvolinciteExpenseStates | null;
    expenseDate?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    state?: EvolinciteStates | null;
    evolinciteExpenseTypeID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteExpenseLogSubscription = {
  __typename: 'EvolinciteExpenseLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteExpenseID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteExpense?: {
    __typename: 'EvolinciteExpense';
    id: string;
    amount?: number | null;
    process?: string | null;
    expenseState?: EvolinciteExpenseStates | null;
    expenseDate?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    state?: EvolinciteStates | null;
    evolinciteExpenseTypeID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteExpenseLogSubscription = {
  __typename: 'EvolinciteExpenseLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteExpenseID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteExpense?: {
    __typename: 'EvolinciteExpense';
    id: string;
    amount?: number | null;
    process?: string | null;
    expenseState?: EvolinciteExpenseStates | null;
    expenseDate?: string | null;
    observations?: string | null;
    voucher?: Array<string | null> | null;
    transactionType?: EvolinciteTransactionType | null;
    reference?: string | null;
    state?: EvolinciteStates | null;
    evolinciteExpenseTypeID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserID?: string | null;
    evolinciteUserResponsibleID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteTicketSubscription = {
  __typename: 'EvolinciteTicket';
  id: string;
  name?: string | null;
  description?: string | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  ticketState?: EvolinciteTicketState | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyOwnerID?: string | null;
  evolinciteCompanyOriginID?: string | null;
  EvolinciteCompanyOwner?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCompanyOrigin?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteTicketSubscription = {
  __typename: 'EvolinciteTicket';
  id: string;
  name?: string | null;
  description?: string | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  ticketState?: EvolinciteTicketState | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyOwnerID?: string | null;
  evolinciteCompanyOriginID?: string | null;
  EvolinciteCompanyOwner?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCompanyOrigin?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteTicketSubscription = {
  __typename: 'EvolinciteTicket';
  id: string;
  name?: string | null;
  description?: string | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  ticketState?: EvolinciteTicketState | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyOwnerID?: string | null;
  evolinciteCompanyOriginID?: string | null;
  EvolinciteCompanyOwner?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteCompanyOrigin?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteTicketLogs?: {
    __typename: 'ModelEvolinciteTicketLogConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteTicketLogSubscription = {
  __typename: 'EvolinciteTicketLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteTicketID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteTicket?: {
    __typename: 'EvolinciteTicket';
    id: string;
    name?: string | null;
    description?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    ticketState?: EvolinciteTicketState | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyOwnerID?: string | null;
    evolinciteCompanyOriginID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteTicketLogSubscription = {
  __typename: 'EvolinciteTicketLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteTicketID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteTicket?: {
    __typename: 'EvolinciteTicket';
    id: string;
    name?: string | null;
    description?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    ticketState?: EvolinciteTicketState | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyOwnerID?: string | null;
    evolinciteCompanyOriginID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteTicketLogSubscription = {
  __typename: 'EvolinciteTicketLog';
  id: string;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteTicketID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteTicket?: {
    __typename: 'EvolinciteTicket';
    id: string;
    name?: string | null;
    description?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    ticketState?: EvolinciteTicketState | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyOwnerID?: string | null;
    evolinciteCompanyOriginID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteFileSubscription = {
  __typename: 'EvolinciteFile';
  id: string;
  name?: string | null;
  size?: number | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteFolderID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFolder?: {
    __typename: 'EvolinciteFolder';
    id: string;
    parent?: string | null;
    name?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteFileSubscription = {
  __typename: 'EvolinciteFile';
  id: string;
  name?: string | null;
  size?: number | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteFolderID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFolder?: {
    __typename: 'EvolinciteFolder';
    id: string;
    parent?: string | null;
    name?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteFileSubscription = {
  __typename: 'EvolinciteFile';
  id: string;
  name?: string | null;
  size?: number | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteFolderID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFolder?: {
    __typename: 'EvolinciteFolder';
    id: string;
    parent?: string | null;
    name?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteFolderSubscription = {
  __typename: 'EvolinciteFolder';
  id: string;
  parent?: string | null;
  name?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteUserOwnerID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteFolderSubscription = {
  __typename: 'EvolinciteFolder';
  id: string;
  parent?: string | null;
  name?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteUserOwnerID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteFolderSubscription = {
  __typename: 'EvolinciteFolder';
  id: string;
  parent?: string | null;
  name?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteUserOwnerID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUserOwner?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFiles?: {
    __typename: 'ModelEvolinciteFileConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteArticleSubscription = {
  __typename: 'EvolinciteArticle';
  id: string;
  front?: string | null;
  cover?: Array<string | null> | null;
  title?: string | null;
  content?: string | null;
  articleState?: EvolinciteArticleStates | null;
  visibility?: Array<string | null> | null;
  publicationDate?: string | null;
  meta?: string | null;
  files?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteArticleComments?: {
    __typename: 'ModelEvolinciteArticleCommentConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteArticleSubscription = {
  __typename: 'EvolinciteArticle';
  id: string;
  front?: string | null;
  cover?: Array<string | null> | null;
  title?: string | null;
  content?: string | null;
  articleState?: EvolinciteArticleStates | null;
  visibility?: Array<string | null> | null;
  publicationDate?: string | null;
  meta?: string | null;
  files?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteArticleComments?: {
    __typename: 'ModelEvolinciteArticleCommentConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteArticleSubscription = {
  __typename: 'EvolinciteArticle';
  id: string;
  front?: string | null;
  cover?: Array<string | null> | null;
  title?: string | null;
  content?: string | null;
  articleState?: EvolinciteArticleStates | null;
  visibility?: Array<string | null> | null;
  publicationDate?: string | null;
  meta?: string | null;
  files?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteArticleComments?: {
    __typename: 'ModelEvolinciteArticleCommentConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteArticleCommentSubscription = {
  __typename: 'EvolinciteArticleComment';
  id: string;
  content?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteArticleID?: string | null;
  EvolinciteArticle?: {
    __typename: 'EvolinciteArticle';
    id: string;
    front?: string | null;
    cover?: Array<string | null> | null;
    title?: string | null;
    content?: string | null;
    articleState?: EvolinciteArticleStates | null;
    visibility?: Array<string | null> | null;
    publicationDate?: string | null;
    meta?: string | null;
    files?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteArticleCommentSubscription = {
  __typename: 'EvolinciteArticleComment';
  id: string;
  content?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteArticleID?: string | null;
  EvolinciteArticle?: {
    __typename: 'EvolinciteArticle';
    id: string;
    front?: string | null;
    cover?: Array<string | null> | null;
    title?: string | null;
    content?: string | null;
    articleState?: EvolinciteArticleStates | null;
    visibility?: Array<string | null> | null;
    publicationDate?: string | null;
    meta?: string | null;
    files?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteArticleCommentSubscription = {
  __typename: 'EvolinciteArticleComment';
  id: string;
  content?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteArticleID?: string | null;
  EvolinciteArticle?: {
    __typename: 'EvolinciteArticle';
    id: string;
    front?: string | null;
    cover?: Array<string | null> | null;
    title?: string | null;
    content?: string | null;
    articleState?: EvolinciteArticleStates | null;
    visibility?: Array<string | null> | null;
    publicationDate?: string | null;
    meta?: string | null;
    files?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteFormConfigurationSubscription = {
  __typename: 'EvolinciteFormConfiguration';
  id: string;
  key?: string | null;
  name?: string | null;
  config?: string | null;
  meta?: string | null;
  title?: string | null;
  description?: string | null;
  observations?: string | null;
  front?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteFormConfigurationSubscription = {
  __typename: 'EvolinciteFormConfiguration';
  id: string;
  key?: string | null;
  name?: string | null;
  config?: string | null;
  meta?: string | null;
  title?: string | null;
  description?: string | null;
  observations?: string | null;
  front?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteFormConfigurationSubscription = {
  __typename: 'EvolinciteFormConfiguration';
  id: string;
  key?: string | null;
  name?: string | null;
  config?: string | null;
  meta?: string | null;
  title?: string | null;
  description?: string | null;
  observations?: string | null;
  front?: string | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  EvolinciteFormAnswers?: {
    __typename: 'ModelEvolinciteFormAnswerConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteFormAnswerSubscription = {
  __typename: 'EvolinciteFormAnswer';
  id: string;
  meta?: string | null;
  answerState?: EvolinciteSurveyAnswerState | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteFormConfigurationID?: string | null;
  EvolinciteFormConfiguration?: {
    __typename: 'EvolinciteFormConfiguration';
    id: string;
    key?: string | null;
    name?: string | null;
    config?: string | null;
    meta?: string | null;
    title?: string | null;
    description?: string | null;
    observations?: string | null;
    front?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteFormAnswerSubscription = {
  __typename: 'EvolinciteFormAnswer';
  id: string;
  meta?: string | null;
  answerState?: EvolinciteSurveyAnswerState | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteFormConfigurationID?: string | null;
  EvolinciteFormConfiguration?: {
    __typename: 'EvolinciteFormConfiguration';
    id: string;
    key?: string | null;
    name?: string | null;
    config?: string | null;
    meta?: string | null;
    title?: string | null;
    description?: string | null;
    observations?: string | null;
    front?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteFormAnswerSubscription = {
  __typename: 'EvolinciteFormAnswer';
  id: string;
  meta?: string | null;
  answerState?: EvolinciteSurveyAnswerState | null;
  state?: EvolinciteStates | null;
  evolinciteUserID?: string | null;
  evolinciteFormConfigurationID?: string | null;
  EvolinciteFormConfiguration?: {
    __typename: 'EvolinciteFormConfiguration';
    id: string;
    key?: string | null;
    name?: string | null;
    config?: string | null;
    meta?: string | null;
    title?: string | null;
    description?: string | null;
    observations?: string | null;
    front?: string | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolincitePaymentAutomationSubscription = {
  __typename: 'EvolincitePaymentAutomation';
  id: string;
  name?: string | null;
  setting?: string | null;
  order?: number | null;
  repeat?: boolean | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolincitePaymentAutomationSubscription = {
  __typename: 'EvolincitePaymentAutomation';
  id: string;
  name?: string | null;
  setting?: string | null;
  order?: number | null;
  repeat?: boolean | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolincitePaymentAutomationSubscription = {
  __typename: 'EvolincitePaymentAutomation';
  id: string;
  name?: string | null;
  setting?: string | null;
  order?: number | null;
  repeat?: boolean | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteMailSubscription = {
  __typename: 'EvolinciteMail';
  id: string;
  destinations?: Array<string | null> | null;
  subject?: string | null;
  content?: string | null;
  submissionStatus?: EvolinciteMailStates | null;
  setting?: string | null;
  response?: string | null;
  files?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteMailSubscription = {
  __typename: 'EvolinciteMail';
  id: string;
  destinations?: Array<string | null> | null;
  subject?: string | null;
  content?: string | null;
  submissionStatus?: EvolinciteMailStates | null;
  setting?: string | null;
  response?: string | null;
  files?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteMailSubscription = {
  __typename: 'EvolinciteMail';
  id: string;
  destinations?: Array<string | null> | null;
  subject?: string | null;
  content?: string | null;
  submissionStatus?: EvolinciteMailStates | null;
  setting?: string | null;
  response?: string | null;
  files?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteMailConfigurationSubscription = {
  __typename: 'EvolinciteMailConfiguration';
  id: string;
  SMTP?: string | null;
  email?: string | null;
  password?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteMailConfigurationSubscription = {
  __typename: 'EvolinciteMailConfiguration';
  id: string;
  SMTP?: string | null;
  email?: string | null;
  password?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteMailConfigurationSubscription = {
  __typename: 'EvolinciteMailConfiguration';
  id: string;
  SMTP?: string | null;
  email?: string | null;
  password?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteMailTemplateSubscription = {
  __typename: 'EvolinciteMailTemplate';
  id: string;
  destinations?: Array<string | null> | null;
  subject?: string | null;
  content?: string | null;
  files?: Array<string | null> | null;
  transmitter?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteMailTemplateSubscription = {
  __typename: 'EvolinciteMailTemplate';
  id: string;
  destinations?: Array<string | null> | null;
  subject?: string | null;
  content?: string | null;
  files?: Array<string | null> | null;
  transmitter?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteMailTemplateSubscription = {
  __typename: 'EvolinciteMailTemplate';
  id: string;
  destinations?: Array<string | null> | null;
  subject?: string | null;
  content?: string | null;
  files?: Array<string | null> | null;
  transmitter?: string | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteMailTemplateLogSubscription = {
  __typename: 'EvolinciteMailTemplateLog';
  id: string;
  key?: string | null;
  log?: string | null;
  date?: string | null;
  previousLog?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteMailTemplateLogSubscription = {
  __typename: 'EvolinciteMailTemplateLog';
  id: string;
  key?: string | null;
  log?: string | null;
  date?: string | null;
  previousLog?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteMailTemplateLogSubscription = {
  __typename: 'EvolinciteMailTemplateLog';
  id: string;
  key?: string | null;
  log?: string | null;
  date?: string | null;
  previousLog?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolincitePackageSubscription = {
  __typename: 'EvolincitePackage';
  id: string;
  name?: string | null;
  description?: string | null;
  goal?: string | null;
  duration?: number | null;
  state?: EvolinciteStates | null;
  EvolinciteFunctionalities?: {
    __typename: 'ModelEvolinciteFunctionalityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCompanySubscriptions?: {
    __typename: 'ModelEvolinciteCompanySubscriptionConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolincitePackageSubscription = {
  __typename: 'EvolincitePackage';
  id: string;
  name?: string | null;
  description?: string | null;
  goal?: string | null;
  duration?: number | null;
  state?: EvolinciteStates | null;
  EvolinciteFunctionalities?: {
    __typename: 'ModelEvolinciteFunctionalityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCompanySubscriptions?: {
    __typename: 'ModelEvolinciteCompanySubscriptionConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolincitePackageSubscription = {
  __typename: 'EvolincitePackage';
  id: string;
  name?: string | null;
  description?: string | null;
  goal?: string | null;
  duration?: number | null;
  state?: EvolinciteStates | null;
  EvolinciteFunctionalities?: {
    __typename: 'ModelEvolinciteFunctionalityConnection';
    nextToken?: string | null;
  } | null;
  EvolinciteCompanySubscriptions?: {
    __typename: 'ModelEvolinciteCompanySubscriptionConnection';
    nextToken?: string | null;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteCompanySubscriptionSubscription = {
  __typename: 'EvolinciteCompanySubscription';
  id: string;
  name?: string | null;
  price?: number | null;
  dateInitial?: string | null;
  dateFinal?: string | null;
  activatorUser?: string | null;
  state?: EvolinciteStates | null;
  evolincitePackageID?: string | null;
  EvolincitePackage?: {
    __typename: 'EvolincitePackage';
    id: string;
    name?: string | null;
    description?: string | null;
    goal?: string | null;
    duration?: number | null;
    state?: EvolinciteStates | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteCompanySubscriptionSubscription = {
  __typename: 'EvolinciteCompanySubscription';
  id: string;
  name?: string | null;
  price?: number | null;
  dateInitial?: string | null;
  dateFinal?: string | null;
  activatorUser?: string | null;
  state?: EvolinciteStates | null;
  evolincitePackageID?: string | null;
  EvolincitePackage?: {
    __typename: 'EvolincitePackage';
    id: string;
    name?: string | null;
    description?: string | null;
    goal?: string | null;
    duration?: number | null;
    state?: EvolinciteStates | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteCompanySubscriptionSubscription = {
  __typename: 'EvolinciteCompanySubscription';
  id: string;
  name?: string | null;
  price?: number | null;
  dateInitial?: string | null;
  dateFinal?: string | null;
  activatorUser?: string | null;
  state?: EvolinciteStates | null;
  evolincitePackageID?: string | null;
  EvolincitePackage?: {
    __typename: 'EvolincitePackage';
    id: string;
    name?: string | null;
    description?: string | null;
    goal?: string | null;
    duration?: number | null;
    state?: EvolinciteStates | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  } | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteEmployeeObservationSubscription = {
  __typename: 'EvolinciteEmployeeObservation';
  id: string;
  name?: string | null;
  content?: string | null;
  isPublic?: boolean | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteEmployeeObservationSubscription = {
  __typename: 'EvolinciteEmployeeObservation';
  id: string;
  name?: string | null;
  content?: string | null;
  isPublic?: boolean | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteEmployeeObservationSubscription = {
  __typename: 'EvolinciteEmployeeObservation';
  id: string;
  name?: string | null;
  content?: string | null;
  isPublic?: boolean | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  EvolinciteCompany?: {
    __typename: 'EvolinciteCompany';
    id: string;
    name?: string | null;
    nit?: string | null;
    picture?: string | null;
    meta?: string | null;
    state?: EvolinciteStates | null;
    evolinciteSubscriptionID?: string | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  evolinciteUserID?: string | null;
  EvolinciteUser?: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  } | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteTagSubscription = {
  __typename: 'EvolinciteTag';
  id: string;
  name?: string | null;
  description?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteTagSubscription = {
  __typename: 'EvolinciteTag';
  id: string;
  name?: string | null;
  description?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteTagSubscription = {
  __typename: 'EvolinciteTag';
  id: string;
  name?: string | null;
  description?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteMilestoneSubscription = {
  __typename: 'EvolinciteMilestone';
  name?: string | null;
  description?: string | null;
  tags?: Array<string | null> | null;
  type?: EvolunciteMilestoneType | null;
  config?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  employees?: Array<string | null> | null;
  managers?: Array<string | null> | null;
  isClosed?: boolean | null;
  closingNotes?: string | null;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
  id: string;
};

export type OnUpdateEvolinciteMilestoneSubscription = {
  __typename: 'EvolinciteMilestone';
  name?: string | null;
  description?: string | null;
  tags?: Array<string | null> | null;
  type?: EvolunciteMilestoneType | null;
  config?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  employees?: Array<string | null> | null;
  managers?: Array<string | null> | null;
  isClosed?: boolean | null;
  closingNotes?: string | null;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
  id: string;
};

export type OnDeleteEvolinciteMilestoneSubscription = {
  __typename: 'EvolinciteMilestone';
  name?: string | null;
  description?: string | null;
  tags?: Array<string | null> | null;
  type?: EvolunciteMilestoneType | null;
  config?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  employees?: Array<string | null> | null;
  managers?: Array<string | null> | null;
  isClosed?: boolean | null;
  closingNotes?: string | null;
  log?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
  id: string;
};

export type OnCreateEvolinciteUserLogSubscription = {
  __typename: 'EvolinciteUserLog';
  id: string;
  log?: string | null;
  functionality?: EvolinciteFunctionalities | null;
  state?: EvolinciteStates | null;
  key?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteUserLogSubscription = {
  __typename: 'EvolinciteUserLog';
  id: string;
  log?: string | null;
  functionality?: EvolinciteFunctionalities | null;
  state?: EvolinciteStates | null;
  key?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteUserLogSubscription = {
  __typename: 'EvolinciteUserLog';
  id: string;
  log?: string | null;
  functionality?: EvolinciteFunctionalities | null;
  state?: EvolinciteStates | null;
  key?: string | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteUserTimeTrackingSubscription = {
  __typename: 'EvolinciteUserTimeTracking';
  id: string;
  time?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteUserTimeTrackingSubscription = {
  __typename: 'EvolinciteUserTimeTracking';
  id: string;
  time?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteUserTimeTrackingSubscription = {
  __typename: 'EvolinciteUserTimeTracking';
  id: string;
  time?: number | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteScheduleSubscription = {
  __typename: 'EvolinciteSchedule';
  id: string;
  name?: string | null;
  description?: string | null;
  config?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteScheduleSubscription = {
  __typename: 'EvolinciteSchedule';
  id: string;
  name?: string | null;
  description?: string | null;
  config?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteScheduleSubscription = {
  __typename: 'EvolinciteSchedule';
  id: string;
  name?: string | null;
  description?: string | null;
  config?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteTemplateRequestSubscription = {
  __typename: 'EvolinciteTemplateRequest';
  id: string;
  name?: string | null;
  description?: string | null;
  tags?: Array<string | null> | null;
  questions?: string | null;
  elementType?: EvolunciteRequestType | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  owners?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteTemplateRequestSubscription = {
  __typename: 'EvolinciteTemplateRequest';
  id: string;
  name?: string | null;
  description?: string | null;
  tags?: Array<string | null> | null;
  questions?: string | null;
  elementType?: EvolunciteRequestType | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  owners?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteTemplateRequestSubscription = {
  __typename: 'EvolinciteTemplateRequest';
  id: string;
  name?: string | null;
  description?: string | null;
  tags?: Array<string | null> | null;
  questions?: string | null;
  elementType?: EvolunciteRequestType | null;
  documents?: Array<string | null> | null;
  meta?: string | null;
  owners?: Array<string | null> | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteRequestSubscription = {
  __typename: 'EvolinciteRequest';
  id: string;
  templateID?: string | null;
  answers?: string | null;
  requester?: string | null;
  priority?: EvolinciteRequestPriority | null;
  elementID?: Array<string | null> | null;
  elementType?: EvolunciteRequestType | null;
  status?: EvolinciteRequestStatus | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnUpdateEvolinciteRequestSubscription = {
  __typename: 'EvolinciteRequest';
  id: string;
  templateID?: string | null;
  answers?: string | null;
  requester?: string | null;
  priority?: EvolinciteRequestPriority | null;
  elementID?: Array<string | null> | null;
  elementType?: EvolunciteRequestType | null;
  status?: EvolinciteRequestStatus | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnDeleteEvolinciteRequestSubscription = {
  __typename: 'EvolinciteRequest';
  id: string;
  templateID?: string | null;
  answers?: string | null;
  requester?: string | null;
  priority?: EvolinciteRequestPriority | null;
  elementID?: Array<string | null> | null;
  elementType?: EvolunciteRequestType | null;
  status?: EvolinciteRequestStatus | null;
  meta?: string | null;
  state?: EvolinciteStates | null;
  evolinciteCompanyID?: string | null;
  evolinciteUserID?: string | null;
  createdAt?: string | null;
  updatedAt?: string | null;
};

export type OnCreateEvolinciteActivityEvolinciteUserSubscription = {
  __typename: 'EvolinciteActivityEvolinciteUser';
  id: string;
  evolinciteActivityId: string;
  evolinciteUserId: string;
  evolinciteActivity: {
    __typename: 'EvolinciteActivity';
    id: string;
    name?: string | null;
    description?: string | null;
    startDate?: string | null;
    endDate?: string | null;
    color?: string | null;
    type?: EvolinciteActivityTypes | null;
    priority?: number | null;
    meta?: string | null;
    taskState?: EvolinciteTaskStates | null;
    documents?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    createdAt: string;
    updatedAt: string;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteActivityEvolinciteUserSubscription = {
  __typename: 'EvolinciteActivityEvolinciteUser';
  id: string;
  evolinciteActivityId: string;
  evolinciteUserId: string;
  evolinciteActivity: {
    __typename: 'EvolinciteActivity';
    id: string;
    name?: string | null;
    description?: string | null;
    startDate?: string | null;
    endDate?: string | null;
    color?: string | null;
    type?: EvolinciteActivityTypes | null;
    priority?: number | null;
    meta?: string | null;
    taskState?: EvolinciteTaskStates | null;
    documents?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    createdAt: string;
    updatedAt: string;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteActivityEvolinciteUserSubscription = {
  __typename: 'EvolinciteActivityEvolinciteUser';
  id: string;
  evolinciteActivityId: string;
  evolinciteUserId: string;
  evolinciteActivity: {
    __typename: 'EvolinciteActivity';
    id: string;
    name?: string | null;
    description?: string | null;
    startDate?: string | null;
    endDate?: string | null;
    color?: string | null;
    type?: EvolinciteActivityTypes | null;
    priority?: number | null;
    meta?: string | null;
    taskState?: EvolinciteTaskStates | null;
    documents?: Array<string | null> | null;
    state?: EvolinciteStates | null;
    evolinciteUserID?: string | null;
    evolinciteCompanyID?: string | null;
    evolinciteCrmNegotiationID?: string | null;
    createdAt: string;
    updatedAt: string;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteUserEvolinciteCrmNegotiationSubscription = {
  __typename: 'EvolinciteUserEvolinciteCrmNegotiation';
  id: string;
  evolinciteCrmNegotiationId: string;
  evolinciteUserId: string;
  evolinciteCrmNegotiation: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteUserEvolinciteCrmNegotiationSubscription = {
  __typename: 'EvolinciteUserEvolinciteCrmNegotiation';
  id: string;
  evolinciteCrmNegotiationId: string;
  evolinciteUserId: string;
  evolinciteCrmNegotiation: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteUserEvolinciteCrmNegotiationSubscription = {
  __typename: 'EvolinciteUserEvolinciteCrmNegotiation';
  id: string;
  evolinciteCrmNegotiationId: string;
  evolinciteUserId: string;
  evolinciteCrmNegotiation: {
    __typename: 'EvolinciteCrmNegotiation';
    id: string;
    name?: string | null;
    value?: number | null;
    due?: number | null;
    parent?: string | null;
    date?: string | null;
    documents?: Array<string | null> | null;
    meta?: string | null;
    frozen?: boolean | null;
    valueInterest?: number | null;
    valueCollection?: number | null;
    observers?: Array<string | null> | null;
    exitDate?: string | null;
    state?: EvolinciteStates | null;
    evolinciteCompanyID?: string | null;
    evolinciteUserSellerID?: string | null;
    evolinciteUserReferrerID?: string | null;
    evolinciteUserOwnerID?: string | null;
    evolinciteCrmStateID?: string | null;
    evolinciteCustomerID?: string | null;
    evolinciteProcessTypeID?: string | null;
    initialGoalID?: string | null;
    finalGoalID?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export type OnCreateEvolinciteRoomEvolinciteUserSubscription = {
  __typename: 'EvolinciteRoomEvolinciteUser';
  id: string;
  evolinciteRoomId: string;
  evolinciteUserId: string;
  evolinciteRoom: {
    __typename: 'EvolinciteRoom';
    id: string;
    Key?: string | null;
    name?: string | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export type OnUpdateEvolinciteRoomEvolinciteUserSubscription = {
  __typename: 'EvolinciteRoomEvolinciteUser';
  id: string;
  evolinciteRoomId: string;
  evolinciteUserId: string;
  evolinciteRoom: {
    __typename: 'EvolinciteRoom';
    id: string;
    Key?: string | null;
    name?: string | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export type OnDeleteEvolinciteRoomEvolinciteUserSubscription = {
  __typename: 'EvolinciteRoomEvolinciteUser';
  id: string;
  evolinciteRoomId: string;
  evolinciteUserId: string;
  evolinciteRoom: {
    __typename: 'EvolinciteRoom';
    id: string;
    Key?: string | null;
    name?: string | null;
    state?: EvolinciteStates | null;
    meta?: string | null;
    evolinciteCompanyID?: string | null;
    createdAt: string;
    updatedAt: string;
  };
  evolinciteUser: {
    __typename: 'EvolinciteUser';
    id: string;
    name?: string | null;
    nit?: string | null;
    phone?: string | null;
    picture?: string | null;
    email?: string | null;
    sub?: string | null;
    meta?: string | null;
    cv?: string | null;
    contract?: string | null;
    memos?: Array<string | null> | null;
    personalMail?: string | null;
    personalPhone?: string | null;
    state?: EvolinciteStates | null;
    createdAt: string;
    updatedAt: string;
  };
  createdAt: string;
  updatedAt: string;
};

export class APIService {
  public client: Client;
  constructor() {
    this.client = generateClient();
  }
  async CreateEvolinciteCompetence(
    input: CreateEvolinciteCompetenceInput,
    condition?: ModelEvolinciteCompetenceConditionInput
  ): Promise<CreateEvolinciteCompetenceMutation> {
    const statement = `mutation CreateEvolinciteCompetence($input: CreateEvolinciteCompetenceInput!, $condition: ModelEvolinciteCompetenceConditionInput) {
        createEvolinciteCompetence(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          content
          application
          state
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteCompetenceEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteCompetenceMutation>(
      response.data.createEvolinciteCompetence
    );
  }
  async UpdateEvolinciteCompetence(
    input: UpdateEvolinciteCompetenceInput,
    condition?: ModelEvolinciteCompetenceConditionInput
  ): Promise<UpdateEvolinciteCompetenceMutation> {
    const statement = `mutation UpdateEvolinciteCompetence($input: UpdateEvolinciteCompetenceInput!, $condition: ModelEvolinciteCompetenceConditionInput) {
        updateEvolinciteCompetence(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          content
          application
          state
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteCompetenceEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteCompetenceMutation>(
      response.data.updateEvolinciteCompetence
    );
  }
  async DeleteEvolinciteCompetence(
    input: DeleteEvolinciteCompetenceInput,
    condition?: ModelEvolinciteCompetenceConditionInput
  ): Promise<DeleteEvolinciteCompetenceMutation> {
    const statement = `mutation DeleteEvolinciteCompetence($input: DeleteEvolinciteCompetenceInput!, $condition: ModelEvolinciteCompetenceConditionInput) {
        deleteEvolinciteCompetence(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          content
          application
          state
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteCompetenceEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteCompetenceMutation>(
      response.data.deleteEvolinciteCompetence
    );
  }
  async CreateEvolinciteCourse(
    input: CreateEvolinciteCourseInput,
    condition?: ModelEvolinciteCourseConditionInput
  ): Promise<CreateEvolinciteCourseMutation> {
    const statement = `mutation CreateEvolinciteCourse($input: CreateEvolinciteCourseInput!, $condition: ModelEvolinciteCourseConditionInput) {
        createEvolinciteCourse(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          durationUnit
          duration
          objectives
          application
          state
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteCourseEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteCourseMutation>response.data.createEvolinciteCourse;
  }
  async UpdateEvolinciteCourse(
    input: UpdateEvolinciteCourseInput,
    condition?: ModelEvolinciteCourseConditionInput
  ): Promise<UpdateEvolinciteCourseMutation> {
    const statement = `mutation UpdateEvolinciteCourse($input: UpdateEvolinciteCourseInput!, $condition: ModelEvolinciteCourseConditionInput) {
        updateEvolinciteCourse(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          durationUnit
          duration
          objectives
          application
          state
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteCourseEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteCourseMutation>response.data.updateEvolinciteCourse;
  }
  async DeleteEvolinciteCourse(
    input: DeleteEvolinciteCourseInput,
    condition?: ModelEvolinciteCourseConditionInput
  ): Promise<DeleteEvolinciteCourseMutation> {
    const statement = `mutation DeleteEvolinciteCourse($input: DeleteEvolinciteCourseInput!, $condition: ModelEvolinciteCourseConditionInput) {
        deleteEvolinciteCourse(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          durationUnit
          duration
          objectives
          application
          state
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteCourseEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteCourseMutation>response.data.deleteEvolinciteCourse;
  }
  async CreateEvolinciteSyllabus(
    input: CreateEvolinciteSyllabusInput,
    condition?: ModelEvolinciteSyllabusConditionInput
  ): Promise<CreateEvolinciteSyllabusMutation> {
    const statement = `mutation CreateEvolinciteSyllabus($input: CreateEvolinciteSyllabusInput!, $condition: ModelEvolinciteSyllabusConditionInput) {
        createEvolinciteSyllabus(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          content
          application
          state
          EvolinciteCompetence {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteCompetenceEvolinciteSyllabusId
          }
          createdAt
          updatedAt
          evolinciteSyllabusEvolinciteCompetenceId
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteSyllabusMutation>(
      response.data.createEvolinciteSyllabus
    );
  }
  async UpdateEvolinciteSyllabus(
    input: UpdateEvolinciteSyllabusInput,
    condition?: ModelEvolinciteSyllabusConditionInput
  ): Promise<UpdateEvolinciteSyllabusMutation> {
    const statement = `mutation UpdateEvolinciteSyllabus($input: UpdateEvolinciteSyllabusInput!, $condition: ModelEvolinciteSyllabusConditionInput) {
        updateEvolinciteSyllabus(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          content
          application
          state
          EvolinciteCompetence {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteCompetenceEvolinciteSyllabusId
          }
          createdAt
          updatedAt
          evolinciteSyllabusEvolinciteCompetenceId
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteSyllabusMutation>(
      response.data.updateEvolinciteSyllabus
    );
  }
  async DeleteEvolinciteSyllabus(
    input: DeleteEvolinciteSyllabusInput,
    condition?: ModelEvolinciteSyllabusConditionInput
  ): Promise<DeleteEvolinciteSyllabusMutation> {
    const statement = `mutation DeleteEvolinciteSyllabus($input: DeleteEvolinciteSyllabusInput!, $condition: ModelEvolinciteSyllabusConditionInput) {
        deleteEvolinciteSyllabus(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          content
          application
          state
          EvolinciteCompetence {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteCompetenceEvolinciteSyllabusId
          }
          createdAt
          updatedAt
          evolinciteSyllabusEvolinciteCompetenceId
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteSyllabusMutation>(
      response.data.deleteEvolinciteSyllabus
    );
  }
  async CreateEvolinciteUserAnswers(
    input: CreateEvolinciteUserAnswersInput,
    condition?: ModelEvolinciteUserAnswersConditionInput
  ): Promise<CreateEvolinciteUserAnswersMutation> {
    const statement = `mutation CreateEvolinciteUserAnswers($input: CreateEvolinciteUserAnswersInput!, $condition: ModelEvolinciteUserAnswersConditionInput) {
        createEvolinciteUserAnswers(input: $input, condition: $condition) {
          __typename
          id
          answers
          application
          state
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteUserAnswersEvolinciteUserId
          evolinciteUserAnswersEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteUserAnswersMutation>(
      response.data.createEvolinciteUserAnswers
    );
  }
  async UpdateEvolinciteUserAnswers(
    input: UpdateEvolinciteUserAnswersInput,
    condition?: ModelEvolinciteUserAnswersConditionInput
  ): Promise<UpdateEvolinciteUserAnswersMutation> {
    const statement = `mutation UpdateEvolinciteUserAnswers($input: UpdateEvolinciteUserAnswersInput!, $condition: ModelEvolinciteUserAnswersConditionInput) {
        updateEvolinciteUserAnswers(input: $input, condition: $condition) {
          __typename
          id
          answers
          application
          state
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteUserAnswersEvolinciteUserId
          evolinciteUserAnswersEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteUserAnswersMutation>(
      response.data.updateEvolinciteUserAnswers
    );
  }
  async DeleteEvolinciteUserAnswers(
    input: DeleteEvolinciteUserAnswersInput,
    condition?: ModelEvolinciteUserAnswersConditionInput
  ): Promise<DeleteEvolinciteUserAnswersMutation> {
    const statement = `mutation DeleteEvolinciteUserAnswers($input: DeleteEvolinciteUserAnswersInput!, $condition: ModelEvolinciteUserAnswersConditionInput) {
        deleteEvolinciteUserAnswers(input: $input, condition: $condition) {
          __typename
          id
          answers
          application
          state
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteUserAnswersEvolinciteUserId
          evolinciteUserAnswersEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteUserAnswersMutation>(
      response.data.deleteEvolinciteUserAnswers
    );
  }
  async CreateEvolinciteProcessType(
    input: CreateEvolinciteProcessTypeInput,
    condition?: ModelEvolinciteProcessTypeConditionInput
  ): Promise<CreateEvolinciteProcessTypeMutation> {
    const statement = `mutation CreateEvolinciteProcessType($input: CreateEvolinciteProcessTypeInput!, $condition: ModelEvolinciteProcessTypeConditionInput) {
        createEvolinciteProcessType(input: $input, condition: $condition) {
          __typename
          id
          name
          order
          sellerCommission
          referrerCommission
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteProcessTypeMutation>(
      response.data.createEvolinciteProcessType
    );
  }
  async UpdateEvolinciteProcessType(
    input: UpdateEvolinciteProcessTypeInput,
    condition?: ModelEvolinciteProcessTypeConditionInput
  ): Promise<UpdateEvolinciteProcessTypeMutation> {
    const statement = `mutation UpdateEvolinciteProcessType($input: UpdateEvolinciteProcessTypeInput!, $condition: ModelEvolinciteProcessTypeConditionInput) {
        updateEvolinciteProcessType(input: $input, condition: $condition) {
          __typename
          id
          name
          order
          sellerCommission
          referrerCommission
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteProcessTypeMutation>(
      response.data.updateEvolinciteProcessType
    );
  }
  async DeleteEvolinciteProcessType(
    input: DeleteEvolinciteProcessTypeInput,
    condition?: ModelEvolinciteProcessTypeConditionInput
  ): Promise<DeleteEvolinciteProcessTypeMutation> {
    const statement = `mutation DeleteEvolinciteProcessType($input: DeleteEvolinciteProcessTypeInput!, $condition: ModelEvolinciteProcessTypeConditionInput) {
        deleteEvolinciteProcessType(input: $input, condition: $condition) {
          __typename
          id
          name
          order
          sellerCommission
          referrerCommission
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteProcessTypeMutation>(
      response.data.deleteEvolinciteProcessType
    );
  }
  async CreateEvolinciteExpenseType(
    input: CreateEvolinciteExpenseTypeInput,
    condition?: ModelEvolinciteExpenseTypeConditionInput
  ): Promise<CreateEvolinciteExpenseTypeMutation> {
    const statement = `mutation CreateEvolinciteExpenseType($input: CreateEvolinciteExpenseTypeInput!, $condition: ModelEvolinciteExpenseTypeConditionInput) {
        createEvolinciteExpenseType(input: $input, condition: $condition) {
          __typename
          id
          name
          type
          setting
          state
          EvolinciteExpenses {
            __typename
            nextToken
          }
          evolinciteCompanyID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteExpenseTypeMutation>(
      response.data.createEvolinciteExpenseType
    );
  }
  async UpdateEvolinciteExpenseType(
    input: UpdateEvolinciteExpenseTypeInput,
    condition?: ModelEvolinciteExpenseTypeConditionInput
  ): Promise<UpdateEvolinciteExpenseTypeMutation> {
    const statement = `mutation UpdateEvolinciteExpenseType($input: UpdateEvolinciteExpenseTypeInput!, $condition: ModelEvolinciteExpenseTypeConditionInput) {
        updateEvolinciteExpenseType(input: $input, condition: $condition) {
          __typename
          id
          name
          type
          setting
          state
          EvolinciteExpenses {
            __typename
            nextToken
          }
          evolinciteCompanyID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteExpenseTypeMutation>(
      response.data.updateEvolinciteExpenseType
    );
  }
  async DeleteEvolinciteExpenseType(
    input: DeleteEvolinciteExpenseTypeInput,
    condition?: ModelEvolinciteExpenseTypeConditionInput
  ): Promise<DeleteEvolinciteExpenseTypeMutation> {
    const statement = `mutation DeleteEvolinciteExpenseType($input: DeleteEvolinciteExpenseTypeInput!, $condition: ModelEvolinciteExpenseTypeConditionInput) {
        deleteEvolinciteExpenseType(input: $input, condition: $condition) {
          __typename
          id
          name
          type
          setting
          state
          EvolinciteExpenses {
            __typename
            nextToken
          }
          evolinciteCompanyID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteExpenseTypeMutation>(
      response.data.deleteEvolinciteExpenseType
    );
  }
  async CreateEvolinciteExpense(
    input: CreateEvolinciteExpenseInput,
    condition?: ModelEvolinciteExpenseConditionInput
  ): Promise<CreateEvolinciteExpenseMutation> {
    const statement = `mutation CreateEvolinciteExpense($input: CreateEvolinciteExpenseInput!, $condition: ModelEvolinciteExpenseConditionInput) {
        createEvolinciteExpense(input: $input, condition: $condition) {
          __typename
          id
          amount
          process
          expenseState
          expenseDate
          observations
          voucher
          transactionType
          reference
          state
          evolinciteExpenseTypeID
          EvolinciteExpenseType {
            __typename
            id
            name
            type
            setting
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserResponsibleID
          EvolinciteUserResponsible {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteExpenseMutation>(
      response.data.createEvolinciteExpense
    );
  }
  async UpdateEvolinciteExpense(
    input: UpdateEvolinciteExpenseInput,
    condition?: ModelEvolinciteExpenseConditionInput
  ): Promise<UpdateEvolinciteExpenseMutation> {
    const statement = `mutation UpdateEvolinciteExpense($input: UpdateEvolinciteExpenseInput!, $condition: ModelEvolinciteExpenseConditionInput) {
        updateEvolinciteExpense(input: $input, condition: $condition) {
          __typename
          id
          amount
          process
          expenseState
          expenseDate
          observations
          voucher
          transactionType
          reference
          state
          evolinciteExpenseTypeID
          EvolinciteExpenseType {
            __typename
            id
            name
            type
            setting
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserResponsibleID
          EvolinciteUserResponsible {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteExpenseMutation>(
      response.data.updateEvolinciteExpense
    );
  }
  async DeleteEvolinciteExpense(
    input: DeleteEvolinciteExpenseInput,
    condition?: ModelEvolinciteExpenseConditionInput
  ): Promise<DeleteEvolinciteExpenseMutation> {
    const statement = `mutation DeleteEvolinciteExpense($input: DeleteEvolinciteExpenseInput!, $condition: ModelEvolinciteExpenseConditionInput) {
        deleteEvolinciteExpense(input: $input, condition: $condition) {
          __typename
          id
          amount
          process
          expenseState
          expenseDate
          observations
          voucher
          transactionType
          reference
          state
          evolinciteExpenseTypeID
          EvolinciteExpenseType {
            __typename
            id
            name
            type
            setting
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserResponsibleID
          EvolinciteUserResponsible {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteExpenseMutation>(
      response.data.deleteEvolinciteExpense
    );
  }
  async CreateEvolinciteUserEvolinciteJobTitle(
    input: CreateEvolinciteUserEvolinciteJobTitleInput,
    condition?: ModelEvolinciteUserEvolinciteJobTitleConditionInput
  ): Promise<CreateEvolinciteUserEvolinciteJobTitleMutation> {
    const statement = `mutation CreateEvolinciteUserEvolinciteJobTitle($input: CreateEvolinciteUserEvolinciteJobTitleInput!, $condition: ModelEvolinciteUserEvolinciteJobTitleConditionInput) {
        createEvolinciteUserEvolinciteJobTitle(input: $input, condition: $condition) {
          __typename
          id
          state
          evolinciteJobTitleID
          EvolinciteJobTitle {
            __typename
            id
            name
            salary
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteUserEvolinciteJobTitleMutation>(
      response.data.createEvolinciteUserEvolinciteJobTitle
    );
  }
  async UpdateEvolinciteUserEvolinciteJobTitle(
    input: UpdateEvolinciteUserEvolinciteJobTitleInput,
    condition?: ModelEvolinciteUserEvolinciteJobTitleConditionInput
  ): Promise<UpdateEvolinciteUserEvolinciteJobTitleMutation> {
    const statement = `mutation UpdateEvolinciteUserEvolinciteJobTitle($input: UpdateEvolinciteUserEvolinciteJobTitleInput!, $condition: ModelEvolinciteUserEvolinciteJobTitleConditionInput) {
        updateEvolinciteUserEvolinciteJobTitle(input: $input, condition: $condition) {
          __typename
          id
          state
          evolinciteJobTitleID
          EvolinciteJobTitle {
            __typename
            id
            name
            salary
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteUserEvolinciteJobTitleMutation>(
      response.data.updateEvolinciteUserEvolinciteJobTitle
    );
  }
  async DeleteEvolinciteUserEvolinciteJobTitle(
    input: DeleteEvolinciteUserEvolinciteJobTitleInput,
    condition?: ModelEvolinciteUserEvolinciteJobTitleConditionInput
  ): Promise<DeleteEvolinciteUserEvolinciteJobTitleMutation> {
    const statement = `mutation DeleteEvolinciteUserEvolinciteJobTitle($input: DeleteEvolinciteUserEvolinciteJobTitleInput!, $condition: ModelEvolinciteUserEvolinciteJobTitleConditionInput) {
        deleteEvolinciteUserEvolinciteJobTitle(input: $input, condition: $condition) {
          __typename
          id
          state
          evolinciteJobTitleID
          EvolinciteJobTitle {
            __typename
            id
            name
            salary
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteUserEvolinciteJobTitleMutation>(
      response.data.deleteEvolinciteUserEvolinciteJobTitle
    );
  }
  async CreateEvolinciteJobTitle(
    input: CreateEvolinciteJobTitleInput,
    condition?: ModelEvolinciteJobTitleConditionInput
  ): Promise<CreateEvolinciteJobTitleMutation> {
    const statement = `mutation CreateEvolinciteJobTitle($input: CreateEvolinciteJobTitleInput!, $condition: ModelEvolinciteJobTitleConditionInput) {
        createEvolinciteJobTitle(input: $input, condition: $condition) {
          __typename
          id
          name
          salary
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteJobTitleMutation>(
      response.data.createEvolinciteJobTitle
    );
  }
  async UpdateEvolinciteJobTitle(
    input: UpdateEvolinciteJobTitleInput,
    condition?: ModelEvolinciteJobTitleConditionInput
  ): Promise<UpdateEvolinciteJobTitleMutation> {
    const statement = `mutation UpdateEvolinciteJobTitle($input: UpdateEvolinciteJobTitleInput!, $condition: ModelEvolinciteJobTitleConditionInput) {
        updateEvolinciteJobTitle(input: $input, condition: $condition) {
          __typename
          id
          name
          salary
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteJobTitleMutation>(
      response.data.updateEvolinciteJobTitle
    );
  }
  async DeleteEvolinciteJobTitle(
    input: DeleteEvolinciteJobTitleInput,
    condition?: ModelEvolinciteJobTitleConditionInput
  ): Promise<DeleteEvolinciteJobTitleMutation> {
    const statement = `mutation DeleteEvolinciteJobTitle($input: DeleteEvolinciteJobTitleInput!, $condition: ModelEvolinciteJobTitleConditionInput) {
        deleteEvolinciteJobTitle(input: $input, condition: $condition) {
          __typename
          id
          name
          salary
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteJobTitleMutation>(
      response.data.deleteEvolinciteJobTitle
    );
  }
  async CreateEvolinciteWalletPayment(
    input: CreateEvolinciteWalletPaymentInput,
    condition?: ModelEvolinciteWalletPaymentConditionInput
  ): Promise<CreateEvolinciteWalletPaymentMutation> {
    const statement = `mutation CreateEvolinciteWalletPayment($input: CreateEvolinciteWalletPaymentInput!, $condition: ModelEvolinciteWalletPaymentConditionInput) {
        createEvolinciteWalletPayment(input: $input, condition: $condition) {
          __typename
          id
          amount
          scheduledDate
          datePayment
          paymentStatus
          prePayment
          postPayment
          observations
          voucher
          transactionType
          reference
          amountInterest
          amountCollection
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserReferrerID
          EvolinciteUserReferrer {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserSellerID
          EvolinciteUserSeller {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteCustomerID
          EvolinciteCustomer {
            __typename
            id
            name
            lastName
            documentType
            documentNumber
            phone
            optionalPhone
            email
            picture
            birthDate
            municipality
            documents
            address
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          evolinciteUserResponsibleID
          EvolinciteUserResponsible {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteWalletPaymentMutation>(
      response.data.createEvolinciteWalletPayment
    );
  }
  async UpdateEvolinciteWalletPayment(
    input: UpdateEvolinciteWalletPaymentInput,
    condition?: ModelEvolinciteWalletPaymentConditionInput
  ): Promise<UpdateEvolinciteWalletPaymentMutation> {
    const statement = `mutation UpdateEvolinciteWalletPayment($input: UpdateEvolinciteWalletPaymentInput!, $condition: ModelEvolinciteWalletPaymentConditionInput) {
        updateEvolinciteWalletPayment(input: $input, condition: $condition) {
          __typename
          id
          amount
          scheduledDate
          datePayment
          paymentStatus
          prePayment
          postPayment
          observations
          voucher
          transactionType
          reference
          amountInterest
          amountCollection
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserReferrerID
          EvolinciteUserReferrer {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserSellerID
          EvolinciteUserSeller {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteCustomerID
          EvolinciteCustomer {
            __typename
            id
            name
            lastName
            documentType
            documentNumber
            phone
            optionalPhone
            email
            picture
            birthDate
            municipality
            documents
            address
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          evolinciteUserResponsibleID
          EvolinciteUserResponsible {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteWalletPaymentMutation>(
      response.data.updateEvolinciteWalletPayment
    );
  }
  async DeleteEvolinciteWalletPayment(
    input: DeleteEvolinciteWalletPaymentInput,
    condition?: ModelEvolinciteWalletPaymentConditionInput
  ): Promise<DeleteEvolinciteWalletPaymentMutation> {
    const statement = `mutation DeleteEvolinciteWalletPayment($input: DeleteEvolinciteWalletPaymentInput!, $condition: ModelEvolinciteWalletPaymentConditionInput) {
        deleteEvolinciteWalletPayment(input: $input, condition: $condition) {
          __typename
          id
          amount
          scheduledDate
          datePayment
          paymentStatus
          prePayment
          postPayment
          observations
          voucher
          transactionType
          reference
          amountInterest
          amountCollection
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserReferrerID
          EvolinciteUserReferrer {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserSellerID
          EvolinciteUserSeller {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteCustomerID
          EvolinciteCustomer {
            __typename
            id
            name
            lastName
            documentType
            documentNumber
            phone
            optionalPhone
            email
            picture
            birthDate
            municipality
            documents
            address
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          evolinciteUserResponsibleID
          EvolinciteUserResponsible {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteWalletPaymentMutation>(
      response.data.deleteEvolinciteWalletPayment
    );
  }
  async CreateEvolinciteCrmNegotiationField(
    input: CreateEvolinciteCrmNegotiationFieldInput,
    condition?: ModelEvolinciteCrmNegotiationFieldConditionInput
  ): Promise<CreateEvolinciteCrmNegotiationFieldMutation> {
    const statement = `mutation CreateEvolinciteCrmNegotiationField($input: CreateEvolinciteCrmNegotiationFieldInput!, $condition: ModelEvolinciteCrmNegotiationFieldConditionInput) {
        createEvolinciteCrmNegotiationField(input: $input, condition: $condition) {
          __typename
          id
          field
          type
          required
          order
          state
          meta
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFieldValues {
            __typename
            nextToken
          }
          evolinciteCrmNegotiationSectionID
          EvolinciteCrmNegotiationSection {
            __typename
            id
            name
            order
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteCrmNegotiationFieldMutation>(
      response.data.createEvolinciteCrmNegotiationField
    );
  }
  async UpdateEvolinciteCrmNegotiationField(
    input: UpdateEvolinciteCrmNegotiationFieldInput,
    condition?: ModelEvolinciteCrmNegotiationFieldConditionInput
  ): Promise<UpdateEvolinciteCrmNegotiationFieldMutation> {
    const statement = `mutation UpdateEvolinciteCrmNegotiationField($input: UpdateEvolinciteCrmNegotiationFieldInput!, $condition: ModelEvolinciteCrmNegotiationFieldConditionInput) {
        updateEvolinciteCrmNegotiationField(input: $input, condition: $condition) {
          __typename
          id
          field
          type
          required
          order
          state
          meta
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFieldValues {
            __typename
            nextToken
          }
          evolinciteCrmNegotiationSectionID
          EvolinciteCrmNegotiationSection {
            __typename
            id
            name
            order
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteCrmNegotiationFieldMutation>(
      response.data.updateEvolinciteCrmNegotiationField
    );
  }
  async DeleteEvolinciteCrmNegotiationField(
    input: DeleteEvolinciteCrmNegotiationFieldInput,
    condition?: ModelEvolinciteCrmNegotiationFieldConditionInput
  ): Promise<DeleteEvolinciteCrmNegotiationFieldMutation> {
    const statement = `mutation DeleteEvolinciteCrmNegotiationField($input: DeleteEvolinciteCrmNegotiationFieldInput!, $condition: ModelEvolinciteCrmNegotiationFieldConditionInput) {
        deleteEvolinciteCrmNegotiationField(input: $input, condition: $condition) {
          __typename
          id
          field
          type
          required
          order
          state
          meta
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFieldValues {
            __typename
            nextToken
          }
          evolinciteCrmNegotiationSectionID
          EvolinciteCrmNegotiationSection {
            __typename
            id
            name
            order
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteCrmNegotiationFieldMutation>(
      response.data.deleteEvolinciteCrmNegotiationField
    );
  }
  async CreateEvolinciteCrmNegotiationSection(
    input: CreateEvolinciteCrmNegotiationSectionInput,
    condition?: ModelEvolinciteCrmNegotiationSectionConditionInput
  ): Promise<CreateEvolinciteCrmNegotiationSectionMutation> {
    const statement = `mutation CreateEvolinciteCrmNegotiationSection($input: CreateEvolinciteCrmNegotiationSectionInput!, $condition: ModelEvolinciteCrmNegotiationSectionConditionInput) {
        createEvolinciteCrmNegotiationSection(input: $input, condition: $condition) {
          __typename
          id
          name
          order
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFields {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteCrmNegotiationSectionMutation>(
      response.data.createEvolinciteCrmNegotiationSection
    );
  }
  async UpdateEvolinciteCrmNegotiationSection(
    input: UpdateEvolinciteCrmNegotiationSectionInput,
    condition?: ModelEvolinciteCrmNegotiationSectionConditionInput
  ): Promise<UpdateEvolinciteCrmNegotiationSectionMutation> {
    const statement = `mutation UpdateEvolinciteCrmNegotiationSection($input: UpdateEvolinciteCrmNegotiationSectionInput!, $condition: ModelEvolinciteCrmNegotiationSectionConditionInput) {
        updateEvolinciteCrmNegotiationSection(input: $input, condition: $condition) {
          __typename
          id
          name
          order
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFields {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteCrmNegotiationSectionMutation>(
      response.data.updateEvolinciteCrmNegotiationSection
    );
  }
  async DeleteEvolinciteCrmNegotiationSection(
    input: DeleteEvolinciteCrmNegotiationSectionInput,
    condition?: ModelEvolinciteCrmNegotiationSectionConditionInput
  ): Promise<DeleteEvolinciteCrmNegotiationSectionMutation> {
    const statement = `mutation DeleteEvolinciteCrmNegotiationSection($input: DeleteEvolinciteCrmNegotiationSectionInput!, $condition: ModelEvolinciteCrmNegotiationSectionConditionInput) {
        deleteEvolinciteCrmNegotiationSection(input: $input, condition: $condition) {
          __typename
          id
          name
          order
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFields {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteCrmNegotiationSectionMutation>(
      response.data.deleteEvolinciteCrmNegotiationSection
    );
  }
  async CreateEvolinciteCrmAutomation(
    input: CreateEvolinciteCrmAutomationInput,
    condition?: ModelEvolinciteCrmAutomationConditionInput
  ): Promise<CreateEvolinciteCrmAutomationMutation> {
    const statement = `mutation CreateEvolinciteCrmAutomation($input: CreateEvolinciteCrmAutomationInput!, $condition: ModelEvolinciteCrmAutomationConditionInput) {
        createEvolinciteCrmAutomation(input: $input, condition: $condition) {
          __typename
          id
          name
          rule
          setting
          order
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteCrmStateID
          EvolinciteCrmState {
            __typename
            id
            name
            description
            publicDescription
            color
            order
            state
            evolinciteCompanyID
            evolinciteCrmPipelineID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteCrmAutomationMutation>(
      response.data.createEvolinciteCrmAutomation
    );
  }
  async UpdateEvolinciteCrmAutomation(
    input: UpdateEvolinciteCrmAutomationInput,
    condition?: ModelEvolinciteCrmAutomationConditionInput
  ): Promise<UpdateEvolinciteCrmAutomationMutation> {
    const statement = `mutation UpdateEvolinciteCrmAutomation($input: UpdateEvolinciteCrmAutomationInput!, $condition: ModelEvolinciteCrmAutomationConditionInput) {
        updateEvolinciteCrmAutomation(input: $input, condition: $condition) {
          __typename
          id
          name
          rule
          setting
          order
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteCrmStateID
          EvolinciteCrmState {
            __typename
            id
            name
            description
            publicDescription
            color
            order
            state
            evolinciteCompanyID
            evolinciteCrmPipelineID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteCrmAutomationMutation>(
      response.data.updateEvolinciteCrmAutomation
    );
  }
  async DeleteEvolinciteCrmAutomation(
    input: DeleteEvolinciteCrmAutomationInput,
    condition?: ModelEvolinciteCrmAutomationConditionInput
  ): Promise<DeleteEvolinciteCrmAutomationMutation> {
    const statement = `mutation DeleteEvolinciteCrmAutomation($input: DeleteEvolinciteCrmAutomationInput!, $condition: ModelEvolinciteCrmAutomationConditionInput) {
        deleteEvolinciteCrmAutomation(input: $input, condition: $condition) {
          __typename
          id
          name
          rule
          setting
          order
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteCrmStateID
          EvolinciteCrmState {
            __typename
            id
            name
            description
            publicDescription
            color
            order
            state
            evolinciteCompanyID
            evolinciteCrmPipelineID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteCrmAutomationMutation>(
      response.data.deleteEvolinciteCrmAutomation
    );
  }
  async CreateEvolinciteComment(
    input: CreateEvolinciteCommentInput,
    condition?: ModelEvolinciteCommentConditionInput
  ): Promise<CreateEvolinciteCommentMutation> {
    const statement = `mutation CreateEvolinciteComment($input: CreateEvolinciteCommentInput!, $condition: ModelEvolinciteCommentConditionInput) {
        createEvolinciteComment(input: $input, condition: $condition) {
          __typename
          id
          files
          content
          pinned
          state
          evolinciteUserID
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteCommentMutation>(
      response.data.createEvolinciteComment
    );
  }
  async UpdateEvolinciteComment(
    input: UpdateEvolinciteCommentInput,
    condition?: ModelEvolinciteCommentConditionInput
  ): Promise<UpdateEvolinciteCommentMutation> {
    const statement = `mutation UpdateEvolinciteComment($input: UpdateEvolinciteCommentInput!, $condition: ModelEvolinciteCommentConditionInput) {
        updateEvolinciteComment(input: $input, condition: $condition) {
          __typename
          id
          files
          content
          pinned
          state
          evolinciteUserID
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteCommentMutation>(
      response.data.updateEvolinciteComment
    );
  }
  async DeleteEvolinciteComment(
    input: DeleteEvolinciteCommentInput,
    condition?: ModelEvolinciteCommentConditionInput
  ): Promise<DeleteEvolinciteCommentMutation> {
    const statement = `mutation DeleteEvolinciteComment($input: DeleteEvolinciteCommentInput!, $condition: ModelEvolinciteCommentConditionInput) {
        deleteEvolinciteComment(input: $input, condition: $condition) {
          __typename
          id
          files
          content
          pinned
          state
          evolinciteUserID
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteCommentMutation>(
      response.data.deleteEvolinciteComment
    );
  }
  async CreateEvolinciteActivity(
    input: CreateEvolinciteActivityInput,
    condition?: ModelEvolinciteActivityConditionInput
  ): Promise<CreateEvolinciteActivityMutation> {
    const statement = `mutation CreateEvolinciteActivity($input: CreateEvolinciteActivityInput!, $condition: ModelEvolinciteActivityConditionInput) {
        createEvolinciteActivity(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          startDate
          endDate
          color
          type
          priority
          meta
          taskState
          documents
          state
          evolinciteUserID
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          Participants {
            __typename
            nextToken
          }
          evolinciteCompanyID
          evolinciteCrmNegotiationID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteActivityMutation>(
      response.data.createEvolinciteActivity
    );
  }
  async UpdateEvolinciteActivity(
    input: UpdateEvolinciteActivityInput,
    condition?: ModelEvolinciteActivityConditionInput
  ): Promise<UpdateEvolinciteActivityMutation> {
    const statement = `mutation UpdateEvolinciteActivity($input: UpdateEvolinciteActivityInput!, $condition: ModelEvolinciteActivityConditionInput) {
        updateEvolinciteActivity(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          startDate
          endDate
          color
          type
          priority
          meta
          taskState
          documents
          state
          evolinciteUserID
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          Participants {
            __typename
            nextToken
          }
          evolinciteCompanyID
          evolinciteCrmNegotiationID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteActivityMutation>(
      response.data.updateEvolinciteActivity
    );
  }
  async DeleteEvolinciteActivity(
    input: DeleteEvolinciteActivityInput,
    condition?: ModelEvolinciteActivityConditionInput
  ): Promise<DeleteEvolinciteActivityMutation> {
    const statement = `mutation DeleteEvolinciteActivity($input: DeleteEvolinciteActivityInput!, $condition: ModelEvolinciteActivityConditionInput) {
        deleteEvolinciteActivity(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          startDate
          endDate
          color
          type
          priority
          meta
          taskState
          documents
          state
          evolinciteUserID
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          Participants {
            __typename
            nextToken
          }
          evolinciteCompanyID
          evolinciteCrmNegotiationID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteActivityMutation>(
      response.data.deleteEvolinciteActivity
    );
  }
  async CreateEvolincitePermissions(
    input: CreateEvolincitePermissionsInput,
    condition?: ModelEvolincitePermissionsConditionInput
  ): Promise<CreateEvolincitePermissionsMutation> {
    const statement = `mutation CreateEvolincitePermissions($input: CreateEvolincitePermissionsInput!, $condition: ModelEvolincitePermissionsConditionInput) {
        createEvolincitePermissions(input: $input, condition: $condition) {
          __typename
          id
          state
          evolinciteCompanyID
          evolinciteUserID
          evolinciteDepartmentID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteDepartment {
            __typename
            id
            name
            parent
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteRolID
          EvolinciteRol {
            __typename
            id
            name
            permissions
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolincitePermissionsMutation>(
      response.data.createEvolincitePermissions
    );
  }
  async UpdateEvolincitePermissions(
    input: UpdateEvolincitePermissionsInput,
    condition?: ModelEvolincitePermissionsConditionInput
  ): Promise<UpdateEvolincitePermissionsMutation> {
    const statement = `mutation UpdateEvolincitePermissions($input: UpdateEvolincitePermissionsInput!, $condition: ModelEvolincitePermissionsConditionInput) {
        updateEvolincitePermissions(input: $input, condition: $condition) {
          __typename
          id
          state
          evolinciteCompanyID
          evolinciteUserID
          evolinciteDepartmentID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteDepartment {
            __typename
            id
            name
            parent
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteRolID
          EvolinciteRol {
            __typename
            id
            name
            permissions
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolincitePermissionsMutation>(
      response.data.updateEvolincitePermissions
    );
  }
  async DeleteEvolincitePermissions(
    input: DeleteEvolincitePermissionsInput,
    condition?: ModelEvolincitePermissionsConditionInput
  ): Promise<DeleteEvolincitePermissionsMutation> {
    const statement = `mutation DeleteEvolincitePermissions($input: DeleteEvolincitePermissionsInput!, $condition: ModelEvolincitePermissionsConditionInput) {
        deleteEvolincitePermissions(input: $input, condition: $condition) {
          __typename
          id
          state
          evolinciteCompanyID
          evolinciteUserID
          evolinciteDepartmentID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteDepartment {
            __typename
            id
            name
            parent
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteRolID
          EvolinciteRol {
            __typename
            id
            name
            permissions
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolincitePermissionsMutation>(
      response.data.deleteEvolincitePermissions
    );
  }
  async CreateEvolinciteDepartment(
    input: CreateEvolinciteDepartmentInput,
    condition?: ModelEvolinciteDepartmentConditionInput
  ): Promise<CreateEvolinciteDepartmentMutation> {
    const statement = `mutation CreateEvolinciteDepartment($input: CreateEvolinciteDepartmentInput!, $condition: ModelEvolinciteDepartmentConditionInput) {
        createEvolinciteDepartment(input: $input, condition: $condition) {
          __typename
          id
          name
          parent
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteDepartmentMutation>(
      response.data.createEvolinciteDepartment
    );
  }
  async UpdateEvolinciteDepartment(
    input: UpdateEvolinciteDepartmentInput,
    condition?: ModelEvolinciteDepartmentConditionInput
  ): Promise<UpdateEvolinciteDepartmentMutation> {
    const statement = `mutation UpdateEvolinciteDepartment($input: UpdateEvolinciteDepartmentInput!, $condition: ModelEvolinciteDepartmentConditionInput) {
        updateEvolinciteDepartment(input: $input, condition: $condition) {
          __typename
          id
          name
          parent
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteDepartmentMutation>(
      response.data.updateEvolinciteDepartment
    );
  }
  async DeleteEvolinciteDepartment(
    input: DeleteEvolinciteDepartmentInput,
    condition?: ModelEvolinciteDepartmentConditionInput
  ): Promise<DeleteEvolinciteDepartmentMutation> {
    const statement = `mutation DeleteEvolinciteDepartment($input: DeleteEvolinciteDepartmentInput!, $condition: ModelEvolinciteDepartmentConditionInput) {
        deleteEvolinciteDepartment(input: $input, condition: $condition) {
          __typename
          id
          name
          parent
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteDepartmentMutation>(
      response.data.deleteEvolinciteDepartment
    );
  }
  async CreateEvolinciteSubscription(
    input: CreateEvolinciteSubscriptionInput,
    condition?: ModelEvolinciteSubscriptionConditionInput
  ): Promise<CreateEvolinciteSubscriptionMutation> {
    const statement = `mutation CreateEvolinciteSubscription($input: CreateEvolinciteSubscriptionInput!, $condition: ModelEvolinciteSubscriptionConditionInput) {
        createEvolinciteSubscription(input: $input, condition: $condition) {
          __typename
          id
          name
          price
          dateInitial
          dateFinal
          state
          EvolinciteCompanies {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteSubscriptionMutation>(
      response.data.createEvolinciteSubscription
    );
  }
  async UpdateEvolinciteSubscription(
    input: UpdateEvolinciteSubscriptionInput,
    condition?: ModelEvolinciteSubscriptionConditionInput
  ): Promise<UpdateEvolinciteSubscriptionMutation> {
    const statement = `mutation UpdateEvolinciteSubscription($input: UpdateEvolinciteSubscriptionInput!, $condition: ModelEvolinciteSubscriptionConditionInput) {
        updateEvolinciteSubscription(input: $input, condition: $condition) {
          __typename
          id
          name
          price
          dateInitial
          dateFinal
          state
          EvolinciteCompanies {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteSubscriptionMutation>(
      response.data.updateEvolinciteSubscription
    );
  }
  async DeleteEvolinciteSubscription(
    input: DeleteEvolinciteSubscriptionInput,
    condition?: ModelEvolinciteSubscriptionConditionInput
  ): Promise<DeleteEvolinciteSubscriptionMutation> {
    const statement = `mutation DeleteEvolinciteSubscription($input: DeleteEvolinciteSubscriptionInput!, $condition: ModelEvolinciteSubscriptionConditionInput) {
        deleteEvolinciteSubscription(input: $input, condition: $condition) {
          __typename
          id
          name
          price
          dateInitial
          dateFinal
          state
          EvolinciteCompanies {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteSubscriptionMutation>(
      response.data.deleteEvolinciteSubscription
    );
  }
  async CreateEvolinciteModule(
    input: CreateEvolinciteModuleInput,
    condition?: ModelEvolinciteModuleConditionInput
  ): Promise<CreateEvolinciteModuleMutation> {
    const statement = `mutation CreateEvolinciteModule($input: CreateEvolinciteModuleInput!, $condition: ModelEvolinciteModuleConditionInput) {
        createEvolinciteModule(input: $input, condition: $condition) {
          __typename
          id
          name
          state
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteModuleMutation>response.data.createEvolinciteModule;
  }
  async UpdateEvolinciteModule(
    input: UpdateEvolinciteModuleInput,
    condition?: ModelEvolinciteModuleConditionInput
  ): Promise<UpdateEvolinciteModuleMutation> {
    const statement = `mutation UpdateEvolinciteModule($input: UpdateEvolinciteModuleInput!, $condition: ModelEvolinciteModuleConditionInput) {
        updateEvolinciteModule(input: $input, condition: $condition) {
          __typename
          id
          name
          state
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteModuleMutation>response.data.updateEvolinciteModule;
  }
  async DeleteEvolinciteModule(
    input: DeleteEvolinciteModuleInput,
    condition?: ModelEvolinciteModuleConditionInput
  ): Promise<DeleteEvolinciteModuleMutation> {
    const statement = `mutation DeleteEvolinciteModule($input: DeleteEvolinciteModuleInput!, $condition: ModelEvolinciteModuleConditionInput) {
        deleteEvolinciteModule(input: $input, condition: $condition) {
          __typename
          id
          name
          state
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteModuleMutation>response.data.deleteEvolinciteModule;
  }
  async CreateEvolinciteFunctionality(
    input: CreateEvolinciteFunctionalityInput,
    condition?: ModelEvolinciteFunctionalityConditionInput
  ): Promise<CreateEvolinciteFunctionalityMutation> {
    const statement = `mutation CreateEvolinciteFunctionality($input: CreateEvolinciteFunctionalityInput!, $condition: ModelEvolinciteFunctionalityConditionInput) {
        createEvolinciteFunctionality(input: $input, condition: $condition) {
          __typename
          id
          name
          functionalities
          state
          evolincitePackageID
          EvolincitePackage {
            __typename
            id
            name
            description
            goal
            duration
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteFunctionalityMutation>(
      response.data.createEvolinciteFunctionality
    );
  }
  async UpdateEvolinciteFunctionality(
    input: UpdateEvolinciteFunctionalityInput,
    condition?: ModelEvolinciteFunctionalityConditionInput
  ): Promise<UpdateEvolinciteFunctionalityMutation> {
    const statement = `mutation UpdateEvolinciteFunctionality($input: UpdateEvolinciteFunctionalityInput!, $condition: ModelEvolinciteFunctionalityConditionInput) {
        updateEvolinciteFunctionality(input: $input, condition: $condition) {
          __typename
          id
          name
          functionalities
          state
          evolincitePackageID
          EvolincitePackage {
            __typename
            id
            name
            description
            goal
            duration
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteFunctionalityMutation>(
      response.data.updateEvolinciteFunctionality
    );
  }
  async DeleteEvolinciteFunctionality(
    input: DeleteEvolinciteFunctionalityInput,
    condition?: ModelEvolinciteFunctionalityConditionInput
  ): Promise<DeleteEvolinciteFunctionalityMutation> {
    const statement = `mutation DeleteEvolinciteFunctionality($input: DeleteEvolinciteFunctionalityInput!, $condition: ModelEvolinciteFunctionalityConditionInput) {
        deleteEvolinciteFunctionality(input: $input, condition: $condition) {
          __typename
          id
          name
          functionalities
          state
          evolincitePackageID
          EvolincitePackage {
            __typename
            id
            name
            description
            goal
            duration
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteFunctionalityMutation>(
      response.data.deleteEvolinciteFunctionality
    );
  }
  async CreateEvolinciteRol(
    input: CreateEvolinciteRolInput,
    condition?: ModelEvolinciteRolConditionInput
  ): Promise<CreateEvolinciteRolMutation> {
    const statement = `mutation CreateEvolinciteRol($input: CreateEvolinciteRolInput!, $condition: ModelEvolinciteRolConditionInput) {
        createEvolinciteRol(input: $input, condition: $condition) {
          __typename
          id
          name
          permissions
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteRolMutation>response.data.createEvolinciteRol;
  }
  async UpdateEvolinciteRol(
    input: UpdateEvolinciteRolInput,
    condition?: ModelEvolinciteRolConditionInput
  ): Promise<UpdateEvolinciteRolMutation> {
    const statement = `mutation UpdateEvolinciteRol($input: UpdateEvolinciteRolInput!, $condition: ModelEvolinciteRolConditionInput) {
        updateEvolinciteRol(input: $input, condition: $condition) {
          __typename
          id
          name
          permissions
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteRolMutation>response.data.updateEvolinciteRol;
  }
  async DeleteEvolinciteRol(
    input: DeleteEvolinciteRolInput,
    condition?: ModelEvolinciteRolConditionInput
  ): Promise<DeleteEvolinciteRolMutation> {
    const statement = `mutation DeleteEvolinciteRol($input: DeleteEvolinciteRolInput!, $condition: ModelEvolinciteRolConditionInput) {
        deleteEvolinciteRol(input: $input, condition: $condition) {
          __typename
          id
          name
          permissions
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteRolMutation>response.data.deleteEvolinciteRol;
  }
  async CreateEvolinciteCustomer(
    input: CreateEvolinciteCustomerInput,
    condition?: ModelEvolinciteCustomerConditionInput
  ): Promise<CreateEvolinciteCustomerMutation> {
    const statement = `mutation CreateEvolinciteCustomer($input: CreateEvolinciteCustomerInput!, $condition: ModelEvolinciteCustomerConditionInput) {
        createEvolinciteCustomer(input: $input, condition: $condition) {
          __typename
          id
          name
          lastName
          documentType
          documentNumber
          phone
          optionalPhone
          email
          picture
          birthDate
          municipality
          documents
          address
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteCustomerMutation>(
      response.data.createEvolinciteCustomer
    );
  }
  async UpdateEvolinciteCustomer(
    input: UpdateEvolinciteCustomerInput,
    condition?: ModelEvolinciteCustomerConditionInput
  ): Promise<UpdateEvolinciteCustomerMutation> {
    const statement = `mutation UpdateEvolinciteCustomer($input: UpdateEvolinciteCustomerInput!, $condition: ModelEvolinciteCustomerConditionInput) {
        updateEvolinciteCustomer(input: $input, condition: $condition) {
          __typename
          id
          name
          lastName
          documentType
          documentNumber
          phone
          optionalPhone
          email
          picture
          birthDate
          municipality
          documents
          address
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteCustomerMutation>(
      response.data.updateEvolinciteCustomer
    );
  }
  async DeleteEvolinciteCustomer(
    input: DeleteEvolinciteCustomerInput,
    condition?: ModelEvolinciteCustomerConditionInput
  ): Promise<DeleteEvolinciteCustomerMutation> {
    const statement = `mutation DeleteEvolinciteCustomer($input: DeleteEvolinciteCustomerInput!, $condition: ModelEvolinciteCustomerConditionInput) {
        deleteEvolinciteCustomer(input: $input, condition: $condition) {
          __typename
          id
          name
          lastName
          documentType
          documentNumber
          phone
          optionalPhone
          email
          picture
          birthDate
          municipality
          documents
          address
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteCustomerMutation>(
      response.data.deleteEvolinciteCustomer
    );
  }
  async CreateEvolinciteUserSettings(
    input: CreateEvolinciteUserSettingsInput,
    condition?: ModelEvolinciteUserSettingsConditionInput
  ): Promise<CreateEvolinciteUserSettingsMutation> {
    const statement = `mutation CreateEvolinciteUserSettings($input: CreateEvolinciteUserSettingsInput!, $condition: ModelEvolinciteUserSettingsConditionInput) {
        createEvolinciteUserSettings(input: $input, condition: $condition) {
          __typename
          id
          settings
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteUserSettingsMutation>(
      response.data.createEvolinciteUserSettings
    );
  }
  async UpdateEvolinciteUserSettings(
    input: UpdateEvolinciteUserSettingsInput,
    condition?: ModelEvolinciteUserSettingsConditionInput
  ): Promise<UpdateEvolinciteUserSettingsMutation> {
    const statement = `mutation UpdateEvolinciteUserSettings($input: UpdateEvolinciteUserSettingsInput!, $condition: ModelEvolinciteUserSettingsConditionInput) {
        updateEvolinciteUserSettings(input: $input, condition: $condition) {
          __typename
          id
          settings
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteUserSettingsMutation>(
      response.data.updateEvolinciteUserSettings
    );
  }
  async DeleteEvolinciteUserSettings(
    input: DeleteEvolinciteUserSettingsInput,
    condition?: ModelEvolinciteUserSettingsConditionInput
  ): Promise<DeleteEvolinciteUserSettingsMutation> {
    const statement = `mutation DeleteEvolinciteUserSettings($input: DeleteEvolinciteUserSettingsInput!, $condition: ModelEvolinciteUserSettingsConditionInput) {
        deleteEvolinciteUserSettings(input: $input, condition: $condition) {
          __typename
          id
          settings
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteUserSettingsMutation>(
      response.data.deleteEvolinciteUserSettings
    );
  }
  async CreateEvolinciteCrmPipeline(
    input: CreateEvolinciteCrmPipelineInput,
    condition?: ModelEvolinciteCrmPipelineConditionInput
  ): Promise<CreateEvolinciteCrmPipelineMutation> {
    const statement = `mutation CreateEvolinciteCrmPipeline($input: CreateEvolinciteCrmPipelineInput!, $condition: ModelEvolinciteCrmPipelineConditionInput) {
        createEvolinciteCrmPipeline(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          publicDescription
          order
          state
          meta
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmStates {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteCrmPipelineMutation>(
      response.data.createEvolinciteCrmPipeline
    );
  }
  async UpdateEvolinciteCrmPipeline(
    input: UpdateEvolinciteCrmPipelineInput,
    condition?: ModelEvolinciteCrmPipelineConditionInput
  ): Promise<UpdateEvolinciteCrmPipelineMutation> {
    const statement = `mutation UpdateEvolinciteCrmPipeline($input: UpdateEvolinciteCrmPipelineInput!, $condition: ModelEvolinciteCrmPipelineConditionInput) {
        updateEvolinciteCrmPipeline(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          publicDescription
          order
          state
          meta
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmStates {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteCrmPipelineMutation>(
      response.data.updateEvolinciteCrmPipeline
    );
  }
  async DeleteEvolinciteCrmPipeline(
    input: DeleteEvolinciteCrmPipelineInput,
    condition?: ModelEvolinciteCrmPipelineConditionInput
  ): Promise<DeleteEvolinciteCrmPipelineMutation> {
    const statement = `mutation DeleteEvolinciteCrmPipeline($input: DeleteEvolinciteCrmPipelineInput!, $condition: ModelEvolinciteCrmPipelineConditionInput) {
        deleteEvolinciteCrmPipeline(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          publicDescription
          order
          state
          meta
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmStates {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteCrmPipelineMutation>(
      response.data.deleteEvolinciteCrmPipeline
    );
  }
  async CreateEvolinciteCrmState(
    input: CreateEvolinciteCrmStateInput,
    condition?: ModelEvolinciteCrmStateConditionInput
  ): Promise<CreateEvolinciteCrmStateMutation> {
    const statement = `mutation CreateEvolinciteCrmState($input: CreateEvolinciteCrmStateInput!, $condition: ModelEvolinciteCrmStateConditionInput) {
        createEvolinciteCrmState(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          publicDescription
          color
          order
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteCrmAutomations {
            __typename
            nextToken
          }
          evolinciteCrmPipelineID
          EvolinciteCrmPipeline {
            __typename
            id
            name
            description
            publicDescription
            order
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteCrmStateMutation>(
      response.data.createEvolinciteCrmState
    );
  }
  async UpdateEvolinciteCrmState(
    input: UpdateEvolinciteCrmStateInput,
    condition?: ModelEvolinciteCrmStateConditionInput
  ): Promise<UpdateEvolinciteCrmStateMutation> {
    const statement = `mutation UpdateEvolinciteCrmState($input: UpdateEvolinciteCrmStateInput!, $condition: ModelEvolinciteCrmStateConditionInput) {
        updateEvolinciteCrmState(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          publicDescription
          color
          order
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteCrmAutomations {
            __typename
            nextToken
          }
          evolinciteCrmPipelineID
          EvolinciteCrmPipeline {
            __typename
            id
            name
            description
            publicDescription
            order
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteCrmStateMutation>(
      response.data.updateEvolinciteCrmState
    );
  }
  async DeleteEvolinciteCrmState(
    input: DeleteEvolinciteCrmStateInput,
    condition?: ModelEvolinciteCrmStateConditionInput
  ): Promise<DeleteEvolinciteCrmStateMutation> {
    const statement = `mutation DeleteEvolinciteCrmState($input: DeleteEvolinciteCrmStateInput!, $condition: ModelEvolinciteCrmStateConditionInput) {
        deleteEvolinciteCrmState(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          publicDescription
          color
          order
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteCrmAutomations {
            __typename
            nextToken
          }
          evolinciteCrmPipelineID
          EvolinciteCrmPipeline {
            __typename
            id
            name
            description
            publicDescription
            order
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteCrmStateMutation>(
      response.data.deleteEvolinciteCrmState
    );
  }
  async CreateEvolinciteCrmNegotiationLog(
    input: CreateEvolinciteCrmNegotiationLogInput,
    condition?: ModelEvolinciteCrmNegotiationLogConditionInput
  ): Promise<CreateEvolinciteCrmNegotiationLogMutation> {
    const statement = `mutation CreateEvolinciteCrmNegotiationLog($input: CreateEvolinciteCrmNegotiationLogInput!, $condition: ModelEvolinciteCrmNegotiationLogConditionInput) {
        createEvolinciteCrmNegotiationLog(input: $input, condition: $condition) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteCrmNegotiationID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteCrmNegotiationLogMutation>(
      response.data.createEvolinciteCrmNegotiationLog
    );
  }
  async UpdateEvolinciteCrmNegotiationLog(
    input: UpdateEvolinciteCrmNegotiationLogInput,
    condition?: ModelEvolinciteCrmNegotiationLogConditionInput
  ): Promise<UpdateEvolinciteCrmNegotiationLogMutation> {
    const statement = `mutation UpdateEvolinciteCrmNegotiationLog($input: UpdateEvolinciteCrmNegotiationLogInput!, $condition: ModelEvolinciteCrmNegotiationLogConditionInput) {
        updateEvolinciteCrmNegotiationLog(input: $input, condition: $condition) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteCrmNegotiationID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteCrmNegotiationLogMutation>(
      response.data.updateEvolinciteCrmNegotiationLog
    );
  }
  async DeleteEvolinciteCrmNegotiationLog(
    input: DeleteEvolinciteCrmNegotiationLogInput,
    condition?: ModelEvolinciteCrmNegotiationLogConditionInput
  ): Promise<DeleteEvolinciteCrmNegotiationLogMutation> {
    const statement = `mutation DeleteEvolinciteCrmNegotiationLog($input: DeleteEvolinciteCrmNegotiationLogInput!, $condition: ModelEvolinciteCrmNegotiationLogConditionInput) {
        deleteEvolinciteCrmNegotiationLog(input: $input, condition: $condition) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteCrmNegotiationID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteCrmNegotiationLogMutation>(
      response.data.deleteEvolinciteCrmNegotiationLog
    );
  }
  async CreateEvolinciteCrmNegotiation(
    input: CreateEvolinciteCrmNegotiationInput,
    condition?: ModelEvolinciteCrmNegotiationConditionInput
  ): Promise<CreateEvolinciteCrmNegotiationMutation> {
    const statement = `mutation CreateEvolinciteCrmNegotiation($input: CreateEvolinciteCrmNegotiationInput!, $condition: ModelEvolinciteCrmNegotiationConditionInput) {
        createEvolinciteCrmNegotiation(input: $input, condition: $condition) {
          __typename
          id
          name
          value
          due
          parent
          date
          documents
          meta
          frozen
          valueInterest
          valueCollection
          observers
          exitDate
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserSellerID
          EvolinciteUserSeller {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserReferrerID
          EvolinciteUserReferrer {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserOwnerID
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFieldValues {
            __typename
            nextToken
          }
          evolinciteCrmStateID
          EvolinciteCrmState {
            __typename
            id
            name
            description
            publicDescription
            color
            order
            state
            evolinciteCompanyID
            evolinciteCrmPipelineID
            createdAt
            updatedAt
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          evolinciteCustomerID
          EvolinciteCustomer {
            __typename
            id
            name
            lastName
            documentType
            documentNumber
            phone
            optionalPhone
            email
            picture
            birthDate
            municipality
            documents
            address
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteComments {
            __typename
            nextToken
          }
          EvolinciteActivities {
            __typename
            nextToken
          }
          EvolinciteUsersObserver {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          evolinciteProcessTypeID
          EvolinciteProcessType {
            __typename
            id
            name
            order
            sellerCommission
            referrerCommission
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          initialGoalID
          InitialGoal {
            __typename
            id
            name
            description
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          finalGoalID
          FinalGoal {
            __typename
            id
            name
            description
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteCrmNegotiationMutation>(
      response.data.createEvolinciteCrmNegotiation
    );
  }
  async UpdateEvolinciteCrmNegotiation(
    input: UpdateEvolinciteCrmNegotiationInput,
    condition?: ModelEvolinciteCrmNegotiationConditionInput
  ): Promise<UpdateEvolinciteCrmNegotiationMutation> {
    const statement = `mutation UpdateEvolinciteCrmNegotiation($input: UpdateEvolinciteCrmNegotiationInput!, $condition: ModelEvolinciteCrmNegotiationConditionInput) {
        updateEvolinciteCrmNegotiation(input: $input, condition: $condition) {
          __typename
          id
          name
          value
          due
          parent
          date
          documents
          meta
          frozen
          valueInterest
          valueCollection
          observers
          exitDate
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserSellerID
          EvolinciteUserSeller {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserReferrerID
          EvolinciteUserReferrer {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserOwnerID
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFieldValues {
            __typename
            nextToken
          }
          evolinciteCrmStateID
          EvolinciteCrmState {
            __typename
            id
            name
            description
            publicDescription
            color
            order
            state
            evolinciteCompanyID
            evolinciteCrmPipelineID
            createdAt
            updatedAt
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          evolinciteCustomerID
          EvolinciteCustomer {
            __typename
            id
            name
            lastName
            documentType
            documentNumber
            phone
            optionalPhone
            email
            picture
            birthDate
            municipality
            documents
            address
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteComments {
            __typename
            nextToken
          }
          EvolinciteActivities {
            __typename
            nextToken
          }
          EvolinciteUsersObserver {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          evolinciteProcessTypeID
          EvolinciteProcessType {
            __typename
            id
            name
            order
            sellerCommission
            referrerCommission
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          initialGoalID
          InitialGoal {
            __typename
            id
            name
            description
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          finalGoalID
          FinalGoal {
            __typename
            id
            name
            description
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteCrmNegotiationMutation>(
      response.data.updateEvolinciteCrmNegotiation
    );
  }
  async DeleteEvolinciteCrmNegotiation(
    input: DeleteEvolinciteCrmNegotiationInput,
    condition?: ModelEvolinciteCrmNegotiationConditionInput
  ): Promise<DeleteEvolinciteCrmNegotiationMutation> {
    const statement = `mutation DeleteEvolinciteCrmNegotiation($input: DeleteEvolinciteCrmNegotiationInput!, $condition: ModelEvolinciteCrmNegotiationConditionInput) {
        deleteEvolinciteCrmNegotiation(input: $input, condition: $condition) {
          __typename
          id
          name
          value
          due
          parent
          date
          documents
          meta
          frozen
          valueInterest
          valueCollection
          observers
          exitDate
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserSellerID
          EvolinciteUserSeller {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserReferrerID
          EvolinciteUserReferrer {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserOwnerID
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFieldValues {
            __typename
            nextToken
          }
          evolinciteCrmStateID
          EvolinciteCrmState {
            __typename
            id
            name
            description
            publicDescription
            color
            order
            state
            evolinciteCompanyID
            evolinciteCrmPipelineID
            createdAt
            updatedAt
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          evolinciteCustomerID
          EvolinciteCustomer {
            __typename
            id
            name
            lastName
            documentType
            documentNumber
            phone
            optionalPhone
            email
            picture
            birthDate
            municipality
            documents
            address
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteComments {
            __typename
            nextToken
          }
          EvolinciteActivities {
            __typename
            nextToken
          }
          EvolinciteUsersObserver {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          evolinciteProcessTypeID
          EvolinciteProcessType {
            __typename
            id
            name
            order
            sellerCommission
            referrerCommission
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          initialGoalID
          InitialGoal {
            __typename
            id
            name
            description
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          finalGoalID
          FinalGoal {
            __typename
            id
            name
            description
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteCrmNegotiationMutation>(
      response.data.deleteEvolinciteCrmNegotiation
    );
  }
  async CreateEvolinciteRoom(
    input: CreateEvolinciteRoomInput,
    condition?: ModelEvolinciteRoomConditionInput
  ): Promise<CreateEvolinciteRoomMutation> {
    const statement = `mutation CreateEvolinciteRoom($input: CreateEvolinciteRoomInput!, $condition: ModelEvolinciteRoomConditionInput) {
        createEvolinciteRoom(input: $input, condition: $condition) {
          __typename
          id
          Key
          name
          state
          meta
          EvolinciteUsers {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteRoomMutation>response.data.createEvolinciteRoom;
  }
  async UpdateEvolinciteRoom(
    input: UpdateEvolinciteRoomInput,
    condition?: ModelEvolinciteRoomConditionInput
  ): Promise<UpdateEvolinciteRoomMutation> {
    const statement = `mutation UpdateEvolinciteRoom($input: UpdateEvolinciteRoomInput!, $condition: ModelEvolinciteRoomConditionInput) {
        updateEvolinciteRoom(input: $input, condition: $condition) {
          __typename
          id
          Key
          name
          state
          meta
          EvolinciteUsers {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteRoomMutation>response.data.updateEvolinciteRoom;
  }
  async DeleteEvolinciteRoom(
    input: DeleteEvolinciteRoomInput,
    condition?: ModelEvolinciteRoomConditionInput
  ): Promise<DeleteEvolinciteRoomMutation> {
    const statement = `mutation DeleteEvolinciteRoom($input: DeleteEvolinciteRoomInput!, $condition: ModelEvolinciteRoomConditionInput) {
        deleteEvolinciteRoom(input: $input, condition: $condition) {
          __typename
          id
          Key
          name
          state
          meta
          EvolinciteUsers {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteRoomMutation>response.data.deleteEvolinciteRoom;
  }
  async CreateEvolinciteMessage(
    input: CreateEvolinciteMessageInput,
    condition?: ModelEvolinciteMessageConditionInput
  ): Promise<CreateEvolinciteMessageMutation> {
    const statement = `mutation CreateEvolinciteMessage($input: CreateEvolinciteMessageInput!, $condition: ModelEvolinciteMessageConditionInput) {
        createEvolinciteMessage(input: $input, condition: $condition) {
          __typename
          id
          content
          type
          state
          createdAt
          updatedAt
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteRoomID
          EvolinciteRoom {
            __typename
            id
            Key
            name
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteMessageMutation>(
      response.data.createEvolinciteMessage
    );
  }
  async UpdateEvolinciteMessage(
    input: UpdateEvolinciteMessageInput,
    condition?: ModelEvolinciteMessageConditionInput
  ): Promise<UpdateEvolinciteMessageMutation> {
    const statement = `mutation UpdateEvolinciteMessage($input: UpdateEvolinciteMessageInput!, $condition: ModelEvolinciteMessageConditionInput) {
        updateEvolinciteMessage(input: $input, condition: $condition) {
          __typename
          id
          content
          type
          state
          createdAt
          updatedAt
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteRoomID
          EvolinciteRoom {
            __typename
            id
            Key
            name
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteMessageMutation>(
      response.data.updateEvolinciteMessage
    );
  }
  async DeleteEvolinciteMessage(
    input: DeleteEvolinciteMessageInput,
    condition?: ModelEvolinciteMessageConditionInput
  ): Promise<DeleteEvolinciteMessageMutation> {
    const statement = `mutation DeleteEvolinciteMessage($input: DeleteEvolinciteMessageInput!, $condition: ModelEvolinciteMessageConditionInput) {
        deleteEvolinciteMessage(input: $input, condition: $condition) {
          __typename
          id
          content
          type
          state
          createdAt
          updatedAt
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteRoomID
          EvolinciteRoom {
            __typename
            id
            Key
            name
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteMessageMutation>(
      response.data.deleteEvolinciteMessage
    );
  }
  async CreateEvolinciteCrmNegotiationFieldValue(
    input: CreateEvolinciteCrmNegotiationFieldValueInput,
    condition?: ModelEvolinciteCrmNegotiationFieldValueConditionInput
  ): Promise<CreateEvolinciteCrmNegotiationFieldValueMutation> {
    const statement = `mutation CreateEvolinciteCrmNegotiationFieldValue($input: CreateEvolinciteCrmNegotiationFieldValueInput!, $condition: ModelEvolinciteCrmNegotiationFieldValueConditionInput) {
        createEvolinciteCrmNegotiationFieldValue(input: $input, condition: $condition) {
          __typename
          id
          value
          state
          evolinciteCrmNegotiationFieldID
          EvolinciteCrmNegotiationField {
            __typename
            id
            field
            type
            required
            order
            state
            meta
            evolinciteCompanyID
            evolinciteCrmNegotiationSectionID
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteCrmNegotiationFieldValueMutation>(
      response.data.createEvolinciteCrmNegotiationFieldValue
    );
  }
  async UpdateEvolinciteCrmNegotiationFieldValue(
    input: UpdateEvolinciteCrmNegotiationFieldValueInput,
    condition?: ModelEvolinciteCrmNegotiationFieldValueConditionInput
  ): Promise<UpdateEvolinciteCrmNegotiationFieldValueMutation> {
    const statement = `mutation UpdateEvolinciteCrmNegotiationFieldValue($input: UpdateEvolinciteCrmNegotiationFieldValueInput!, $condition: ModelEvolinciteCrmNegotiationFieldValueConditionInput) {
        updateEvolinciteCrmNegotiationFieldValue(input: $input, condition: $condition) {
          __typename
          id
          value
          state
          evolinciteCrmNegotiationFieldID
          EvolinciteCrmNegotiationField {
            __typename
            id
            field
            type
            required
            order
            state
            meta
            evolinciteCompanyID
            evolinciteCrmNegotiationSectionID
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteCrmNegotiationFieldValueMutation>(
      response.data.updateEvolinciteCrmNegotiationFieldValue
    );
  }
  async DeleteEvolinciteCrmNegotiationFieldValue(
    input: DeleteEvolinciteCrmNegotiationFieldValueInput,
    condition?: ModelEvolinciteCrmNegotiationFieldValueConditionInput
  ): Promise<DeleteEvolinciteCrmNegotiationFieldValueMutation> {
    const statement = `mutation DeleteEvolinciteCrmNegotiationFieldValue($input: DeleteEvolinciteCrmNegotiationFieldValueInput!, $condition: ModelEvolinciteCrmNegotiationFieldValueConditionInput) {
        deleteEvolinciteCrmNegotiationFieldValue(input: $input, condition: $condition) {
          __typename
          id
          value
          state
          evolinciteCrmNegotiationFieldID
          EvolinciteCrmNegotiationField {
            __typename
            id
            field
            type
            required
            order
            state
            meta
            evolinciteCompanyID
            evolinciteCrmNegotiationSectionID
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteCrmNegotiationFieldValueMutation>(
      response.data.deleteEvolinciteCrmNegotiationFieldValue
    );
  }
  async CreateEvolinciteEmail(
    input: CreateEvolinciteEmailInput,
    condition?: ModelEvolinciteEmailConditionInput
  ): Promise<CreateEvolinciteEmailMutation> {
    const statement = `mutation CreateEvolinciteEmail($input: CreateEvolinciteEmailInput!, $condition: ModelEvolinciteEmailConditionInput) {
        createEvolinciteEmail(input: $input, condition: $condition) {
          __typename
          id
          from
          to
          content
          subject
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteEmailMutation>response.data.createEvolinciteEmail;
  }
  async UpdateEvolinciteEmail(
    input: UpdateEvolinciteEmailInput,
    condition?: ModelEvolinciteEmailConditionInput
  ): Promise<UpdateEvolinciteEmailMutation> {
    const statement = `mutation UpdateEvolinciteEmail($input: UpdateEvolinciteEmailInput!, $condition: ModelEvolinciteEmailConditionInput) {
        updateEvolinciteEmail(input: $input, condition: $condition) {
          __typename
          id
          from
          to
          content
          subject
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteEmailMutation>response.data.updateEvolinciteEmail;
  }
  async DeleteEvolinciteEmail(
    input: DeleteEvolinciteEmailInput,
    condition?: ModelEvolinciteEmailConditionInput
  ): Promise<DeleteEvolinciteEmailMutation> {
    const statement = `mutation DeleteEvolinciteEmail($input: DeleteEvolinciteEmailInput!, $condition: ModelEvolinciteEmailConditionInput) {
        deleteEvolinciteEmail(input: $input, condition: $condition) {
          __typename
          id
          from
          to
          content
          subject
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteEmailMutation>response.data.deleteEvolinciteEmail;
  }
  async CreateEvolinciteEmailTemplate(
    input: CreateEvolinciteEmailTemplateInput,
    condition?: ModelEvolinciteEmailTemplateConditionInput
  ): Promise<CreateEvolinciteEmailTemplateMutation> {
    const statement = `mutation CreateEvolinciteEmailTemplate($input: CreateEvolinciteEmailTemplateInput!, $condition: ModelEvolinciteEmailTemplateConditionInput) {
        createEvolinciteEmailTemplate(input: $input, condition: $condition) {
          __typename
          id
          content
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteEmailTemplateMutation>(
      response.data.createEvolinciteEmailTemplate
    );
  }
  async UpdateEvolinciteEmailTemplate(
    input: UpdateEvolinciteEmailTemplateInput,
    condition?: ModelEvolinciteEmailTemplateConditionInput
  ): Promise<UpdateEvolinciteEmailTemplateMutation> {
    const statement = `mutation UpdateEvolinciteEmailTemplate($input: UpdateEvolinciteEmailTemplateInput!, $condition: ModelEvolinciteEmailTemplateConditionInput) {
        updateEvolinciteEmailTemplate(input: $input, condition: $condition) {
          __typename
          id
          content
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteEmailTemplateMutation>(
      response.data.updateEvolinciteEmailTemplate
    );
  }
  async DeleteEvolinciteEmailTemplate(
    input: DeleteEvolinciteEmailTemplateInput,
    condition?: ModelEvolinciteEmailTemplateConditionInput
  ): Promise<DeleteEvolinciteEmailTemplateMutation> {
    const statement = `mutation DeleteEvolinciteEmailTemplate($input: DeleteEvolinciteEmailTemplateInput!, $condition: ModelEvolinciteEmailTemplateConditionInput) {
        deleteEvolinciteEmailTemplate(input: $input, condition: $condition) {
          __typename
          id
          content
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteEmailTemplateMutation>(
      response.data.deleteEvolinciteEmailTemplate
    );
  }
  async CreateEvolinciteNotification(
    input: CreateEvolinciteNotificationInput,
    condition?: ModelEvolinciteNotificationConditionInput
  ): Promise<CreateEvolinciteNotificationMutation> {
    const statement = `mutation CreateEvolinciteNotification($input: CreateEvolinciteNotificationInput!, $condition: ModelEvolinciteNotificationConditionInput) {
        createEvolinciteNotification(input: $input, condition: $condition) {
          __typename
          id
          content
          title
          priority
          type
          meta
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteNotificationMutation>(
      response.data.createEvolinciteNotification
    );
  }
  async UpdateEvolinciteNotification(
    input: UpdateEvolinciteNotificationInput,
    condition?: ModelEvolinciteNotificationConditionInput
  ): Promise<UpdateEvolinciteNotificationMutation> {
    const statement = `mutation UpdateEvolinciteNotification($input: UpdateEvolinciteNotificationInput!, $condition: ModelEvolinciteNotificationConditionInput) {
        updateEvolinciteNotification(input: $input, condition: $condition) {
          __typename
          id
          content
          title
          priority
          type
          meta
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteNotificationMutation>(
      response.data.updateEvolinciteNotification
    );
  }
  async DeleteEvolinciteNotification(
    input: DeleteEvolinciteNotificationInput,
    condition?: ModelEvolinciteNotificationConditionInput
  ): Promise<DeleteEvolinciteNotificationMutation> {
    const statement = `mutation DeleteEvolinciteNotification($input: DeleteEvolinciteNotificationInput!, $condition: ModelEvolinciteNotificationConditionInput) {
        deleteEvolinciteNotification(input: $input, condition: $condition) {
          __typename
          id
          content
          title
          priority
          type
          meta
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteNotificationMutation>(
      response.data.deleteEvolinciteNotification
    );
  }
  async CreateEvolinciteUserDepartment(
    input: CreateEvolinciteUserDepartmentInput,
    condition?: ModelEvolinciteUserDepartmentConditionInput
  ): Promise<CreateEvolinciteUserDepartmentMutation> {
    const statement = `mutation CreateEvolinciteUserDepartment($input: CreateEvolinciteUserDepartmentInput!, $condition: ModelEvolinciteUserDepartmentConditionInput) {
        createEvolinciteUserDepartment(input: $input, condition: $condition) {
          __typename
          id
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteDepartmentID
          EvolinciteDepartment {
            __typename
            id
            name
            parent
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteUserDepartmentMutation>(
      response.data.createEvolinciteUserDepartment
    );
  }
  async UpdateEvolinciteUserDepartment(
    input: UpdateEvolinciteUserDepartmentInput,
    condition?: ModelEvolinciteUserDepartmentConditionInput
  ): Promise<UpdateEvolinciteUserDepartmentMutation> {
    const statement = `mutation UpdateEvolinciteUserDepartment($input: UpdateEvolinciteUserDepartmentInput!, $condition: ModelEvolinciteUserDepartmentConditionInput) {
        updateEvolinciteUserDepartment(input: $input, condition: $condition) {
          __typename
          id
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteDepartmentID
          EvolinciteDepartment {
            __typename
            id
            name
            parent
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteUserDepartmentMutation>(
      response.data.updateEvolinciteUserDepartment
    );
  }
  async DeleteEvolinciteUserDepartment(
    input: DeleteEvolinciteUserDepartmentInput,
    condition?: ModelEvolinciteUserDepartmentConditionInput
  ): Promise<DeleteEvolinciteUserDepartmentMutation> {
    const statement = `mutation DeleteEvolinciteUserDepartment($input: DeleteEvolinciteUserDepartmentInput!, $condition: ModelEvolinciteUserDepartmentConditionInput) {
        deleteEvolinciteUserDepartment(input: $input, condition: $condition) {
          __typename
          id
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteDepartmentID
          EvolinciteDepartment {
            __typename
            id
            name
            parent
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteUserDepartmentMutation>(
      response.data.deleteEvolinciteUserDepartment
    );
  }
  async CreateEvolinciteUserEvolinciteCompany(
    input: CreateEvolinciteUserEvolinciteCompanyInput,
    condition?: ModelEvolinciteUserEvolinciteCompanyConditionInput
  ): Promise<CreateEvolinciteUserEvolinciteCompanyMutation> {
    const statement = `mutation CreateEvolinciteUserEvolinciteCompany($input: CreateEvolinciteUserEvolinciteCompanyInput!, $condition: ModelEvolinciteUserEvolinciteCompanyConditionInput) {
        createEvolinciteUserEvolinciteCompany(input: $input, condition: $condition) {
          __typename
          id
          state
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteUserEvolinciteCompanyMutation>(
      response.data.createEvolinciteUserEvolinciteCompany
    );
  }
  async UpdateEvolinciteUserEvolinciteCompany(
    input: UpdateEvolinciteUserEvolinciteCompanyInput,
    condition?: ModelEvolinciteUserEvolinciteCompanyConditionInput
  ): Promise<UpdateEvolinciteUserEvolinciteCompanyMutation> {
    const statement = `mutation UpdateEvolinciteUserEvolinciteCompany($input: UpdateEvolinciteUserEvolinciteCompanyInput!, $condition: ModelEvolinciteUserEvolinciteCompanyConditionInput) {
        updateEvolinciteUserEvolinciteCompany(input: $input, condition: $condition) {
          __typename
          id
          state
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteUserEvolinciteCompanyMutation>(
      response.data.updateEvolinciteUserEvolinciteCompany
    );
  }
  async DeleteEvolinciteUserEvolinciteCompany(
    input: DeleteEvolinciteUserEvolinciteCompanyInput,
    condition?: ModelEvolinciteUserEvolinciteCompanyConditionInput
  ): Promise<DeleteEvolinciteUserEvolinciteCompanyMutation> {
    const statement = `mutation DeleteEvolinciteUserEvolinciteCompany($input: DeleteEvolinciteUserEvolinciteCompanyInput!, $condition: ModelEvolinciteUserEvolinciteCompanyConditionInput) {
        deleteEvolinciteUserEvolinciteCompany(input: $input, condition: $condition) {
          __typename
          id
          state
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteUserEvolinciteCompanyMutation>(
      response.data.deleteEvolinciteUserEvolinciteCompany
    );
  }
  async CreateEvolinciteUser(
    input: CreateEvolinciteUserInput,
    condition?: ModelEvolinciteUserConditionInput
  ): Promise<CreateEvolinciteUserMutation> {
    const statement = `mutation CreateEvolinciteUser($input: CreateEvolinciteUserInput!, $condition: ModelEvolinciteUserConditionInput) {
        createEvolinciteUser(input: $input, condition: $condition) {
          __typename
          id
          name
          nit
          phone
          picture
          email
          sub
          meta
          cv
          contract
          memos
          personalMail
          personalPhone
          state
          EvolinciteUserEvolinciteCompanies {
            __typename
            nextToken
          }
          EvolinciteActivitiesOwner {
            __typename
            nextToken
          }
          EvolinciteActivitiesParticipants {
            __typename
            nextToken
          }
          EvolinciteRooms {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsOwner {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsReferrer {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsSeller {
            __typename
            nextToken
          }
          EvolincitePaymentsUserSeller {
            __typename
            nextToken
          }
          EvolincitePaymentsUserReferrer {
            __typename
            nextToken
          }
          EvolinciteNotifications {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteComments {
            __typename
            nextToken
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteUserSettings {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsObserver {
            __typename
            nextToken
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          EvolinciteTicket {
            __typename
            nextToken
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          EvolinciteFolders {
            __typename
            nextToken
          }
          EvolinciteArticles {
            __typename
            nextToken
          }
          EvolinciteArticleComments {
            __typename
            nextToken
          }
          EvolinciteFoldersOwner {
            __typename
            nextToken
          }
          EvolinciteFormConfigurations {
            __typename
            nextToken
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          EvolinciteMails {
            __typename
            nextToken
          }
          EvolinciteEmployeeObservations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteUserMutation>response.data.createEvolinciteUser;
  }
  async UpdateEvolinciteUser(
    input: UpdateEvolinciteUserInput,
    condition?: ModelEvolinciteUserConditionInput
  ): Promise<UpdateEvolinciteUserMutation> {
    const statement = `mutation UpdateEvolinciteUser($input: UpdateEvolinciteUserInput!, $condition: ModelEvolinciteUserConditionInput) {
        updateEvolinciteUser(input: $input, condition: $condition) {
          __typename
          id
          name
          nit
          phone
          picture
          email
          sub
          meta
          cv
          contract
          memos
          personalMail
          personalPhone
          state
          EvolinciteUserEvolinciteCompanies {
            __typename
            nextToken
          }
          EvolinciteActivitiesOwner {
            __typename
            nextToken
          }
          EvolinciteActivitiesParticipants {
            __typename
            nextToken
          }
          EvolinciteRooms {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsOwner {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsReferrer {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsSeller {
            __typename
            nextToken
          }
          EvolincitePaymentsUserSeller {
            __typename
            nextToken
          }
          EvolincitePaymentsUserReferrer {
            __typename
            nextToken
          }
          EvolinciteNotifications {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteComments {
            __typename
            nextToken
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteUserSettings {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsObserver {
            __typename
            nextToken
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          EvolinciteTicket {
            __typename
            nextToken
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          EvolinciteFolders {
            __typename
            nextToken
          }
          EvolinciteArticles {
            __typename
            nextToken
          }
          EvolinciteArticleComments {
            __typename
            nextToken
          }
          EvolinciteFoldersOwner {
            __typename
            nextToken
          }
          EvolinciteFormConfigurations {
            __typename
            nextToken
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          EvolinciteMails {
            __typename
            nextToken
          }
          EvolinciteEmployeeObservations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteUserMutation>response.data.updateEvolinciteUser;
  }
  async DeleteEvolinciteUser(
    input: DeleteEvolinciteUserInput,
    condition?: ModelEvolinciteUserConditionInput
  ): Promise<DeleteEvolinciteUserMutation> {
    const statement = `mutation DeleteEvolinciteUser($input: DeleteEvolinciteUserInput!, $condition: ModelEvolinciteUserConditionInput) {
        deleteEvolinciteUser(input: $input, condition: $condition) {
          __typename
          id
          name
          nit
          phone
          picture
          email
          sub
          meta
          cv
          contract
          memos
          personalMail
          personalPhone
          state
          EvolinciteUserEvolinciteCompanies {
            __typename
            nextToken
          }
          EvolinciteActivitiesOwner {
            __typename
            nextToken
          }
          EvolinciteActivitiesParticipants {
            __typename
            nextToken
          }
          EvolinciteRooms {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsOwner {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsReferrer {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsSeller {
            __typename
            nextToken
          }
          EvolincitePaymentsUserSeller {
            __typename
            nextToken
          }
          EvolincitePaymentsUserReferrer {
            __typename
            nextToken
          }
          EvolinciteNotifications {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteComments {
            __typename
            nextToken
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteUserSettings {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsObserver {
            __typename
            nextToken
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          EvolinciteTicket {
            __typename
            nextToken
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          EvolinciteFolders {
            __typename
            nextToken
          }
          EvolinciteArticles {
            __typename
            nextToken
          }
          EvolinciteArticleComments {
            __typename
            nextToken
          }
          EvolinciteFoldersOwner {
            __typename
            nextToken
          }
          EvolinciteFormConfigurations {
            __typename
            nextToken
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          EvolinciteMails {
            __typename
            nextToken
          }
          EvolinciteEmployeeObservations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteUserMutation>response.data.deleteEvolinciteUser;
  }
  async CreateEvolinciteCompany(
    input: CreateEvolinciteCompanyInput,
    condition?: ModelEvolinciteCompanyConditionInput
  ): Promise<CreateEvolinciteCompanyMutation> {
    const statement = `mutation CreateEvolinciteCompany($input: CreateEvolinciteCompanyInput!, $condition: ModelEvolinciteCompanyConditionInput) {
        createEvolinciteCompany(input: $input, condition: $condition) {
          __typename
          id
          name
          nit
          picture
          meta
          state
          EvolinciteUserEvolinciteCompanies {
            __typename
            nextToken
          }
          evolinciteSubscriptionID
          EvolinciteSubscription {
            __typename
            id
            name
            price
            dateInitial
            dateFinal
            state
            createdAt
            updatedAt
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationFields {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationSections {
            __typename
            nextToken
          }
          EvolinciteCrmAutomations {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          EvolinciteDepartments {
            __typename
            nextToken
          }
          EvolinciteCustomers {
            __typename
            nextToken
          }
          EvolinciteCrmPipelines {
            __typename
            nextToken
          }
          EvolinciteCrmStates {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteJobTitles {
            __typename
            nextToken
          }
          EvolinciteNotifications {
            __typename
            nextToken
          }
          EvolinciteEmailTemplates {
            __typename
            nextToken
          }
          EvolinciteEmails {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteActivities {
            __typename
            nextToken
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteRoles {
            __typename
            nextToken
          }
          EvolinciteUserSettings {
            __typename
            nextToken
          }
          EvolinciteRooms {
            __typename
            nextToken
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          EvolinciteExpenseTypes {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          EvolinciteProcessTypes {
            __typename
            nextToken
          }
          EvolinciteGoal {
            __typename
            nextToken
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          EvolinciteTicketOwner {
            __typename
            nextToken
          }
          EvolinciteTicketOrigin {
            __typename
            nextToken
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          EvolinciteFolders {
            __typename
            nextToken
          }
          EvolinciteArticles {
            __typename
            nextToken
          }
          EvolinciteFormConfigurations {
            __typename
            nextToken
          }
          EvolincitePaymentAutomations {
            __typename
            nextToken
          }
          EvolinciteMails {
            __typename
            nextToken
          }
          EvolinciteMailTemplates {
            __typename
            nextToken
          }
          EvolinciteCompanySubscriptions {
            __typename
            nextToken
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          EvolinciteEmployeeObservations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteCompanyMutation>(
      response.data.createEvolinciteCompany
    );
  }
  async UpdateEvolinciteCompany(
    input: UpdateEvolinciteCompanyInput,
    condition?: ModelEvolinciteCompanyConditionInput
  ): Promise<UpdateEvolinciteCompanyMutation> {
    const statement = `mutation UpdateEvolinciteCompany($input: UpdateEvolinciteCompanyInput!, $condition: ModelEvolinciteCompanyConditionInput) {
        updateEvolinciteCompany(input: $input, condition: $condition) {
          __typename
          id
          name
          nit
          picture
          meta
          state
          EvolinciteUserEvolinciteCompanies {
            __typename
            nextToken
          }
          evolinciteSubscriptionID
          EvolinciteSubscription {
            __typename
            id
            name
            price
            dateInitial
            dateFinal
            state
            createdAt
            updatedAt
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationFields {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationSections {
            __typename
            nextToken
          }
          EvolinciteCrmAutomations {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          EvolinciteDepartments {
            __typename
            nextToken
          }
          EvolinciteCustomers {
            __typename
            nextToken
          }
          EvolinciteCrmPipelines {
            __typename
            nextToken
          }
          EvolinciteCrmStates {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteJobTitles {
            __typename
            nextToken
          }
          EvolinciteNotifications {
            __typename
            nextToken
          }
          EvolinciteEmailTemplates {
            __typename
            nextToken
          }
          EvolinciteEmails {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteActivities {
            __typename
            nextToken
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteRoles {
            __typename
            nextToken
          }
          EvolinciteUserSettings {
            __typename
            nextToken
          }
          EvolinciteRooms {
            __typename
            nextToken
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          EvolinciteExpenseTypes {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          EvolinciteProcessTypes {
            __typename
            nextToken
          }
          EvolinciteGoal {
            __typename
            nextToken
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          EvolinciteTicketOwner {
            __typename
            nextToken
          }
          EvolinciteTicketOrigin {
            __typename
            nextToken
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          EvolinciteFolders {
            __typename
            nextToken
          }
          EvolinciteArticles {
            __typename
            nextToken
          }
          EvolinciteFormConfigurations {
            __typename
            nextToken
          }
          EvolincitePaymentAutomations {
            __typename
            nextToken
          }
          EvolinciteMails {
            __typename
            nextToken
          }
          EvolinciteMailTemplates {
            __typename
            nextToken
          }
          EvolinciteCompanySubscriptions {
            __typename
            nextToken
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          EvolinciteEmployeeObservations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteCompanyMutation>(
      response.data.updateEvolinciteCompany
    );
  }
  async DeleteEvolinciteCompany(
    input: DeleteEvolinciteCompanyInput,
    condition?: ModelEvolinciteCompanyConditionInput
  ): Promise<DeleteEvolinciteCompanyMutation> {
    const statement = `mutation DeleteEvolinciteCompany($input: DeleteEvolinciteCompanyInput!, $condition: ModelEvolinciteCompanyConditionInput) {
        deleteEvolinciteCompany(input: $input, condition: $condition) {
          __typename
          id
          name
          nit
          picture
          meta
          state
          EvolinciteUserEvolinciteCompanies {
            __typename
            nextToken
          }
          evolinciteSubscriptionID
          EvolinciteSubscription {
            __typename
            id
            name
            price
            dateInitial
            dateFinal
            state
            createdAt
            updatedAt
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationFields {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationSections {
            __typename
            nextToken
          }
          EvolinciteCrmAutomations {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          EvolinciteDepartments {
            __typename
            nextToken
          }
          EvolinciteCustomers {
            __typename
            nextToken
          }
          EvolinciteCrmPipelines {
            __typename
            nextToken
          }
          EvolinciteCrmStates {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteJobTitles {
            __typename
            nextToken
          }
          EvolinciteNotifications {
            __typename
            nextToken
          }
          EvolinciteEmailTemplates {
            __typename
            nextToken
          }
          EvolinciteEmails {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteActivities {
            __typename
            nextToken
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteRoles {
            __typename
            nextToken
          }
          EvolinciteUserSettings {
            __typename
            nextToken
          }
          EvolinciteRooms {
            __typename
            nextToken
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          EvolinciteExpenseTypes {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          EvolinciteProcessTypes {
            __typename
            nextToken
          }
          EvolinciteGoal {
            __typename
            nextToken
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          EvolinciteTicketOwner {
            __typename
            nextToken
          }
          EvolinciteTicketOrigin {
            __typename
            nextToken
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          EvolinciteFolders {
            __typename
            nextToken
          }
          EvolinciteArticles {
            __typename
            nextToken
          }
          EvolinciteFormConfigurations {
            __typename
            nextToken
          }
          EvolincitePaymentAutomations {
            __typename
            nextToken
          }
          EvolinciteMails {
            __typename
            nextToken
          }
          EvolinciteMailTemplates {
            __typename
            nextToken
          }
          EvolinciteCompanySubscriptions {
            __typename
            nextToken
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          EvolinciteEmployeeObservations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteCompanyMutation>(
      response.data.deleteEvolinciteCompany
    );
  }
  async CreateEvolinciteGoal(
    input: CreateEvolinciteGoalInput,
    condition?: ModelEvolinciteGoalConditionInput
  ): Promise<CreateEvolinciteGoalMutation> {
    const statement = `mutation CreateEvolinciteGoal($input: CreateEvolinciteGoalInput!, $condition: ModelEvolinciteGoalConditionInput) {
        createEvolinciteGoal(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationsInitial {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsFinal {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteGoalMutation>response.data.createEvolinciteGoal;
  }
  async UpdateEvolinciteGoal(
    input: UpdateEvolinciteGoalInput,
    condition?: ModelEvolinciteGoalConditionInput
  ): Promise<UpdateEvolinciteGoalMutation> {
    const statement = `mutation UpdateEvolinciteGoal($input: UpdateEvolinciteGoalInput!, $condition: ModelEvolinciteGoalConditionInput) {
        updateEvolinciteGoal(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationsInitial {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsFinal {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteGoalMutation>response.data.updateEvolinciteGoal;
  }
  async DeleteEvolinciteGoal(
    input: DeleteEvolinciteGoalInput,
    condition?: ModelEvolinciteGoalConditionInput
  ): Promise<DeleteEvolinciteGoalMutation> {
    const statement = `mutation DeleteEvolinciteGoal($input: DeleteEvolinciteGoalInput!, $condition: ModelEvolinciteGoalConditionInput) {
        deleteEvolinciteGoal(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationsInitial {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsFinal {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteGoalMutation>response.data.deleteEvolinciteGoal;
  }
  async CreateEvolinciteWalletPaymentLog(
    input: CreateEvolinciteWalletPaymentLogInput,
    condition?: ModelEvolinciteWalletPaymentLogConditionInput
  ): Promise<CreateEvolinciteWalletPaymentLogMutation> {
    const statement = `mutation CreateEvolinciteWalletPaymentLog($input: CreateEvolinciteWalletPaymentLogInput!, $condition: ModelEvolinciteWalletPaymentLogConditionInput) {
        createEvolinciteWalletPaymentLog(input: $input, condition: $condition) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteWalletPaymentID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteWalletPayment {
            __typename
            id
            amount
            scheduledDate
            datePayment
            paymentStatus
            prePayment
            postPayment
            observations
            voucher
            transactionType
            reference
            amountInterest
            amountCollection
            state
            evolinciteCompanyID
            evolinciteUserReferrerID
            evolinciteUserSellerID
            evolinciteCrmNegotiationID
            evolinciteCustomerID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteWalletPaymentLogMutation>(
      response.data.createEvolinciteWalletPaymentLog
    );
  }
  async UpdateEvolinciteWalletPaymentLog(
    input: UpdateEvolinciteWalletPaymentLogInput,
    condition?: ModelEvolinciteWalletPaymentLogConditionInput
  ): Promise<UpdateEvolinciteWalletPaymentLogMutation> {
    const statement = `mutation UpdateEvolinciteWalletPaymentLog($input: UpdateEvolinciteWalletPaymentLogInput!, $condition: ModelEvolinciteWalletPaymentLogConditionInput) {
        updateEvolinciteWalletPaymentLog(input: $input, condition: $condition) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteWalletPaymentID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteWalletPayment {
            __typename
            id
            amount
            scheduledDate
            datePayment
            paymentStatus
            prePayment
            postPayment
            observations
            voucher
            transactionType
            reference
            amountInterest
            amountCollection
            state
            evolinciteCompanyID
            evolinciteUserReferrerID
            evolinciteUserSellerID
            evolinciteCrmNegotiationID
            evolinciteCustomerID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteWalletPaymentLogMutation>(
      response.data.updateEvolinciteWalletPaymentLog
    );
  }
  async DeleteEvolinciteWalletPaymentLog(
    input: DeleteEvolinciteWalletPaymentLogInput,
    condition?: ModelEvolinciteWalletPaymentLogConditionInput
  ): Promise<DeleteEvolinciteWalletPaymentLogMutation> {
    const statement = `mutation DeleteEvolinciteWalletPaymentLog($input: DeleteEvolinciteWalletPaymentLogInput!, $condition: ModelEvolinciteWalletPaymentLogConditionInput) {
        deleteEvolinciteWalletPaymentLog(input: $input, condition: $condition) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteWalletPaymentID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteWalletPayment {
            __typename
            id
            amount
            scheduledDate
            datePayment
            paymentStatus
            prePayment
            postPayment
            observations
            voucher
            transactionType
            reference
            amountInterest
            amountCollection
            state
            evolinciteCompanyID
            evolinciteUserReferrerID
            evolinciteUserSellerID
            evolinciteCrmNegotiationID
            evolinciteCustomerID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteWalletPaymentLogMutation>(
      response.data.deleteEvolinciteWalletPaymentLog
    );
  }
  async CreateEvolinciteExpenseLog(
    input: CreateEvolinciteExpenseLogInput,
    condition?: ModelEvolinciteExpenseLogConditionInput
  ): Promise<CreateEvolinciteExpenseLogMutation> {
    const statement = `mutation CreateEvolinciteExpenseLog($input: CreateEvolinciteExpenseLogInput!, $condition: ModelEvolinciteExpenseLogConditionInput) {
        createEvolinciteExpenseLog(input: $input, condition: $condition) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteExpenseID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteExpense {
            __typename
            id
            amount
            process
            expenseState
            expenseDate
            observations
            voucher
            transactionType
            reference
            state
            evolinciteExpenseTypeID
            evolinciteCrmNegotiationID
            evolinciteCompanyID
            evolinciteUserID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteExpenseLogMutation>(
      response.data.createEvolinciteExpenseLog
    );
  }
  async UpdateEvolinciteExpenseLog(
    input: UpdateEvolinciteExpenseLogInput,
    condition?: ModelEvolinciteExpenseLogConditionInput
  ): Promise<UpdateEvolinciteExpenseLogMutation> {
    const statement = `mutation UpdateEvolinciteExpenseLog($input: UpdateEvolinciteExpenseLogInput!, $condition: ModelEvolinciteExpenseLogConditionInput) {
        updateEvolinciteExpenseLog(input: $input, condition: $condition) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteExpenseID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteExpense {
            __typename
            id
            amount
            process
            expenseState
            expenseDate
            observations
            voucher
            transactionType
            reference
            state
            evolinciteExpenseTypeID
            evolinciteCrmNegotiationID
            evolinciteCompanyID
            evolinciteUserID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteExpenseLogMutation>(
      response.data.updateEvolinciteExpenseLog
    );
  }
  async DeleteEvolinciteExpenseLog(
    input: DeleteEvolinciteExpenseLogInput,
    condition?: ModelEvolinciteExpenseLogConditionInput
  ): Promise<DeleteEvolinciteExpenseLogMutation> {
    const statement = `mutation DeleteEvolinciteExpenseLog($input: DeleteEvolinciteExpenseLogInput!, $condition: ModelEvolinciteExpenseLogConditionInput) {
        deleteEvolinciteExpenseLog(input: $input, condition: $condition) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteExpenseID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteExpense {
            __typename
            id
            amount
            process
            expenseState
            expenseDate
            observations
            voucher
            transactionType
            reference
            state
            evolinciteExpenseTypeID
            evolinciteCrmNegotiationID
            evolinciteCompanyID
            evolinciteUserID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteExpenseLogMutation>(
      response.data.deleteEvolinciteExpenseLog
    );
  }
  async CreateEvolinciteTicket(
    input: CreateEvolinciteTicketInput,
    condition?: ModelEvolinciteTicketConditionInput
  ): Promise<CreateEvolinciteTicketMutation> {
    const statement = `mutation CreateEvolinciteTicket($input: CreateEvolinciteTicketInput!, $condition: ModelEvolinciteTicketConditionInput) {
        createEvolinciteTicket(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          documents
          meta
          ticketState
          state
          evolinciteUserID
          evolinciteCompanyOwnerID
          evolinciteCompanyOriginID
          EvolinciteCompanyOwner {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCompanyOrigin {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteTicketMutation>response.data.createEvolinciteTicket;
  }
  async UpdateEvolinciteTicket(
    input: UpdateEvolinciteTicketInput,
    condition?: ModelEvolinciteTicketConditionInput
  ): Promise<UpdateEvolinciteTicketMutation> {
    const statement = `mutation UpdateEvolinciteTicket($input: UpdateEvolinciteTicketInput!, $condition: ModelEvolinciteTicketConditionInput) {
        updateEvolinciteTicket(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          documents
          meta
          ticketState
          state
          evolinciteUserID
          evolinciteCompanyOwnerID
          evolinciteCompanyOriginID
          EvolinciteCompanyOwner {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCompanyOrigin {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteTicketMutation>response.data.updateEvolinciteTicket;
  }
  async DeleteEvolinciteTicket(
    input: DeleteEvolinciteTicketInput,
    condition?: ModelEvolinciteTicketConditionInput
  ): Promise<DeleteEvolinciteTicketMutation> {
    const statement = `mutation DeleteEvolinciteTicket($input: DeleteEvolinciteTicketInput!, $condition: ModelEvolinciteTicketConditionInput) {
        deleteEvolinciteTicket(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          documents
          meta
          ticketState
          state
          evolinciteUserID
          evolinciteCompanyOwnerID
          evolinciteCompanyOriginID
          EvolinciteCompanyOwner {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCompanyOrigin {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteTicketMutation>response.data.deleteEvolinciteTicket;
  }
  async CreateEvolinciteTicketLog(
    input: CreateEvolinciteTicketLogInput,
    condition?: ModelEvolinciteTicketLogConditionInput
  ): Promise<CreateEvolinciteTicketLogMutation> {
    const statement = `mutation CreateEvolinciteTicketLog($input: CreateEvolinciteTicketLogInput!, $condition: ModelEvolinciteTicketLogConditionInput) {
        createEvolinciteTicketLog(input: $input, condition: $condition) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteTicketID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteTicket {
            __typename
            id
            name
            description
            documents
            meta
            ticketState
            state
            evolinciteUserID
            evolinciteCompanyOwnerID
            evolinciteCompanyOriginID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteTicketLogMutation>(
      response.data.createEvolinciteTicketLog
    );
  }
  async UpdateEvolinciteTicketLog(
    input: UpdateEvolinciteTicketLogInput,
    condition?: ModelEvolinciteTicketLogConditionInput
  ): Promise<UpdateEvolinciteTicketLogMutation> {
    const statement = `mutation UpdateEvolinciteTicketLog($input: UpdateEvolinciteTicketLogInput!, $condition: ModelEvolinciteTicketLogConditionInput) {
        updateEvolinciteTicketLog(input: $input, condition: $condition) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteTicketID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteTicket {
            __typename
            id
            name
            description
            documents
            meta
            ticketState
            state
            evolinciteUserID
            evolinciteCompanyOwnerID
            evolinciteCompanyOriginID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteTicketLogMutation>(
      response.data.updateEvolinciteTicketLog
    );
  }
  async DeleteEvolinciteTicketLog(
    input: DeleteEvolinciteTicketLogInput,
    condition?: ModelEvolinciteTicketLogConditionInput
  ): Promise<DeleteEvolinciteTicketLogMutation> {
    const statement = `mutation DeleteEvolinciteTicketLog($input: DeleteEvolinciteTicketLogInput!, $condition: ModelEvolinciteTicketLogConditionInput) {
        deleteEvolinciteTicketLog(input: $input, condition: $condition) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteTicketID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteTicket {
            __typename
            id
            name
            description
            documents
            meta
            ticketState
            state
            evolinciteUserID
            evolinciteCompanyOwnerID
            evolinciteCompanyOriginID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteTicketLogMutation>(
      response.data.deleteEvolinciteTicketLog
    );
  }
  async CreateEvolinciteFile(
    input: CreateEvolinciteFileInput,
    condition?: ModelEvolinciteFileConditionInput
  ): Promise<CreateEvolinciteFileMutation> {
    const statement = `mutation CreateEvolinciteFile($input: CreateEvolinciteFileInput!, $condition: ModelEvolinciteFileConditionInput) {
        createEvolinciteFile(input: $input, condition: $condition) {
          __typename
          id
          name
          size
          meta
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteFolderID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFolder {
            __typename
            id
            parent
            name
            meta
            state
            evolinciteUserID
            evolinciteUserOwnerID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteFileMutation>response.data.createEvolinciteFile;
  }
  async UpdateEvolinciteFile(
    input: UpdateEvolinciteFileInput,
    condition?: ModelEvolinciteFileConditionInput
  ): Promise<UpdateEvolinciteFileMutation> {
    const statement = `mutation UpdateEvolinciteFile($input: UpdateEvolinciteFileInput!, $condition: ModelEvolinciteFileConditionInput) {
        updateEvolinciteFile(input: $input, condition: $condition) {
          __typename
          id
          name
          size
          meta
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteFolderID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFolder {
            __typename
            id
            parent
            name
            meta
            state
            evolinciteUserID
            evolinciteUserOwnerID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteFileMutation>response.data.updateEvolinciteFile;
  }
  async DeleteEvolinciteFile(
    input: DeleteEvolinciteFileInput,
    condition?: ModelEvolinciteFileConditionInput
  ): Promise<DeleteEvolinciteFileMutation> {
    const statement = `mutation DeleteEvolinciteFile($input: DeleteEvolinciteFileInput!, $condition: ModelEvolinciteFileConditionInput) {
        deleteEvolinciteFile(input: $input, condition: $condition) {
          __typename
          id
          name
          size
          meta
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteFolderID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFolder {
            __typename
            id
            parent
            name
            meta
            state
            evolinciteUserID
            evolinciteUserOwnerID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteFileMutation>response.data.deleteEvolinciteFile;
  }
  async CreateEvolinciteFolder(
    input: CreateEvolinciteFolderInput,
    condition?: ModelEvolinciteFolderConditionInput
  ): Promise<CreateEvolinciteFolderMutation> {
    const statement = `mutation CreateEvolinciteFolder($input: CreateEvolinciteFolderInput!, $condition: ModelEvolinciteFolderConditionInput) {
        createEvolinciteFolder(input: $input, condition: $condition) {
          __typename
          id
          parent
          name
          meta
          state
          evolinciteUserID
          evolinciteUserOwnerID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteFolderMutation>response.data.createEvolinciteFolder;
  }
  async UpdateEvolinciteFolder(
    input: UpdateEvolinciteFolderInput,
    condition?: ModelEvolinciteFolderConditionInput
  ): Promise<UpdateEvolinciteFolderMutation> {
    const statement = `mutation UpdateEvolinciteFolder($input: UpdateEvolinciteFolderInput!, $condition: ModelEvolinciteFolderConditionInput) {
        updateEvolinciteFolder(input: $input, condition: $condition) {
          __typename
          id
          parent
          name
          meta
          state
          evolinciteUserID
          evolinciteUserOwnerID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteFolderMutation>response.data.updateEvolinciteFolder;
  }
  async DeleteEvolinciteFolder(
    input: DeleteEvolinciteFolderInput,
    condition?: ModelEvolinciteFolderConditionInput
  ): Promise<DeleteEvolinciteFolderMutation> {
    const statement = `mutation DeleteEvolinciteFolder($input: DeleteEvolinciteFolderInput!, $condition: ModelEvolinciteFolderConditionInput) {
        deleteEvolinciteFolder(input: $input, condition: $condition) {
          __typename
          id
          parent
          name
          meta
          state
          evolinciteUserID
          evolinciteUserOwnerID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteFolderMutation>response.data.deleteEvolinciteFolder;
  }
  async CreateEvolinciteArticle(
    input: CreateEvolinciteArticleInput,
    condition?: ModelEvolinciteArticleConditionInput
  ): Promise<CreateEvolinciteArticleMutation> {
    const statement = `mutation CreateEvolinciteArticle($input: CreateEvolinciteArticleInput!, $condition: ModelEvolinciteArticleConditionInput) {
        createEvolinciteArticle(input: $input, condition: $condition) {
          __typename
          id
          front
          cover
          title
          content
          articleState
          visibility
          publicationDate
          meta
          files
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteArticleComments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteArticleMutation>(
      response.data.createEvolinciteArticle
    );
  }
  async UpdateEvolinciteArticle(
    input: UpdateEvolinciteArticleInput,
    condition?: ModelEvolinciteArticleConditionInput
  ): Promise<UpdateEvolinciteArticleMutation> {
    const statement = `mutation UpdateEvolinciteArticle($input: UpdateEvolinciteArticleInput!, $condition: ModelEvolinciteArticleConditionInput) {
        updateEvolinciteArticle(input: $input, condition: $condition) {
          __typename
          id
          front
          cover
          title
          content
          articleState
          visibility
          publicationDate
          meta
          files
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteArticleComments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteArticleMutation>(
      response.data.updateEvolinciteArticle
    );
  }
  async DeleteEvolinciteArticle(
    input: DeleteEvolinciteArticleInput,
    condition?: ModelEvolinciteArticleConditionInput
  ): Promise<DeleteEvolinciteArticleMutation> {
    const statement = `mutation DeleteEvolinciteArticle($input: DeleteEvolinciteArticleInput!, $condition: ModelEvolinciteArticleConditionInput) {
        deleteEvolinciteArticle(input: $input, condition: $condition) {
          __typename
          id
          front
          cover
          title
          content
          articleState
          visibility
          publicationDate
          meta
          files
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteArticleComments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteArticleMutation>(
      response.data.deleteEvolinciteArticle
    );
  }
  async CreateEvolinciteArticleComment(
    input: CreateEvolinciteArticleCommentInput,
    condition?: ModelEvolinciteArticleCommentConditionInput
  ): Promise<CreateEvolinciteArticleCommentMutation> {
    const statement = `mutation CreateEvolinciteArticleComment($input: CreateEvolinciteArticleCommentInput!, $condition: ModelEvolinciteArticleCommentConditionInput) {
        createEvolinciteArticleComment(input: $input, condition: $condition) {
          __typename
          id
          content
          state
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteArticleID
          EvolinciteArticle {
            __typename
            id
            front
            cover
            title
            content
            articleState
            visibility
            publicationDate
            meta
            files
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteArticleCommentMutation>(
      response.data.createEvolinciteArticleComment
    );
  }
  async UpdateEvolinciteArticleComment(
    input: UpdateEvolinciteArticleCommentInput,
    condition?: ModelEvolinciteArticleCommentConditionInput
  ): Promise<UpdateEvolinciteArticleCommentMutation> {
    const statement = `mutation UpdateEvolinciteArticleComment($input: UpdateEvolinciteArticleCommentInput!, $condition: ModelEvolinciteArticleCommentConditionInput) {
        updateEvolinciteArticleComment(input: $input, condition: $condition) {
          __typename
          id
          content
          state
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteArticleID
          EvolinciteArticle {
            __typename
            id
            front
            cover
            title
            content
            articleState
            visibility
            publicationDate
            meta
            files
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteArticleCommentMutation>(
      response.data.updateEvolinciteArticleComment
    );
  }
  async DeleteEvolinciteArticleComment(
    input: DeleteEvolinciteArticleCommentInput,
    condition?: ModelEvolinciteArticleCommentConditionInput
  ): Promise<DeleteEvolinciteArticleCommentMutation> {
    const statement = `mutation DeleteEvolinciteArticleComment($input: DeleteEvolinciteArticleCommentInput!, $condition: ModelEvolinciteArticleCommentConditionInput) {
        deleteEvolinciteArticleComment(input: $input, condition: $condition) {
          __typename
          id
          content
          state
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteArticleID
          EvolinciteArticle {
            __typename
            id
            front
            cover
            title
            content
            articleState
            visibility
            publicationDate
            meta
            files
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteArticleCommentMutation>(
      response.data.deleteEvolinciteArticleComment
    );
  }
  async CreateEvolinciteFormConfiguration(
    input: CreateEvolinciteFormConfigurationInput,
    condition?: ModelEvolinciteFormConfigurationConditionInput
  ): Promise<CreateEvolinciteFormConfigurationMutation> {
    const statement = `mutation CreateEvolinciteFormConfiguration($input: CreateEvolinciteFormConfigurationInput!, $condition: ModelEvolinciteFormConfigurationConditionInput) {
        createEvolinciteFormConfiguration(input: $input, condition: $condition) {
          __typename
          id
          key
          name
          config
          meta
          title
          description
          observations
          front
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteFormConfigurationMutation>(
      response.data.createEvolinciteFormConfiguration
    );
  }
  async UpdateEvolinciteFormConfiguration(
    input: UpdateEvolinciteFormConfigurationInput,
    condition?: ModelEvolinciteFormConfigurationConditionInput
  ): Promise<UpdateEvolinciteFormConfigurationMutation> {
    const statement = `mutation UpdateEvolinciteFormConfiguration($input: UpdateEvolinciteFormConfigurationInput!, $condition: ModelEvolinciteFormConfigurationConditionInput) {
        updateEvolinciteFormConfiguration(input: $input, condition: $condition) {
          __typename
          id
          key
          name
          config
          meta
          title
          description
          observations
          front
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteFormConfigurationMutation>(
      response.data.updateEvolinciteFormConfiguration
    );
  }
  async DeleteEvolinciteFormConfiguration(
    input: DeleteEvolinciteFormConfigurationInput,
    condition?: ModelEvolinciteFormConfigurationConditionInput
  ): Promise<DeleteEvolinciteFormConfigurationMutation> {
    const statement = `mutation DeleteEvolinciteFormConfiguration($input: DeleteEvolinciteFormConfigurationInput!, $condition: ModelEvolinciteFormConfigurationConditionInput) {
        deleteEvolinciteFormConfiguration(input: $input, condition: $condition) {
          __typename
          id
          key
          name
          config
          meta
          title
          description
          observations
          front
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteFormConfigurationMutation>(
      response.data.deleteEvolinciteFormConfiguration
    );
  }
  async CreateEvolinciteFormAnswer(
    input: CreateEvolinciteFormAnswerInput,
    condition?: ModelEvolinciteFormAnswerConditionInput
  ): Promise<CreateEvolinciteFormAnswerMutation> {
    const statement = `mutation CreateEvolinciteFormAnswer($input: CreateEvolinciteFormAnswerInput!, $condition: ModelEvolinciteFormAnswerConditionInput) {
        createEvolinciteFormAnswer(input: $input, condition: $condition) {
          __typename
          id
          meta
          answerState
          state
          evolinciteUserID
          evolinciteFormConfigurationID
          EvolinciteFormConfiguration {
            __typename
            id
            key
            name
            config
            meta
            title
            description
            observations
            front
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteFormAnswerMutation>(
      response.data.createEvolinciteFormAnswer
    );
  }
  async UpdateEvolinciteFormAnswer(
    input: UpdateEvolinciteFormAnswerInput,
    condition?: ModelEvolinciteFormAnswerConditionInput
  ): Promise<UpdateEvolinciteFormAnswerMutation> {
    const statement = `mutation UpdateEvolinciteFormAnswer($input: UpdateEvolinciteFormAnswerInput!, $condition: ModelEvolinciteFormAnswerConditionInput) {
        updateEvolinciteFormAnswer(input: $input, condition: $condition) {
          __typename
          id
          meta
          answerState
          state
          evolinciteUserID
          evolinciteFormConfigurationID
          EvolinciteFormConfiguration {
            __typename
            id
            key
            name
            config
            meta
            title
            description
            observations
            front
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteFormAnswerMutation>(
      response.data.updateEvolinciteFormAnswer
    );
  }
  async DeleteEvolinciteFormAnswer(
    input: DeleteEvolinciteFormAnswerInput,
    condition?: ModelEvolinciteFormAnswerConditionInput
  ): Promise<DeleteEvolinciteFormAnswerMutation> {
    const statement = `mutation DeleteEvolinciteFormAnswer($input: DeleteEvolinciteFormAnswerInput!, $condition: ModelEvolinciteFormAnswerConditionInput) {
        deleteEvolinciteFormAnswer(input: $input, condition: $condition) {
          __typename
          id
          meta
          answerState
          state
          evolinciteUserID
          evolinciteFormConfigurationID
          EvolinciteFormConfiguration {
            __typename
            id
            key
            name
            config
            meta
            title
            description
            observations
            front
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteFormAnswerMutation>(
      response.data.deleteEvolinciteFormAnswer
    );
  }
  async CreateEvolincitePaymentAutomation(
    input: CreateEvolincitePaymentAutomationInput,
    condition?: ModelEvolincitePaymentAutomationConditionInput
  ): Promise<CreateEvolincitePaymentAutomationMutation> {
    const statement = `mutation CreateEvolincitePaymentAutomation($input: CreateEvolincitePaymentAutomationInput!, $condition: ModelEvolincitePaymentAutomationConditionInput) {
        createEvolincitePaymentAutomation(input: $input, condition: $condition) {
          __typename
          id
          name
          setting
          order
          repeat
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolincitePaymentAutomationMutation>(
      response.data.createEvolincitePaymentAutomation
    );
  }
  async UpdateEvolincitePaymentAutomation(
    input: UpdateEvolincitePaymentAutomationInput,
    condition?: ModelEvolincitePaymentAutomationConditionInput
  ): Promise<UpdateEvolincitePaymentAutomationMutation> {
    const statement = `mutation UpdateEvolincitePaymentAutomation($input: UpdateEvolincitePaymentAutomationInput!, $condition: ModelEvolincitePaymentAutomationConditionInput) {
        updateEvolincitePaymentAutomation(input: $input, condition: $condition) {
          __typename
          id
          name
          setting
          order
          repeat
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolincitePaymentAutomationMutation>(
      response.data.updateEvolincitePaymentAutomation
    );
  }
  async DeleteEvolincitePaymentAutomation(
    input: DeleteEvolincitePaymentAutomationInput,
    condition?: ModelEvolincitePaymentAutomationConditionInput
  ): Promise<DeleteEvolincitePaymentAutomationMutation> {
    const statement = `mutation DeleteEvolincitePaymentAutomation($input: DeleteEvolincitePaymentAutomationInput!, $condition: ModelEvolincitePaymentAutomationConditionInput) {
        deleteEvolincitePaymentAutomation(input: $input, condition: $condition) {
          __typename
          id
          name
          setting
          order
          repeat
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolincitePaymentAutomationMutation>(
      response.data.deleteEvolincitePaymentAutomation
    );
  }
  async CreateEvolinciteMail(
    input: CreateEvolinciteMailInput,
    condition?: ModelEvolinciteMailConditionInput
  ): Promise<CreateEvolinciteMailMutation> {
    const statement = `mutation CreateEvolinciteMail($input: CreateEvolinciteMailInput!, $condition: ModelEvolinciteMailConditionInput) {
        createEvolinciteMail(input: $input, condition: $condition) {
          __typename
          id
          destinations
          subject
          content
          submissionStatus
          setting
          response
          files
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteMailMutation>response.data.createEvolinciteMail;
  }
  async UpdateEvolinciteMail(
    input: UpdateEvolinciteMailInput,
    condition?: ModelEvolinciteMailConditionInput
  ): Promise<UpdateEvolinciteMailMutation> {
    const statement = `mutation UpdateEvolinciteMail($input: UpdateEvolinciteMailInput!, $condition: ModelEvolinciteMailConditionInput) {
        updateEvolinciteMail(input: $input, condition: $condition) {
          __typename
          id
          destinations
          subject
          content
          submissionStatus
          setting
          response
          files
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteMailMutation>response.data.updateEvolinciteMail;
  }
  async DeleteEvolinciteMail(
    input: DeleteEvolinciteMailInput,
    condition?: ModelEvolinciteMailConditionInput
  ): Promise<DeleteEvolinciteMailMutation> {
    const statement = `mutation DeleteEvolinciteMail($input: DeleteEvolinciteMailInput!, $condition: ModelEvolinciteMailConditionInput) {
        deleteEvolinciteMail(input: $input, condition: $condition) {
          __typename
          id
          destinations
          subject
          content
          submissionStatus
          setting
          response
          files
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteMailMutation>response.data.deleteEvolinciteMail;
  }
  async CreateEvolinciteMailConfiguration(
    input: CreateEvolinciteMailConfigurationInput,
    condition?: ModelEvolinciteMailConfigurationConditionInput
  ): Promise<CreateEvolinciteMailConfigurationMutation> {
    const statement = `mutation CreateEvolinciteMailConfiguration($input: CreateEvolinciteMailConfigurationInput!, $condition: ModelEvolinciteMailConfigurationConditionInput) {
        createEvolinciteMailConfiguration(input: $input, condition: $condition) {
          __typename
          id
          SMTP
          email
          password
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteMailConfigurationMutation>(
      response.data.createEvolinciteMailConfiguration
    );
  }
  async UpdateEvolinciteMailConfiguration(
    input: UpdateEvolinciteMailConfigurationInput,
    condition?: ModelEvolinciteMailConfigurationConditionInput
  ): Promise<UpdateEvolinciteMailConfigurationMutation> {
    const statement = `mutation UpdateEvolinciteMailConfiguration($input: UpdateEvolinciteMailConfigurationInput!, $condition: ModelEvolinciteMailConfigurationConditionInput) {
        updateEvolinciteMailConfiguration(input: $input, condition: $condition) {
          __typename
          id
          SMTP
          email
          password
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteMailConfigurationMutation>(
      response.data.updateEvolinciteMailConfiguration
    );
  }
  async DeleteEvolinciteMailConfiguration(
    input: DeleteEvolinciteMailConfigurationInput,
    condition?: ModelEvolinciteMailConfigurationConditionInput
  ): Promise<DeleteEvolinciteMailConfigurationMutation> {
    const statement = `mutation DeleteEvolinciteMailConfiguration($input: DeleteEvolinciteMailConfigurationInput!, $condition: ModelEvolinciteMailConfigurationConditionInput) {
        deleteEvolinciteMailConfiguration(input: $input, condition: $condition) {
          __typename
          id
          SMTP
          email
          password
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteMailConfigurationMutation>(
      response.data.deleteEvolinciteMailConfiguration
    );
  }
  async CreateEvolinciteMailTemplate(
    input: CreateEvolinciteMailTemplateInput,
    condition?: ModelEvolinciteMailTemplateConditionInput
  ): Promise<CreateEvolinciteMailTemplateMutation> {
    const statement = `mutation CreateEvolinciteMailTemplate($input: CreateEvolinciteMailTemplateInput!, $condition: ModelEvolinciteMailTemplateConditionInput) {
        createEvolinciteMailTemplate(input: $input, condition: $condition) {
          __typename
          id
          destinations
          subject
          content
          files
          transmitter
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteMailTemplateMutation>(
      response.data.createEvolinciteMailTemplate
    );
  }
  async UpdateEvolinciteMailTemplate(
    input: UpdateEvolinciteMailTemplateInput,
    condition?: ModelEvolinciteMailTemplateConditionInput
  ): Promise<UpdateEvolinciteMailTemplateMutation> {
    const statement = `mutation UpdateEvolinciteMailTemplate($input: UpdateEvolinciteMailTemplateInput!, $condition: ModelEvolinciteMailTemplateConditionInput) {
        updateEvolinciteMailTemplate(input: $input, condition: $condition) {
          __typename
          id
          destinations
          subject
          content
          files
          transmitter
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteMailTemplateMutation>(
      response.data.updateEvolinciteMailTemplate
    );
  }
  async DeleteEvolinciteMailTemplate(
    input: DeleteEvolinciteMailTemplateInput,
    condition?: ModelEvolinciteMailTemplateConditionInput
  ): Promise<DeleteEvolinciteMailTemplateMutation> {
    const statement = `mutation DeleteEvolinciteMailTemplate($input: DeleteEvolinciteMailTemplateInput!, $condition: ModelEvolinciteMailTemplateConditionInput) {
        deleteEvolinciteMailTemplate(input: $input, condition: $condition) {
          __typename
          id
          destinations
          subject
          content
          files
          transmitter
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteMailTemplateMutation>(
      response.data.deleteEvolinciteMailTemplate
    );
  }
  async CreateEvolinciteMailTemplateLog(
    input: CreateEvolinciteMailTemplateLogInput,
    condition?: ModelEvolinciteMailTemplateLogConditionInput
  ): Promise<CreateEvolinciteMailTemplateLogMutation> {
    const statement = `mutation CreateEvolinciteMailTemplateLog($input: CreateEvolinciteMailTemplateLogInput!, $condition: ModelEvolinciteMailTemplateLogConditionInput) {
        createEvolinciteMailTemplateLog(input: $input, condition: $condition) {
          __typename
          id
          key
          log
          date
          previousLog
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteMailTemplateLogMutation>(
      response.data.createEvolinciteMailTemplateLog
    );
  }
  async UpdateEvolinciteMailTemplateLog(
    input: UpdateEvolinciteMailTemplateLogInput,
    condition?: ModelEvolinciteMailTemplateLogConditionInput
  ): Promise<UpdateEvolinciteMailTemplateLogMutation> {
    const statement = `mutation UpdateEvolinciteMailTemplateLog($input: UpdateEvolinciteMailTemplateLogInput!, $condition: ModelEvolinciteMailTemplateLogConditionInput) {
        updateEvolinciteMailTemplateLog(input: $input, condition: $condition) {
          __typename
          id
          key
          log
          date
          previousLog
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteMailTemplateLogMutation>(
      response.data.updateEvolinciteMailTemplateLog
    );
  }
  async DeleteEvolinciteMailTemplateLog(
    input: DeleteEvolinciteMailTemplateLogInput,
    condition?: ModelEvolinciteMailTemplateLogConditionInput
  ): Promise<DeleteEvolinciteMailTemplateLogMutation> {
    const statement = `mutation DeleteEvolinciteMailTemplateLog($input: DeleteEvolinciteMailTemplateLogInput!, $condition: ModelEvolinciteMailTemplateLogConditionInput) {
        deleteEvolinciteMailTemplateLog(input: $input, condition: $condition) {
          __typename
          id
          key
          log
          date
          previousLog
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteMailTemplateLogMutation>(
      response.data.deleteEvolinciteMailTemplateLog
    );
  }
  async CreateEvolincitePackage(
    input: CreateEvolincitePackageInput,
    condition?: ModelEvolincitePackageConditionInput
  ): Promise<CreateEvolincitePackageMutation> {
    const statement = `mutation CreateEvolincitePackage($input: CreateEvolincitePackageInput!, $condition: ModelEvolincitePackageConditionInput) {
        createEvolincitePackage(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          goal
          duration
          state
          EvolinciteFunctionalities {
            __typename
            nextToken
          }
          EvolinciteCompanySubscriptions {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolincitePackageMutation>(
      response.data.createEvolincitePackage
    );
  }
  async UpdateEvolincitePackage(
    input: UpdateEvolincitePackageInput,
    condition?: ModelEvolincitePackageConditionInput
  ): Promise<UpdateEvolincitePackageMutation> {
    const statement = `mutation UpdateEvolincitePackage($input: UpdateEvolincitePackageInput!, $condition: ModelEvolincitePackageConditionInput) {
        updateEvolincitePackage(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          goal
          duration
          state
          EvolinciteFunctionalities {
            __typename
            nextToken
          }
          EvolinciteCompanySubscriptions {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolincitePackageMutation>(
      response.data.updateEvolincitePackage
    );
  }
  async DeleteEvolincitePackage(
    input: DeleteEvolincitePackageInput,
    condition?: ModelEvolincitePackageConditionInput
  ): Promise<DeleteEvolincitePackageMutation> {
    const statement = `mutation DeleteEvolincitePackage($input: DeleteEvolincitePackageInput!, $condition: ModelEvolincitePackageConditionInput) {
        deleteEvolincitePackage(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          goal
          duration
          state
          EvolinciteFunctionalities {
            __typename
            nextToken
          }
          EvolinciteCompanySubscriptions {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolincitePackageMutation>(
      response.data.deleteEvolincitePackage
    );
  }
  async CreateEvolinciteCompanySubscription(
    input: CreateEvolinciteCompanySubscriptionInput,
    condition?: ModelEvolinciteCompanySubscriptionConditionInput
  ): Promise<CreateEvolinciteCompanySubscriptionMutation> {
    const statement = `mutation CreateEvolinciteCompanySubscription($input: CreateEvolinciteCompanySubscriptionInput!, $condition: ModelEvolinciteCompanySubscriptionConditionInput) {
        createEvolinciteCompanySubscription(input: $input, condition: $condition) {
          __typename
          id
          name
          price
          dateInitial
          dateFinal
          activatorUser
          state
          evolincitePackageID
          EvolincitePackage {
            __typename
            id
            name
            description
            goal
            duration
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteCompanySubscriptionMutation>(
      response.data.createEvolinciteCompanySubscription
    );
  }
  async UpdateEvolinciteCompanySubscription(
    input: UpdateEvolinciteCompanySubscriptionInput,
    condition?: ModelEvolinciteCompanySubscriptionConditionInput
  ): Promise<UpdateEvolinciteCompanySubscriptionMutation> {
    const statement = `mutation UpdateEvolinciteCompanySubscription($input: UpdateEvolinciteCompanySubscriptionInput!, $condition: ModelEvolinciteCompanySubscriptionConditionInput) {
        updateEvolinciteCompanySubscription(input: $input, condition: $condition) {
          __typename
          id
          name
          price
          dateInitial
          dateFinal
          activatorUser
          state
          evolincitePackageID
          EvolincitePackage {
            __typename
            id
            name
            description
            goal
            duration
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteCompanySubscriptionMutation>(
      response.data.updateEvolinciteCompanySubscription
    );
  }
  async DeleteEvolinciteCompanySubscription(
    input: DeleteEvolinciteCompanySubscriptionInput,
    condition?: ModelEvolinciteCompanySubscriptionConditionInput
  ): Promise<DeleteEvolinciteCompanySubscriptionMutation> {
    const statement = `mutation DeleteEvolinciteCompanySubscription($input: DeleteEvolinciteCompanySubscriptionInput!, $condition: ModelEvolinciteCompanySubscriptionConditionInput) {
        deleteEvolinciteCompanySubscription(input: $input, condition: $condition) {
          __typename
          id
          name
          price
          dateInitial
          dateFinal
          activatorUser
          state
          evolincitePackageID
          EvolincitePackage {
            __typename
            id
            name
            description
            goal
            duration
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteCompanySubscriptionMutation>(
      response.data.deleteEvolinciteCompanySubscription
    );
  }
  async CreateEvolinciteEmployeeObservation(
    input: CreateEvolinciteEmployeeObservationInput,
    condition?: ModelEvolinciteEmployeeObservationConditionInput
  ): Promise<CreateEvolinciteEmployeeObservationMutation> {
    const statement = `mutation CreateEvolinciteEmployeeObservation($input: CreateEvolinciteEmployeeObservationInput!, $condition: ModelEvolinciteEmployeeObservationConditionInput) {
        createEvolinciteEmployeeObservation(input: $input, condition: $condition) {
          __typename
          id
          name
          content
          isPublic
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteEmployeeObservationMutation>(
      response.data.createEvolinciteEmployeeObservation
    );
  }
  async UpdateEvolinciteEmployeeObservation(
    input: UpdateEvolinciteEmployeeObservationInput,
    condition?: ModelEvolinciteEmployeeObservationConditionInput
  ): Promise<UpdateEvolinciteEmployeeObservationMutation> {
    const statement = `mutation UpdateEvolinciteEmployeeObservation($input: UpdateEvolinciteEmployeeObservationInput!, $condition: ModelEvolinciteEmployeeObservationConditionInput) {
        updateEvolinciteEmployeeObservation(input: $input, condition: $condition) {
          __typename
          id
          name
          content
          isPublic
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteEmployeeObservationMutation>(
      response.data.updateEvolinciteEmployeeObservation
    );
  }
  async DeleteEvolinciteEmployeeObservation(
    input: DeleteEvolinciteEmployeeObservationInput,
    condition?: ModelEvolinciteEmployeeObservationConditionInput
  ): Promise<DeleteEvolinciteEmployeeObservationMutation> {
    const statement = `mutation DeleteEvolinciteEmployeeObservation($input: DeleteEvolinciteEmployeeObservationInput!, $condition: ModelEvolinciteEmployeeObservationConditionInput) {
        deleteEvolinciteEmployeeObservation(input: $input, condition: $condition) {
          __typename
          id
          name
          content
          isPublic
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteEmployeeObservationMutation>(
      response.data.deleteEvolinciteEmployeeObservation
    );
  }
  async CreateEvolinciteTag(
    input: CreateEvolinciteTagInput,
    condition?: ModelEvolinciteTagConditionInput
  ): Promise<CreateEvolinciteTagMutation> {
    const statement = `mutation CreateEvolinciteTag($input: CreateEvolinciteTagInput!, $condition: ModelEvolinciteTagConditionInput) {
        createEvolinciteTag(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteTagMutation>response.data.createEvolinciteTag;
  }
  async UpdateEvolinciteTag(
    input: UpdateEvolinciteTagInput,
    condition?: ModelEvolinciteTagConditionInput
  ): Promise<UpdateEvolinciteTagMutation> {
    const statement = `mutation UpdateEvolinciteTag($input: UpdateEvolinciteTagInput!, $condition: ModelEvolinciteTagConditionInput) {
        updateEvolinciteTag(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteTagMutation>response.data.updateEvolinciteTag;
  }
  async DeleteEvolinciteTag(
    input: DeleteEvolinciteTagInput,
    condition?: ModelEvolinciteTagConditionInput
  ): Promise<DeleteEvolinciteTagMutation> {
    const statement = `mutation DeleteEvolinciteTag($input: DeleteEvolinciteTagInput!, $condition: ModelEvolinciteTagConditionInput) {
        deleteEvolinciteTag(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteTagMutation>response.data.deleteEvolinciteTag;
  }
  async CreateEvolinciteMilestone(
    input: CreateEvolinciteMilestoneInput,
    condition?: ModelEvolinciteMilestoneConditionInput
  ): Promise<CreateEvolinciteMilestoneMutation> {
    const statement = `mutation CreateEvolinciteMilestone($input: CreateEvolinciteMilestoneInput!, $condition: ModelEvolinciteMilestoneConditionInput) {
        createEvolinciteMilestone(input: $input, condition: $condition) {
          __typename
          name
          description
          tags
          type
          config
          startDate
          endDate
          employees
          managers
          isClosed
          closingNotes
          log
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
          id
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteMilestoneMutation>(
      response.data.createEvolinciteMilestone
    );
  }
  async UpdateEvolinciteMilestone(
    input: UpdateEvolinciteMilestoneInput,
    condition?: ModelEvolinciteMilestoneConditionInput
  ): Promise<UpdateEvolinciteMilestoneMutation> {
    const statement = `mutation UpdateEvolinciteMilestone($input: UpdateEvolinciteMilestoneInput!, $condition: ModelEvolinciteMilestoneConditionInput) {
        updateEvolinciteMilestone(input: $input, condition: $condition) {
          __typename
          name
          description
          tags
          type
          config
          startDate
          endDate
          employees
          managers
          isClosed
          closingNotes
          log
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
          id
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteMilestoneMutation>(
      response.data.updateEvolinciteMilestone
    );
  }
  async DeleteEvolinciteMilestone(
    input: DeleteEvolinciteMilestoneInput,
    condition?: ModelEvolinciteMilestoneConditionInput
  ): Promise<DeleteEvolinciteMilestoneMutation> {
    const statement = `mutation DeleteEvolinciteMilestone($input: DeleteEvolinciteMilestoneInput!, $condition: ModelEvolinciteMilestoneConditionInput) {
        deleteEvolinciteMilestone(input: $input, condition: $condition) {
          __typename
          name
          description
          tags
          type
          config
          startDate
          endDate
          employees
          managers
          isClosed
          closingNotes
          log
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
          id
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteMilestoneMutation>(
      response.data.deleteEvolinciteMilestone
    );
  }
  async CreateEvolinciteUserLog(
    input: CreateEvolinciteUserLogInput,
    condition?: ModelEvolinciteUserLogConditionInput
  ): Promise<CreateEvolinciteUserLogMutation> {
    const statement = `mutation CreateEvolinciteUserLog($input: CreateEvolinciteUserLogInput!, $condition: ModelEvolinciteUserLogConditionInput) {
        createEvolinciteUserLog(input: $input, condition: $condition) {
          __typename
          id
          log
          functionality
          state
          key
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteUserLogMutation>(
      response.data.createEvolinciteUserLog
    );
  }
  async UpdateEvolinciteUserLog(
    input: UpdateEvolinciteUserLogInput,
    condition?: ModelEvolinciteUserLogConditionInput
  ): Promise<UpdateEvolinciteUserLogMutation> {
    const statement = `mutation UpdateEvolinciteUserLog($input: UpdateEvolinciteUserLogInput!, $condition: ModelEvolinciteUserLogConditionInput) {
        updateEvolinciteUserLog(input: $input, condition: $condition) {
          __typename
          id
          log
          functionality
          state
          key
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteUserLogMutation>(
      response.data.updateEvolinciteUserLog
    );
  }
  async DeleteEvolinciteUserLog(
    input: DeleteEvolinciteUserLogInput,
    condition?: ModelEvolinciteUserLogConditionInput
  ): Promise<DeleteEvolinciteUserLogMutation> {
    const statement = `mutation DeleteEvolinciteUserLog($input: DeleteEvolinciteUserLogInput!, $condition: ModelEvolinciteUserLogConditionInput) {
        deleteEvolinciteUserLog(input: $input, condition: $condition) {
          __typename
          id
          log
          functionality
          state
          key
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteUserLogMutation>(
      response.data.deleteEvolinciteUserLog
    );
  }
  async CreateEvolinciteUserTimeTracking(
    input: CreateEvolinciteUserTimeTrackingInput,
    condition?: ModelEvolinciteUserTimeTrackingConditionInput
  ): Promise<CreateEvolinciteUserTimeTrackingMutation> {
    const statement = `mutation CreateEvolinciteUserTimeTracking($input: CreateEvolinciteUserTimeTrackingInput!, $condition: ModelEvolinciteUserTimeTrackingConditionInput) {
        createEvolinciteUserTimeTracking(input: $input, condition: $condition) {
          __typename
          id
          time
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteUserTimeTrackingMutation>(
      response.data.createEvolinciteUserTimeTracking
    );
  }
  async UpdateEvolinciteUserTimeTracking(
    input: UpdateEvolinciteUserTimeTrackingInput,
    condition?: ModelEvolinciteUserTimeTrackingConditionInput
  ): Promise<UpdateEvolinciteUserTimeTrackingMutation> {
    const statement = `mutation UpdateEvolinciteUserTimeTracking($input: UpdateEvolinciteUserTimeTrackingInput!, $condition: ModelEvolinciteUserTimeTrackingConditionInput) {
        updateEvolinciteUserTimeTracking(input: $input, condition: $condition) {
          __typename
          id
          time
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteUserTimeTrackingMutation>(
      response.data.updateEvolinciteUserTimeTracking
    );
  }
  async DeleteEvolinciteUserTimeTracking(
    input: DeleteEvolinciteUserTimeTrackingInput,
    condition?: ModelEvolinciteUserTimeTrackingConditionInput
  ): Promise<DeleteEvolinciteUserTimeTrackingMutation> {
    const statement = `mutation DeleteEvolinciteUserTimeTracking($input: DeleteEvolinciteUserTimeTrackingInput!, $condition: ModelEvolinciteUserTimeTrackingConditionInput) {
        deleteEvolinciteUserTimeTracking(input: $input, condition: $condition) {
          __typename
          id
          time
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteUserTimeTrackingMutation>(
      response.data.deleteEvolinciteUserTimeTracking
    );
  }
  async CreateEvolinciteSchedule(
    input: CreateEvolinciteScheduleInput,
    condition?: ModelEvolinciteScheduleConditionInput
  ): Promise<CreateEvolinciteScheduleMutation> {
    const statement = `mutation CreateEvolinciteSchedule($input: CreateEvolinciteScheduleInput!, $condition: ModelEvolinciteScheduleConditionInput) {
        createEvolinciteSchedule(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          config
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteScheduleMutation>(
      response.data.createEvolinciteSchedule
    );
  }
  async UpdateEvolinciteSchedule(
    input: UpdateEvolinciteScheduleInput,
    condition?: ModelEvolinciteScheduleConditionInput
  ): Promise<UpdateEvolinciteScheduleMutation> {
    const statement = `mutation UpdateEvolinciteSchedule($input: UpdateEvolinciteScheduleInput!, $condition: ModelEvolinciteScheduleConditionInput) {
        updateEvolinciteSchedule(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          config
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteScheduleMutation>(
      response.data.updateEvolinciteSchedule
    );
  }
  async DeleteEvolinciteSchedule(
    input: DeleteEvolinciteScheduleInput,
    condition?: ModelEvolinciteScheduleConditionInput
  ): Promise<DeleteEvolinciteScheduleMutation> {
    const statement = `mutation DeleteEvolinciteSchedule($input: DeleteEvolinciteScheduleInput!, $condition: ModelEvolinciteScheduleConditionInput) {
        deleteEvolinciteSchedule(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          config
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteScheduleMutation>(
      response.data.deleteEvolinciteSchedule
    );
  }
  async CreateEvolinciteTemplateRequest(
    input: CreateEvolinciteTemplateRequestInput,
    condition?: ModelEvolinciteTemplateRequestConditionInput
  ): Promise<CreateEvolinciteTemplateRequestMutation> {
    const statement = `mutation CreateEvolinciteTemplateRequest($input: CreateEvolinciteTemplateRequestInput!, $condition: ModelEvolinciteTemplateRequestConditionInput) {
        createEvolinciteTemplateRequest(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          tags
          questions
          elementType
          documents
          meta
          owners
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteTemplateRequestMutation>(
      response.data.createEvolinciteTemplateRequest
    );
  }
  async UpdateEvolinciteTemplateRequest(
    input: UpdateEvolinciteTemplateRequestInput,
    condition?: ModelEvolinciteTemplateRequestConditionInput
  ): Promise<UpdateEvolinciteTemplateRequestMutation> {
    const statement = `mutation UpdateEvolinciteTemplateRequest($input: UpdateEvolinciteTemplateRequestInput!, $condition: ModelEvolinciteTemplateRequestConditionInput) {
        updateEvolinciteTemplateRequest(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          tags
          questions
          elementType
          documents
          meta
          owners
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteTemplateRequestMutation>(
      response.data.updateEvolinciteTemplateRequest
    );
  }
  async DeleteEvolinciteTemplateRequest(
    input: DeleteEvolinciteTemplateRequestInput,
    condition?: ModelEvolinciteTemplateRequestConditionInput
  ): Promise<DeleteEvolinciteTemplateRequestMutation> {
    const statement = `mutation DeleteEvolinciteTemplateRequest($input: DeleteEvolinciteTemplateRequestInput!, $condition: ModelEvolinciteTemplateRequestConditionInput) {
        deleteEvolinciteTemplateRequest(input: $input, condition: $condition) {
          __typename
          id
          name
          description
          tags
          questions
          elementType
          documents
          meta
          owners
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteTemplateRequestMutation>(
      response.data.deleteEvolinciteTemplateRequest
    );
  }
  async CreateEvolinciteRequest(
    input: CreateEvolinciteRequestInput,
    condition?: ModelEvolinciteRequestConditionInput
  ): Promise<CreateEvolinciteRequestMutation> {
    const statement = `mutation CreateEvolinciteRequest($input: CreateEvolinciteRequestInput!, $condition: ModelEvolinciteRequestConditionInput) {
        createEvolinciteRequest(input: $input, condition: $condition) {
          __typename
          id
          templateID
          answers
          requester
          priority
          elementID
          elementType
          status
          meta
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteRequestMutation>(
      response.data.createEvolinciteRequest
    );
  }
  async UpdateEvolinciteRequest(
    input: UpdateEvolinciteRequestInput,
    condition?: ModelEvolinciteRequestConditionInput
  ): Promise<UpdateEvolinciteRequestMutation> {
    const statement = `mutation UpdateEvolinciteRequest($input: UpdateEvolinciteRequestInput!, $condition: ModelEvolinciteRequestConditionInput) {
        updateEvolinciteRequest(input: $input, condition: $condition) {
          __typename
          id
          templateID
          answers
          requester
          priority
          elementID
          elementType
          status
          meta
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteRequestMutation>(
      response.data.updateEvolinciteRequest
    );
  }
  async DeleteEvolinciteRequest(
    input: DeleteEvolinciteRequestInput,
    condition?: ModelEvolinciteRequestConditionInput
  ): Promise<DeleteEvolinciteRequestMutation> {
    const statement = `mutation DeleteEvolinciteRequest($input: DeleteEvolinciteRequestInput!, $condition: ModelEvolinciteRequestConditionInput) {
        deleteEvolinciteRequest(input: $input, condition: $condition) {
          __typename
          id
          templateID
          answers
          requester
          priority
          elementID
          elementType
          status
          meta
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteRequestMutation>(
      response.data.deleteEvolinciteRequest
    );
  }
  async CreateEvolinciteActivityEvolinciteUser(
    input: CreateEvolinciteActivityEvolinciteUserInput,
    condition?: ModelEvolinciteActivityEvolinciteUserConditionInput
  ): Promise<CreateEvolinciteActivityEvolinciteUserMutation> {
    const statement = `mutation CreateEvolinciteActivityEvolinciteUser($input: CreateEvolinciteActivityEvolinciteUserInput!, $condition: ModelEvolinciteActivityEvolinciteUserConditionInput) {
        createEvolinciteActivityEvolinciteUser(input: $input, condition: $condition) {
          __typename
          id
          evolinciteActivityId
          evolinciteUserId
          evolinciteActivity {
            __typename
            id
            name
            description
            startDate
            endDate
            color
            type
            priority
            meta
            taskState
            documents
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteActivityEvolinciteUserMutation>(
      response.data.createEvolinciteActivityEvolinciteUser
    );
  }
  async UpdateEvolinciteActivityEvolinciteUser(
    input: UpdateEvolinciteActivityEvolinciteUserInput,
    condition?: ModelEvolinciteActivityEvolinciteUserConditionInput
  ): Promise<UpdateEvolinciteActivityEvolinciteUserMutation> {
    const statement = `mutation UpdateEvolinciteActivityEvolinciteUser($input: UpdateEvolinciteActivityEvolinciteUserInput!, $condition: ModelEvolinciteActivityEvolinciteUserConditionInput) {
        updateEvolinciteActivityEvolinciteUser(input: $input, condition: $condition) {
          __typename
          id
          evolinciteActivityId
          evolinciteUserId
          evolinciteActivity {
            __typename
            id
            name
            description
            startDate
            endDate
            color
            type
            priority
            meta
            taskState
            documents
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteActivityEvolinciteUserMutation>(
      response.data.updateEvolinciteActivityEvolinciteUser
    );
  }
  async DeleteEvolinciteActivityEvolinciteUser(
    input: DeleteEvolinciteActivityEvolinciteUserInput,
    condition?: ModelEvolinciteActivityEvolinciteUserConditionInput
  ): Promise<DeleteEvolinciteActivityEvolinciteUserMutation> {
    const statement = `mutation DeleteEvolinciteActivityEvolinciteUser($input: DeleteEvolinciteActivityEvolinciteUserInput!, $condition: ModelEvolinciteActivityEvolinciteUserConditionInput) {
        deleteEvolinciteActivityEvolinciteUser(input: $input, condition: $condition) {
          __typename
          id
          evolinciteActivityId
          evolinciteUserId
          evolinciteActivity {
            __typename
            id
            name
            description
            startDate
            endDate
            color
            type
            priority
            meta
            taskState
            documents
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteActivityEvolinciteUserMutation>(
      response.data.deleteEvolinciteActivityEvolinciteUser
    );
  }
  async CreateEvolinciteUserEvolinciteCrmNegotiation(
    input: CreateEvolinciteUserEvolinciteCrmNegotiationInput,
    condition?: ModelEvolinciteUserEvolinciteCrmNegotiationConditionInput
  ): Promise<CreateEvolinciteUserEvolinciteCrmNegotiationMutation> {
    const statement = `mutation CreateEvolinciteUserEvolinciteCrmNegotiation($input: CreateEvolinciteUserEvolinciteCrmNegotiationInput!, $condition: ModelEvolinciteUserEvolinciteCrmNegotiationConditionInput) {
        createEvolinciteUserEvolinciteCrmNegotiation(
          input: $input
          condition: $condition
        ) {
          __typename
          id
          evolinciteCrmNegotiationId
          evolinciteUserId
          evolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteUserEvolinciteCrmNegotiationMutation>(
      response.data.createEvolinciteUserEvolinciteCrmNegotiation
    );
  }
  async UpdateEvolinciteUserEvolinciteCrmNegotiation(
    input: UpdateEvolinciteUserEvolinciteCrmNegotiationInput,
    condition?: ModelEvolinciteUserEvolinciteCrmNegotiationConditionInput
  ): Promise<UpdateEvolinciteUserEvolinciteCrmNegotiationMutation> {
    const statement = `mutation UpdateEvolinciteUserEvolinciteCrmNegotiation($input: UpdateEvolinciteUserEvolinciteCrmNegotiationInput!, $condition: ModelEvolinciteUserEvolinciteCrmNegotiationConditionInput) {
        updateEvolinciteUserEvolinciteCrmNegotiation(
          input: $input
          condition: $condition
        ) {
          __typename
          id
          evolinciteCrmNegotiationId
          evolinciteUserId
          evolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteUserEvolinciteCrmNegotiationMutation>(
      response.data.updateEvolinciteUserEvolinciteCrmNegotiation
    );
  }
  async DeleteEvolinciteUserEvolinciteCrmNegotiation(
    input: DeleteEvolinciteUserEvolinciteCrmNegotiationInput,
    condition?: ModelEvolinciteUserEvolinciteCrmNegotiationConditionInput
  ): Promise<DeleteEvolinciteUserEvolinciteCrmNegotiationMutation> {
    const statement = `mutation DeleteEvolinciteUserEvolinciteCrmNegotiation($input: DeleteEvolinciteUserEvolinciteCrmNegotiationInput!, $condition: ModelEvolinciteUserEvolinciteCrmNegotiationConditionInput) {
        deleteEvolinciteUserEvolinciteCrmNegotiation(
          input: $input
          condition: $condition
        ) {
          __typename
          id
          evolinciteCrmNegotiationId
          evolinciteUserId
          evolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteUserEvolinciteCrmNegotiationMutation>(
      response.data.deleteEvolinciteUserEvolinciteCrmNegotiation
    );
  }
  async CreateEvolinciteRoomEvolinciteUser(
    input: CreateEvolinciteRoomEvolinciteUserInput,
    condition?: ModelEvolinciteRoomEvolinciteUserConditionInput
  ): Promise<CreateEvolinciteRoomEvolinciteUserMutation> {
    const statement = `mutation CreateEvolinciteRoomEvolinciteUser($input: CreateEvolinciteRoomEvolinciteUserInput!, $condition: ModelEvolinciteRoomEvolinciteUserConditionInput) {
        createEvolinciteRoomEvolinciteUser(input: $input, condition: $condition) {
          __typename
          id
          evolinciteRoomId
          evolinciteUserId
          evolinciteRoom {
            __typename
            id
            Key
            name
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <CreateEvolinciteRoomEvolinciteUserMutation>(
      response.data.createEvolinciteRoomEvolinciteUser
    );
  }
  async UpdateEvolinciteRoomEvolinciteUser(
    input: UpdateEvolinciteRoomEvolinciteUserInput,
    condition?: ModelEvolinciteRoomEvolinciteUserConditionInput
  ): Promise<UpdateEvolinciteRoomEvolinciteUserMutation> {
    const statement = `mutation UpdateEvolinciteRoomEvolinciteUser($input: UpdateEvolinciteRoomEvolinciteUserInput!, $condition: ModelEvolinciteRoomEvolinciteUserConditionInput) {
        updateEvolinciteRoomEvolinciteUser(input: $input, condition: $condition) {
          __typename
          id
          evolinciteRoomId
          evolinciteUserId
          evolinciteRoom {
            __typename
            id
            Key
            name
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <UpdateEvolinciteRoomEvolinciteUserMutation>(
      response.data.updateEvolinciteRoomEvolinciteUser
    );
  }
  async DeleteEvolinciteRoomEvolinciteUser(
    input: DeleteEvolinciteRoomEvolinciteUserInput,
    condition?: ModelEvolinciteRoomEvolinciteUserConditionInput
  ): Promise<DeleteEvolinciteRoomEvolinciteUserMutation> {
    const statement = `mutation DeleteEvolinciteRoomEvolinciteUser($input: DeleteEvolinciteRoomEvolinciteUserInput!, $condition: ModelEvolinciteRoomEvolinciteUserConditionInput) {
        deleteEvolinciteRoomEvolinciteUser(input: $input, condition: $condition) {
          __typename
          id
          evolinciteRoomId
          evolinciteUserId
          evolinciteRoom {
            __typename
            id
            Key
            name
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input,
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <DeleteEvolinciteRoomEvolinciteUserMutation>(
      response.data.deleteEvolinciteRoomEvolinciteUser
    );
  }
  async GetEvolinciteCompetence(
    id: string
  ): Promise<GetEvolinciteCompetenceQuery> {
    const statement = `query GetEvolinciteCompetence($id: ID!) {
        getEvolinciteCompetence(id: $id) {
          __typename
          id
          name
          description
          content
          application
          state
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteCompetenceEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteCompetenceQuery>response.data.getEvolinciteCompetence;
  }
  async ListEvolinciteCompetences(
    filter?: ModelEvolinciteCompetenceFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteCompetencesQuery> {
    const statement = `query ListEvolinciteCompetences($filter: ModelEvolinciteCompetenceFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteCompetences(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteCompetenceEvolinciteSyllabusId
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteCompetencesQuery>(
      response.data.listEvolinciteCompetences
    );
  }
  async GetEvolinciteCourse(id: string): Promise<GetEvolinciteCourseQuery> {
    const statement = `query GetEvolinciteCourse($id: ID!) {
        getEvolinciteCourse(id: $id) {
          __typename
          id
          name
          description
          durationUnit
          duration
          objectives
          application
          state
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteCourseEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteCourseQuery>response.data.getEvolinciteCourse;
  }
  async ListEvolinciteCourses(
    filter?: ModelEvolinciteCourseFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteCoursesQuery> {
    const statement = `query ListEvolinciteCourses($filter: ModelEvolinciteCourseFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteCourses(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            description
            durationUnit
            duration
            objectives
            application
            state
            createdAt
            updatedAt
            evolinciteCourseEvolinciteSyllabusId
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteCoursesQuery>response.data.listEvolinciteCourses;
  }
  async GetEvolinciteSyllabus(id: string): Promise<GetEvolinciteSyllabusQuery> {
    const statement = `query GetEvolinciteSyllabus($id: ID!) {
        getEvolinciteSyllabus(id: $id) {
          __typename
          id
          name
          description
          content
          application
          state
          EvolinciteCompetence {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteCompetenceEvolinciteSyllabusId
          }
          createdAt
          updatedAt
          evolinciteSyllabusEvolinciteCompetenceId
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteSyllabusQuery>response.data.getEvolinciteSyllabus;
  }
  async ListEvolinciteSyllabi(
    filter?: ModelEvolinciteSyllabusFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteSyllabiQuery> {
    const statement = `query ListEvolinciteSyllabi($filter: ModelEvolinciteSyllabusFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteSyllabi(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteSyllabiQuery>response.data.listEvolinciteSyllabi;
  }
  async GetEvolinciteUserAnswers(
    id: string
  ): Promise<GetEvolinciteUserAnswersQuery> {
    const statement = `query GetEvolinciteUserAnswers($id: ID!) {
        getEvolinciteUserAnswers(id: $id) {
          __typename
          id
          answers
          application
          state
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteUserAnswersEvolinciteUserId
          evolinciteUserAnswersEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteUserAnswersQuery>(
      response.data.getEvolinciteUserAnswers
    );
  }
  async ListEvolinciteUserAnswers(
    filter?: ModelEvolinciteUserAnswersFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteUserAnswersQuery> {
    const statement = `query ListEvolinciteUserAnswers($filter: ModelEvolinciteUserAnswersFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteUserAnswers(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            answers
            application
            state
            createdAt
            updatedAt
            evolinciteUserAnswersEvolinciteUserId
            evolinciteUserAnswersEvolinciteSyllabusId
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteUserAnswersQuery>(
      response.data.listEvolinciteUserAnswers
    );
  }
  async GetEvolinciteProcessType(
    id: string
  ): Promise<GetEvolinciteProcessTypeQuery> {
    const statement = `query GetEvolinciteProcessType($id: ID!) {
        getEvolinciteProcessType(id: $id) {
          __typename
          id
          name
          order
          sellerCommission
          referrerCommission
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteProcessTypeQuery>(
      response.data.getEvolinciteProcessType
    );
  }
  async ListEvolinciteProcessTypes(
    filter?: ModelEvolinciteProcessTypeFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteProcessTypesQuery> {
    const statement = `query ListEvolinciteProcessTypes($filter: ModelEvolinciteProcessTypeFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteProcessTypes(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            order
            sellerCommission
            referrerCommission
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteProcessTypesQuery>(
      response.data.listEvolinciteProcessTypes
    );
  }
  async EvolinciteProcessTypesByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteProcessTypeFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteProcessTypesByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteProcessTypesByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteProcessTypeFilterInput, $limit: Int, $nextToken: String) {
        evolinciteProcessTypesByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            order
            sellerCommission
            referrerCommission
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteProcessTypesByEvolinciteCompanyIDQuery>(
      response.data.evolinciteProcessTypesByEvolinciteCompanyID
    );
  }
  async GetEvolinciteExpenseType(
    id: string
  ): Promise<GetEvolinciteExpenseTypeQuery> {
    const statement = `query GetEvolinciteExpenseType($id: ID!) {
        getEvolinciteExpenseType(id: $id) {
          __typename
          id
          name
          type
          setting
          state
          EvolinciteExpenses {
            __typename
            nextToken
          }
          evolinciteCompanyID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteExpenseTypeQuery>(
      response.data.getEvolinciteExpenseType
    );
  }
  async ListEvolinciteExpenseTypes(
    filter?: ModelEvolinciteExpenseTypeFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteExpenseTypesQuery> {
    const statement = `query ListEvolinciteExpenseTypes($filter: ModelEvolinciteExpenseTypeFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteExpenseTypes(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            type
            setting
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteExpenseTypesQuery>(
      response.data.listEvolinciteExpenseTypes
    );
  }
  async EvolinciteExpenseTypesByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteExpenseTypeFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteExpenseTypesByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteExpenseTypesByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteExpenseTypeFilterInput, $limit: Int, $nextToken: String) {
        evolinciteExpenseTypesByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            type
            setting
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteExpenseTypesByEvolinciteCompanyIDQuery>(
      response.data.evolinciteExpenseTypesByEvolinciteCompanyID
    );
  }
  async GetEvolinciteExpense(id: string): Promise<GetEvolinciteExpenseQuery> {
    const statement = `query GetEvolinciteExpense($id: ID!) {
        getEvolinciteExpense(id: $id) {
          __typename
          id
          amount
          process
          expenseState
          expenseDate
          observations
          voucher
          transactionType
          reference
          state
          evolinciteExpenseTypeID
          EvolinciteExpenseType {
            __typename
            id
            name
            type
            setting
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserResponsibleID
          EvolinciteUserResponsible {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteExpenseQuery>response.data.getEvolinciteExpense;
  }
  async ListEvolinciteExpenses(
    filter?: ModelEvolinciteExpenseFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteExpensesQuery> {
    const statement = `query ListEvolinciteExpenses($filter: ModelEvolinciteExpenseFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteExpenses(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            amount
            process
            expenseState
            expenseDate
            observations
            voucher
            transactionType
            reference
            state
            evolinciteExpenseTypeID
            evolinciteCrmNegotiationID
            evolinciteCompanyID
            evolinciteUserID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteExpensesQuery>response.data.listEvolinciteExpenses;
  }
  async EvolinciteExpensesByEvolinciteExpenseTypeID(
    evolinciteExpenseTypeID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteExpenseFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteExpensesByEvolinciteExpenseTypeIDQuery> {
    const statement = `query EvolinciteExpensesByEvolinciteExpenseTypeID($evolinciteExpenseTypeID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteExpenseFilterInput, $limit: Int, $nextToken: String) {
        evolinciteExpensesByEvolinciteExpenseTypeID(
          evolinciteExpenseTypeID: $evolinciteExpenseTypeID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            amount
            process
            expenseState
            expenseDate
            observations
            voucher
            transactionType
            reference
            state
            evolinciteExpenseTypeID
            evolinciteCrmNegotiationID
            evolinciteCompanyID
            evolinciteUserID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteExpenseTypeID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteExpensesByEvolinciteExpenseTypeIDQuery>(
      response.data.evolinciteExpensesByEvolinciteExpenseTypeID
    );
  }
  async EvolinciteExpensesByEvolinciteCrmNegotiationID(
    evolinciteCrmNegotiationID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteExpenseFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteExpensesByEvolinciteCrmNegotiationIDQuery> {
    const statement = `query EvolinciteExpensesByEvolinciteCrmNegotiationID($evolinciteCrmNegotiationID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteExpenseFilterInput, $limit: Int, $nextToken: String) {
        evolinciteExpensesByEvolinciteCrmNegotiationID(
          evolinciteCrmNegotiationID: $evolinciteCrmNegotiationID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            amount
            process
            expenseState
            expenseDate
            observations
            voucher
            transactionType
            reference
            state
            evolinciteExpenseTypeID
            evolinciteCrmNegotiationID
            evolinciteCompanyID
            evolinciteUserID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCrmNegotiationID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteExpensesByEvolinciteCrmNegotiationIDQuery>(
      response.data.evolinciteExpensesByEvolinciteCrmNegotiationID
    );
  }
  async EvolinciteExpensesByEvolinciteCompanyIDAndCreatedAt(
    evolinciteCompanyID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteExpenseFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteExpensesByEvolinciteCompanyIDAndCreatedAtQuery> {
    const statement = `query EvolinciteExpensesByEvolinciteCompanyIDAndCreatedAt($evolinciteCompanyID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteExpenseFilterInput, $limit: Int, $nextToken: String) {
        evolinciteExpensesByEvolinciteCompanyIDAndCreatedAt(
          evolinciteCompanyID: $evolinciteCompanyID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            amount
            process
            expenseState
            expenseDate
            observations
            voucher
            transactionType
            reference
            state
            evolinciteExpenseTypeID
            evolinciteCrmNegotiationID
            evolinciteCompanyID
            evolinciteUserID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteExpensesByEvolinciteCompanyIDAndCreatedAtQuery>(
      response.data.evolinciteExpensesByEvolinciteCompanyIDAndCreatedAt
    );
  }
  async EvolinciteExpensesByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteExpenseFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteExpensesByEvolinciteUserIDQuery> {
    const statement = `query EvolinciteExpensesByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteExpenseFilterInput, $limit: Int, $nextToken: String) {
        evolinciteExpensesByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            amount
            process
            expenseState
            expenseDate
            observations
            voucher
            transactionType
            reference
            state
            evolinciteExpenseTypeID
            evolinciteCrmNegotiationID
            evolinciteCompanyID
            evolinciteUserID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteExpensesByEvolinciteUserIDQuery>(
      response.data.evolinciteExpensesByEvolinciteUserID
    );
  }
  async EvolinciteExpensesByEvolinciteUserResponsibleIDAndCreatedAt(
    evolinciteUserResponsibleID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteExpenseFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteExpensesByEvolinciteUserResponsibleIDAndCreatedAtQuery> {
    const statement = `query EvolinciteExpensesByEvolinciteUserResponsibleIDAndCreatedAt($evolinciteUserResponsibleID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteExpenseFilterInput, $limit: Int, $nextToken: String) {
        evolinciteExpensesByEvolinciteUserResponsibleIDAndCreatedAt(
          evolinciteUserResponsibleID: $evolinciteUserResponsibleID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            amount
            process
            expenseState
            expenseDate
            observations
            voucher
            transactionType
            reference
            state
            evolinciteExpenseTypeID
            evolinciteCrmNegotiationID
            evolinciteCompanyID
            evolinciteUserID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserResponsibleID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteExpensesByEvolinciteUserResponsibleIDAndCreatedAtQuery>(
      response.data.evolinciteExpensesByEvolinciteUserResponsibleIDAndCreatedAt
    );
  }
  async GetEvolinciteUserEvolinciteJobTitle(
    id: string
  ): Promise<GetEvolinciteUserEvolinciteJobTitleQuery> {
    const statement = `query GetEvolinciteUserEvolinciteJobTitle($id: ID!) {
        getEvolinciteUserEvolinciteJobTitle(id: $id) {
          __typename
          id
          state
          evolinciteJobTitleID
          EvolinciteJobTitle {
            __typename
            id
            name
            salary
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteUserEvolinciteJobTitleQuery>(
      response.data.getEvolinciteUserEvolinciteJobTitle
    );
  }
  async ListEvolinciteUserEvolinciteJobTitles(
    filter?: ModelEvolinciteUserEvolinciteJobTitleFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteUserEvolinciteJobTitlesQuery> {
    const statement = `query ListEvolinciteUserEvolinciteJobTitles($filter: ModelEvolinciteUserEvolinciteJobTitleFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteUserEvolinciteJobTitles(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            state
            evolinciteJobTitleID
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteUserEvolinciteJobTitlesQuery>(
      response.data.listEvolinciteUserEvolinciteJobTitles
    );
  }
  async EvolinciteUserEvolinciteJobTitlesByEvolinciteJobTitleID(
    evolinciteJobTitleID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteUserEvolinciteJobTitleFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteUserEvolinciteJobTitlesByEvolinciteJobTitleIDQuery> {
    const statement = `query EvolinciteUserEvolinciteJobTitlesByEvolinciteJobTitleID($evolinciteJobTitleID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteUserEvolinciteJobTitleFilterInput, $limit: Int, $nextToken: String) {
        evolinciteUserEvolinciteJobTitlesByEvolinciteJobTitleID(
          evolinciteJobTitleID: $evolinciteJobTitleID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            state
            evolinciteJobTitleID
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteJobTitleID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteUserEvolinciteJobTitlesByEvolinciteJobTitleIDQuery>(
      response.data.evolinciteUserEvolinciteJobTitlesByEvolinciteJobTitleID
    );
  }
  async EvolinciteUserEvolinciteJobTitlesByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteUserEvolinciteJobTitleFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteUserEvolinciteJobTitlesByEvolinciteUserIDQuery> {
    const statement = `query EvolinciteUserEvolinciteJobTitlesByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteUserEvolinciteJobTitleFilterInput, $limit: Int, $nextToken: String) {
        evolinciteUserEvolinciteJobTitlesByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            state
            evolinciteJobTitleID
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteUserEvolinciteJobTitlesByEvolinciteUserIDQuery>(
      response.data.evolinciteUserEvolinciteJobTitlesByEvolinciteUserID
    );
  }
  async EvolinciteUserEvolinciteJobTitlesByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteUserEvolinciteJobTitleFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteUserEvolinciteJobTitlesByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteUserEvolinciteJobTitlesByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteUserEvolinciteJobTitleFilterInput, $limit: Int, $nextToken: String) {
        evolinciteUserEvolinciteJobTitlesByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            state
            evolinciteJobTitleID
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteUserEvolinciteJobTitlesByEvolinciteCompanyIDQuery>(
      response.data.evolinciteUserEvolinciteJobTitlesByEvolinciteCompanyID
    );
  }
  async GetEvolinciteJobTitle(id: string): Promise<GetEvolinciteJobTitleQuery> {
    const statement = `query GetEvolinciteJobTitle($id: ID!) {
        getEvolinciteJobTitle(id: $id) {
          __typename
          id
          name
          salary
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteJobTitleQuery>response.data.getEvolinciteJobTitle;
  }
  async ListEvolinciteJobTitles(
    filter?: ModelEvolinciteJobTitleFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteJobTitlesQuery> {
    const statement = `query ListEvolinciteJobTitles($filter: ModelEvolinciteJobTitleFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteJobTitles(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            salary
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteJobTitlesQuery>response.data.listEvolinciteJobTitles;
  }
  async EvolinciteJobTitlesByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteJobTitleFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteJobTitlesByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteJobTitlesByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteJobTitleFilterInput, $limit: Int, $nextToken: String) {
        evolinciteJobTitlesByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            salary
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteJobTitlesByEvolinciteCompanyIDQuery>(
      response.data.evolinciteJobTitlesByEvolinciteCompanyID
    );
  }
  async GetEvolinciteWalletPayment(
    id: string
  ): Promise<GetEvolinciteWalletPaymentQuery> {
    const statement = `query GetEvolinciteWalletPayment($id: ID!) {
        getEvolinciteWalletPayment(id: $id) {
          __typename
          id
          amount
          scheduledDate
          datePayment
          paymentStatus
          prePayment
          postPayment
          observations
          voucher
          transactionType
          reference
          amountInterest
          amountCollection
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserReferrerID
          EvolinciteUserReferrer {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserSellerID
          EvolinciteUserSeller {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteCustomerID
          EvolinciteCustomer {
            __typename
            id
            name
            lastName
            documentType
            documentNumber
            phone
            optionalPhone
            email
            picture
            birthDate
            municipality
            documents
            address
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          evolinciteUserResponsibleID
          EvolinciteUserResponsible {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteWalletPaymentQuery>(
      response.data.getEvolinciteWalletPayment
    );
  }
  async ListEvolinciteWalletPayments(
    filter?: ModelEvolinciteWalletPaymentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteWalletPaymentsQuery> {
    const statement = `query ListEvolinciteWalletPayments($filter: ModelEvolinciteWalletPaymentFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteWalletPayments(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            amount
            scheduledDate
            datePayment
            paymentStatus
            prePayment
            postPayment
            observations
            voucher
            transactionType
            reference
            amountInterest
            amountCollection
            state
            evolinciteCompanyID
            evolinciteUserReferrerID
            evolinciteUserSellerID
            evolinciteCrmNegotiationID
            evolinciteCustomerID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteWalletPaymentsQuery>(
      response.data.listEvolinciteWalletPayments
    );
  }
  async EvolinciteWalletPaymentsByEvolinciteCompanyIDAndCreatedAt(
    evolinciteCompanyID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteWalletPaymentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteWalletPaymentsByEvolinciteCompanyIDAndCreatedAtQuery> {
    const statement = `query EvolinciteWalletPaymentsByEvolinciteCompanyIDAndCreatedAt($evolinciteCompanyID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteWalletPaymentFilterInput, $limit: Int, $nextToken: String) {
        evolinciteWalletPaymentsByEvolinciteCompanyIDAndCreatedAt(
          evolinciteCompanyID: $evolinciteCompanyID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            amount
            scheduledDate
            datePayment
            paymentStatus
            prePayment
            postPayment
            observations
            voucher
            transactionType
            reference
            amountInterest
            amountCollection
            state
            evolinciteCompanyID
            evolinciteUserReferrerID
            evolinciteUserSellerID
            evolinciteCrmNegotiationID
            evolinciteCustomerID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteWalletPaymentsByEvolinciteCompanyIDAndCreatedAtQuery>(
      response.data.evolinciteWalletPaymentsByEvolinciteCompanyIDAndCreatedAt
    );
  }
  async EvolinciteWalletPaymentsByEvolinciteUserReferrerID(
    evolinciteUserReferrerID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteWalletPaymentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteWalletPaymentsByEvolinciteUserReferrerIDQuery> {
    const statement = `query EvolinciteWalletPaymentsByEvolinciteUserReferrerID($evolinciteUserReferrerID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteWalletPaymentFilterInput, $limit: Int, $nextToken: String) {
        evolinciteWalletPaymentsByEvolinciteUserReferrerID(
          evolinciteUserReferrerID: $evolinciteUserReferrerID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            amount
            scheduledDate
            datePayment
            paymentStatus
            prePayment
            postPayment
            observations
            voucher
            transactionType
            reference
            amountInterest
            amountCollection
            state
            evolinciteCompanyID
            evolinciteUserReferrerID
            evolinciteUserSellerID
            evolinciteCrmNegotiationID
            evolinciteCustomerID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserReferrerID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteWalletPaymentsByEvolinciteUserReferrerIDQuery>(
      response.data.evolinciteWalletPaymentsByEvolinciteUserReferrerID
    );
  }
  async EvolinciteWalletPaymentsByEvolinciteUserSellerID(
    evolinciteUserSellerID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteWalletPaymentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteWalletPaymentsByEvolinciteUserSellerIDQuery> {
    const statement = `query EvolinciteWalletPaymentsByEvolinciteUserSellerID($evolinciteUserSellerID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteWalletPaymentFilterInput, $limit: Int, $nextToken: String) {
        evolinciteWalletPaymentsByEvolinciteUserSellerID(
          evolinciteUserSellerID: $evolinciteUserSellerID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            amount
            scheduledDate
            datePayment
            paymentStatus
            prePayment
            postPayment
            observations
            voucher
            transactionType
            reference
            amountInterest
            amountCollection
            state
            evolinciteCompanyID
            evolinciteUserReferrerID
            evolinciteUserSellerID
            evolinciteCrmNegotiationID
            evolinciteCustomerID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserSellerID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteWalletPaymentsByEvolinciteUserSellerIDQuery>(
      response.data.evolinciteWalletPaymentsByEvolinciteUserSellerID
    );
  }
  async EvolinciteWalletPaymentsByEvolinciteCrmNegotiationID(
    evolinciteCrmNegotiationID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteWalletPaymentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteWalletPaymentsByEvolinciteCrmNegotiationIDQuery> {
    const statement = `query EvolinciteWalletPaymentsByEvolinciteCrmNegotiationID($evolinciteCrmNegotiationID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteWalletPaymentFilterInput, $limit: Int, $nextToken: String) {
        evolinciteWalletPaymentsByEvolinciteCrmNegotiationID(
          evolinciteCrmNegotiationID: $evolinciteCrmNegotiationID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            amount
            scheduledDate
            datePayment
            paymentStatus
            prePayment
            postPayment
            observations
            voucher
            transactionType
            reference
            amountInterest
            amountCollection
            state
            evolinciteCompanyID
            evolinciteUserReferrerID
            evolinciteUserSellerID
            evolinciteCrmNegotiationID
            evolinciteCustomerID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCrmNegotiationID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteWalletPaymentsByEvolinciteCrmNegotiationIDQuery>(
      response.data.evolinciteWalletPaymentsByEvolinciteCrmNegotiationID
    );
  }
  async EvolinciteWalletPaymentsByEvolinciteCustomerID(
    evolinciteCustomerID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteWalletPaymentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteWalletPaymentsByEvolinciteCustomerIDQuery> {
    const statement = `query EvolinciteWalletPaymentsByEvolinciteCustomerID($evolinciteCustomerID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteWalletPaymentFilterInput, $limit: Int, $nextToken: String) {
        evolinciteWalletPaymentsByEvolinciteCustomerID(
          evolinciteCustomerID: $evolinciteCustomerID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            amount
            scheduledDate
            datePayment
            paymentStatus
            prePayment
            postPayment
            observations
            voucher
            transactionType
            reference
            amountInterest
            amountCollection
            state
            evolinciteCompanyID
            evolinciteUserReferrerID
            evolinciteUserSellerID
            evolinciteCrmNegotiationID
            evolinciteCustomerID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCustomerID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteWalletPaymentsByEvolinciteCustomerIDQuery>(
      response.data.evolinciteWalletPaymentsByEvolinciteCustomerID
    );
  }
  async EvolinciteWalletPaymentsByEvolinciteUserResponsibleIDAndCreatedAt(
    evolinciteUserResponsibleID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteWalletPaymentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteWalletPaymentsByEvolinciteUserResponsibleIDAndCreatedAtQuery> {
    const statement = `query EvolinciteWalletPaymentsByEvolinciteUserResponsibleIDAndCreatedAt($evolinciteUserResponsibleID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteWalletPaymentFilterInput, $limit: Int, $nextToken: String) {
        evolinciteWalletPaymentsByEvolinciteUserResponsibleIDAndCreatedAt(
          evolinciteUserResponsibleID: $evolinciteUserResponsibleID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            amount
            scheduledDate
            datePayment
            paymentStatus
            prePayment
            postPayment
            observations
            voucher
            transactionType
            reference
            amountInterest
            amountCollection
            state
            evolinciteCompanyID
            evolinciteUserReferrerID
            evolinciteUserSellerID
            evolinciteCrmNegotiationID
            evolinciteCustomerID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserResponsibleID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <
      EvolinciteWalletPaymentsByEvolinciteUserResponsibleIDAndCreatedAtQuery
    >response.data
      .evolinciteWalletPaymentsByEvolinciteUserResponsibleIDAndCreatedAt;
  }
  async GetEvolinciteCrmNegotiationField(
    id: string
  ): Promise<GetEvolinciteCrmNegotiationFieldQuery> {
    const statement = `query GetEvolinciteCrmNegotiationField($id: ID!) {
        getEvolinciteCrmNegotiationField(id: $id) {
          __typename
          id
          field
          type
          required
          order
          state
          meta
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFieldValues {
            __typename
            nextToken
          }
          evolinciteCrmNegotiationSectionID
          EvolinciteCrmNegotiationSection {
            __typename
            id
            name
            order
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteCrmNegotiationFieldQuery>(
      response.data.getEvolinciteCrmNegotiationField
    );
  }
  async ListEvolinciteCrmNegotiationFields(
    filter?: ModelEvolinciteCrmNegotiationFieldFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteCrmNegotiationFieldsQuery> {
    const statement = `query ListEvolinciteCrmNegotiationFields($filter: ModelEvolinciteCrmNegotiationFieldFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteCrmNegotiationFields(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            field
            type
            required
            order
            state
            meta
            evolinciteCompanyID
            evolinciteCrmNegotiationSectionID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteCrmNegotiationFieldsQuery>(
      response.data.listEvolinciteCrmNegotiationFields
    );
  }
  async EvolinciteCrmNegotiationFieldsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmNegotiationFieldFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmNegotiationFieldsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteCrmNegotiationFieldsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmNegotiationFieldFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmNegotiationFieldsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            field
            type
            required
            order
            state
            meta
            evolinciteCompanyID
            evolinciteCrmNegotiationSectionID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCrmNegotiationFieldsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteCrmNegotiationFieldsByEvolinciteCompanyID
    );
  }
  async EvolinciteCrmNegotiationFieldsByEvolinciteCrmNegotiationSectionID(
    evolinciteCrmNegotiationSectionID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmNegotiationFieldFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmNegotiationFieldsByEvolinciteCrmNegotiationSectionIDQuery> {
    const statement = `query EvolinciteCrmNegotiationFieldsByEvolinciteCrmNegotiationSectionID($evolinciteCrmNegotiationSectionID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmNegotiationFieldFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmNegotiationFieldsByEvolinciteCrmNegotiationSectionID(
          evolinciteCrmNegotiationSectionID: $evolinciteCrmNegotiationSectionID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            field
            type
            required
            order
            state
            meta
            evolinciteCompanyID
            evolinciteCrmNegotiationSectionID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCrmNegotiationSectionID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <
      EvolinciteCrmNegotiationFieldsByEvolinciteCrmNegotiationSectionIDQuery
    >response.data
      .evolinciteCrmNegotiationFieldsByEvolinciteCrmNegotiationSectionID;
  }
  async GetEvolinciteCrmNegotiationSection(
    id: string
  ): Promise<GetEvolinciteCrmNegotiationSectionQuery> {
    const statement = `query GetEvolinciteCrmNegotiationSection($id: ID!) {
        getEvolinciteCrmNegotiationSection(id: $id) {
          __typename
          id
          name
          order
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFields {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteCrmNegotiationSectionQuery>(
      response.data.getEvolinciteCrmNegotiationSection
    );
  }
  async ListEvolinciteCrmNegotiationSections(
    filter?: ModelEvolinciteCrmNegotiationSectionFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteCrmNegotiationSectionsQuery> {
    const statement = `query ListEvolinciteCrmNegotiationSections($filter: ModelEvolinciteCrmNegotiationSectionFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteCrmNegotiationSections(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            order
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteCrmNegotiationSectionsQuery>(
      response.data.listEvolinciteCrmNegotiationSections
    );
  }
  async EvolinciteCrmNegotiationSectionsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmNegotiationSectionFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmNegotiationSectionsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteCrmNegotiationSectionsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmNegotiationSectionFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmNegotiationSectionsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            order
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCrmNegotiationSectionsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteCrmNegotiationSectionsByEvolinciteCompanyID
    );
  }
  async GetEvolinciteCrmAutomation(
    id: string
  ): Promise<GetEvolinciteCrmAutomationQuery> {
    const statement = `query GetEvolinciteCrmAutomation($id: ID!) {
        getEvolinciteCrmAutomation(id: $id) {
          __typename
          id
          name
          rule
          setting
          order
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteCrmStateID
          EvolinciteCrmState {
            __typename
            id
            name
            description
            publicDescription
            color
            order
            state
            evolinciteCompanyID
            evolinciteCrmPipelineID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteCrmAutomationQuery>(
      response.data.getEvolinciteCrmAutomation
    );
  }
  async ListEvolinciteCrmAutomations(
    filter?: ModelEvolinciteCrmAutomationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteCrmAutomationsQuery> {
    const statement = `query ListEvolinciteCrmAutomations($filter: ModelEvolinciteCrmAutomationFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteCrmAutomations(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            rule
            setting
            order
            state
            evolinciteCompanyID
            evolinciteCrmStateID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteCrmAutomationsQuery>(
      response.data.listEvolinciteCrmAutomations
    );
  }
  async EvolinciteCrmAutomationsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmAutomationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmAutomationsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteCrmAutomationsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmAutomationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmAutomationsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            rule
            setting
            order
            state
            evolinciteCompanyID
            evolinciteCrmStateID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCrmAutomationsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteCrmAutomationsByEvolinciteCompanyID
    );
  }
  async EvolinciteCrmAutomationsByEvolinciteCrmStateIDAndOrder(
    evolinciteCrmStateID: string,
    order?: ModelFloatKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmAutomationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmAutomationsByEvolinciteCrmStateIDAndOrderQuery> {
    const statement = `query EvolinciteCrmAutomationsByEvolinciteCrmStateIDAndOrder($evolinciteCrmStateID: ID!, $order: ModelFloatKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmAutomationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmAutomationsByEvolinciteCrmStateIDAndOrder(
          evolinciteCrmStateID: $evolinciteCrmStateID
          order: $order
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            rule
            setting
            order
            state
            evolinciteCompanyID
            evolinciteCrmStateID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCrmStateID,
    };
    if (order) {
      gqlAPIServiceArguments.order = order;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCrmAutomationsByEvolinciteCrmStateIDAndOrderQuery>(
      response.data.evolinciteCrmAutomationsByEvolinciteCrmStateIDAndOrder
    );
  }
  async GetEvolinciteComment(id: string): Promise<GetEvolinciteCommentQuery> {
    const statement = `query GetEvolinciteComment($id: ID!) {
        getEvolinciteComment(id: $id) {
          __typename
          id
          files
          content
          pinned
          state
          evolinciteUserID
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteCommentQuery>response.data.getEvolinciteComment;
  }
  async ListEvolinciteComments(
    filter?: ModelEvolinciteCommentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteCommentsQuery> {
    const statement = `query ListEvolinciteComments($filter: ModelEvolinciteCommentFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteComments(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            files
            content
            pinned
            state
            evolinciteUserID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteCommentsQuery>response.data.listEvolinciteComments;
  }
  async EvolinciteCommentsByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCommentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCommentsByEvolinciteUserIDQuery> {
    const statement = `query EvolinciteCommentsByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCommentFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCommentsByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            files
            content
            pinned
            state
            evolinciteUserID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCommentsByEvolinciteUserIDQuery>(
      response.data.evolinciteCommentsByEvolinciteUserID
    );
  }
  async EvolinciteCommentsByEvolinciteCrmNegotiationIDAndCreatedAt(
    evolinciteCrmNegotiationID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCommentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCommentsByEvolinciteCrmNegotiationIDAndCreatedAtQuery> {
    const statement = `query EvolinciteCommentsByEvolinciteCrmNegotiationIDAndCreatedAt($evolinciteCrmNegotiationID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCommentFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCommentsByEvolinciteCrmNegotiationIDAndCreatedAt(
          evolinciteCrmNegotiationID: $evolinciteCrmNegotiationID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            files
            content
            pinned
            state
            evolinciteUserID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCrmNegotiationID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCommentsByEvolinciteCrmNegotiationIDAndCreatedAtQuery>(
      response.data.evolinciteCommentsByEvolinciteCrmNegotiationIDAndCreatedAt
    );
  }
  async GetEvolinciteActivity(id: string): Promise<GetEvolinciteActivityQuery> {
    const statement = `query GetEvolinciteActivity($id: ID!) {
        getEvolinciteActivity(id: $id) {
          __typename
          id
          name
          description
          startDate
          endDate
          color
          type
          priority
          meta
          taskState
          documents
          state
          evolinciteUserID
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          Participants {
            __typename
            nextToken
          }
          evolinciteCompanyID
          evolinciteCrmNegotiationID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteActivityQuery>response.data.getEvolinciteActivity;
  }
  async ListEvolinciteActivities(
    filter?: ModelEvolinciteActivityFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteActivitiesQuery> {
    const statement = `query ListEvolinciteActivities($filter: ModelEvolinciteActivityFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteActivities(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            description
            startDate
            endDate
            color
            type
            priority
            meta
            taskState
            documents
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteActivitiesQuery>(
      response.data.listEvolinciteActivities
    );
  }
  async EvolinciteActivitiesByEvolinciteUserIDAndEndDate(
    evolinciteUserID: string,
    endDate?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteActivityFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteActivitiesByEvolinciteUserIDAndEndDateQuery> {
    const statement = `query EvolinciteActivitiesByEvolinciteUserIDAndEndDate($evolinciteUserID: ID!, $endDate: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteActivityFilterInput, $limit: Int, $nextToken: String) {
        evolinciteActivitiesByEvolinciteUserIDAndEndDate(
          evolinciteUserID: $evolinciteUserID
          endDate: $endDate
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            description
            startDate
            endDate
            color
            type
            priority
            meta
            taskState
            documents
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (endDate) {
      gqlAPIServiceArguments.endDate = endDate;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteActivitiesByEvolinciteUserIDAndEndDateQuery>(
      response.data.evolinciteActivitiesByEvolinciteUserIDAndEndDate
    );
  }
  async EvolinciteActivitiesByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteActivityFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteActivitiesByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteActivitiesByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteActivityFilterInput, $limit: Int, $nextToken: String) {
        evolinciteActivitiesByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            description
            startDate
            endDate
            color
            type
            priority
            meta
            taskState
            documents
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteActivitiesByEvolinciteCompanyIDQuery>(
      response.data.evolinciteActivitiesByEvolinciteCompanyID
    );
  }
  async EvolinciteActivitiesByEvolinciteCrmNegotiationID(
    evolinciteCrmNegotiationID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteActivityFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteActivitiesByEvolinciteCrmNegotiationIDQuery> {
    const statement = `query EvolinciteActivitiesByEvolinciteCrmNegotiationID($evolinciteCrmNegotiationID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteActivityFilterInput, $limit: Int, $nextToken: String) {
        evolinciteActivitiesByEvolinciteCrmNegotiationID(
          evolinciteCrmNegotiationID: $evolinciteCrmNegotiationID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            description
            startDate
            endDate
            color
            type
            priority
            meta
            taskState
            documents
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCrmNegotiationID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteActivitiesByEvolinciteCrmNegotiationIDQuery>(
      response.data.evolinciteActivitiesByEvolinciteCrmNegotiationID
    );
  }
  async GetEvolincitePermissions(
    id: string
  ): Promise<GetEvolincitePermissionsQuery> {
    const statement = `query GetEvolincitePermissions($id: ID!) {
        getEvolincitePermissions(id: $id) {
          __typename
          id
          state
          evolinciteCompanyID
          evolinciteUserID
          evolinciteDepartmentID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteDepartment {
            __typename
            id
            name
            parent
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteRolID
          EvolinciteRol {
            __typename
            id
            name
            permissions
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolincitePermissionsQuery>(
      response.data.getEvolincitePermissions
    );
  }
  async ListEvolincitePermissions(
    filter?: ModelEvolincitePermissionsFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolincitePermissionsQuery> {
    const statement = `query ListEvolincitePermissions($filter: ModelEvolincitePermissionsFilterInput, $limit: Int, $nextToken: String) {
        listEvolincitePermissions(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            state
            evolinciteCompanyID
            evolinciteUserID
            evolinciteDepartmentID
            evolinciteRolID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolincitePermissionsQuery>(
      response.data.listEvolincitePermissions
    );
  }
  async EvolincitePermissionsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolincitePermissionsFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolincitePermissionsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolincitePermissionsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolincitePermissionsFilterInput, $limit: Int, $nextToken: String) {
        evolincitePermissionsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            state
            evolinciteCompanyID
            evolinciteUserID
            evolinciteDepartmentID
            evolinciteRolID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolincitePermissionsByEvolinciteCompanyIDQuery>(
      response.data.evolincitePermissionsByEvolinciteCompanyID
    );
  }
  async EvolincitePermissionsByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolincitePermissionsFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolincitePermissionsByEvolinciteUserIDQuery> {
    const statement = `query EvolincitePermissionsByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolincitePermissionsFilterInput, $limit: Int, $nextToken: String) {
        evolincitePermissionsByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            state
            evolinciteCompanyID
            evolinciteUserID
            evolinciteDepartmentID
            evolinciteRolID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolincitePermissionsByEvolinciteUserIDQuery>(
      response.data.evolincitePermissionsByEvolinciteUserID
    );
  }
  async EvolincitePermissionsByEvolinciteDepartmentID(
    evolinciteDepartmentID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolincitePermissionsFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolincitePermissionsByEvolinciteDepartmentIDQuery> {
    const statement = `query EvolincitePermissionsByEvolinciteDepartmentID($evolinciteDepartmentID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolincitePermissionsFilterInput, $limit: Int, $nextToken: String) {
        evolincitePermissionsByEvolinciteDepartmentID(
          evolinciteDepartmentID: $evolinciteDepartmentID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            state
            evolinciteCompanyID
            evolinciteUserID
            evolinciteDepartmentID
            evolinciteRolID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteDepartmentID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolincitePermissionsByEvolinciteDepartmentIDQuery>(
      response.data.evolincitePermissionsByEvolinciteDepartmentID
    );
  }
  async EvolincitePermissionsByEvolinciteRolID(
    evolinciteRolID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolincitePermissionsFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolincitePermissionsByEvolinciteRolIDQuery> {
    const statement = `query EvolincitePermissionsByEvolinciteRolID($evolinciteRolID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolincitePermissionsFilterInput, $limit: Int, $nextToken: String) {
        evolincitePermissionsByEvolinciteRolID(
          evolinciteRolID: $evolinciteRolID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            state
            evolinciteCompanyID
            evolinciteUserID
            evolinciteDepartmentID
            evolinciteRolID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteRolID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolincitePermissionsByEvolinciteRolIDQuery>(
      response.data.evolincitePermissionsByEvolinciteRolID
    );
  }
  async GetEvolinciteDepartment(
    id: string
  ): Promise<GetEvolinciteDepartmentQuery> {
    const statement = `query GetEvolinciteDepartment($id: ID!) {
        getEvolinciteDepartment(id: $id) {
          __typename
          id
          name
          parent
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteDepartmentQuery>response.data.getEvolinciteDepartment;
  }
  async ListEvolinciteDepartments(
    filter?: ModelEvolinciteDepartmentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteDepartmentsQuery> {
    const statement = `query ListEvolinciteDepartments($filter: ModelEvolinciteDepartmentFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteDepartments(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            parent
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteDepartmentsQuery>(
      response.data.listEvolinciteDepartments
    );
  }
  async EvolinciteDepartmentsByEvolinciteCompanyIDAndCreatedAt(
    evolinciteCompanyID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteDepartmentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteDepartmentsByEvolinciteCompanyIDAndCreatedAtQuery> {
    const statement = `query EvolinciteDepartmentsByEvolinciteCompanyIDAndCreatedAt($evolinciteCompanyID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteDepartmentFilterInput, $limit: Int, $nextToken: String) {
        evolinciteDepartmentsByEvolinciteCompanyIDAndCreatedAt(
          evolinciteCompanyID: $evolinciteCompanyID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            parent
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteDepartmentsByEvolinciteCompanyIDAndCreatedAtQuery>(
      response.data.evolinciteDepartmentsByEvolinciteCompanyIDAndCreatedAt
    );
  }
  async GetEvolinciteSubscription(
    id: string
  ): Promise<GetEvolinciteSubscriptionQuery> {
    const statement = `query GetEvolinciteSubscription($id: ID!) {
        getEvolinciteSubscription(id: $id) {
          __typename
          id
          name
          price
          dateInitial
          dateFinal
          state
          EvolinciteCompanies {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteSubscriptionQuery>(
      response.data.getEvolinciteSubscription
    );
  }
  async ListEvolinciteSubscriptions(
    filter?: ModelEvolinciteSubscriptionFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteSubscriptionsQuery> {
    const statement = `query ListEvolinciteSubscriptions($filter: ModelEvolinciteSubscriptionFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteSubscriptions(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            price
            dateInitial
            dateFinal
            state
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteSubscriptionsQuery>(
      response.data.listEvolinciteSubscriptions
    );
  }
  async GetEvolinciteModule(id: string): Promise<GetEvolinciteModuleQuery> {
    const statement = `query GetEvolinciteModule($id: ID!) {
        getEvolinciteModule(id: $id) {
          __typename
          id
          name
          state
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteModuleQuery>response.data.getEvolinciteModule;
  }
  async ListEvolinciteModules(
    filter?: ModelEvolinciteModuleFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteModulesQuery> {
    const statement = `query ListEvolinciteModules($filter: ModelEvolinciteModuleFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteModules(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            state
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteModulesQuery>response.data.listEvolinciteModules;
  }
  async GetEvolinciteFunctionality(
    id: string
  ): Promise<GetEvolinciteFunctionalityQuery> {
    const statement = `query GetEvolinciteFunctionality($id: ID!) {
        getEvolinciteFunctionality(id: $id) {
          __typename
          id
          name
          functionalities
          state
          evolincitePackageID
          EvolincitePackage {
            __typename
            id
            name
            description
            goal
            duration
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteFunctionalityQuery>(
      response.data.getEvolinciteFunctionality
    );
  }
  async ListEvolinciteFunctionalities(
    filter?: ModelEvolinciteFunctionalityFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteFunctionalitiesQuery> {
    const statement = `query ListEvolinciteFunctionalities($filter: ModelEvolinciteFunctionalityFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteFunctionalities(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            functionalities
            state
            evolincitePackageID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteFunctionalitiesQuery>(
      response.data.listEvolinciteFunctionalities
    );
  }
  async EvolinciteFunctionalitiesByEvolincitePackageID(
    evolincitePackageID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteFunctionalityFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteFunctionalitiesByEvolincitePackageIDQuery> {
    const statement = `query EvolinciteFunctionalitiesByEvolincitePackageID($evolincitePackageID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteFunctionalityFilterInput, $limit: Int, $nextToken: String) {
        evolinciteFunctionalitiesByEvolincitePackageID(
          evolincitePackageID: $evolincitePackageID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            functionalities
            state
            evolincitePackageID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolincitePackageID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteFunctionalitiesByEvolincitePackageIDQuery>(
      response.data.evolinciteFunctionalitiesByEvolincitePackageID
    );
  }
  async GetEvolinciteRol(id: string): Promise<GetEvolinciteRolQuery> {
    const statement = `query GetEvolinciteRol($id: ID!) {
        getEvolinciteRol(id: $id) {
          __typename
          id
          name
          permissions
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteRolQuery>response.data.getEvolinciteRol;
  }
  async ListEvolinciteRols(
    filter?: ModelEvolinciteRolFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteRolsQuery> {
    const statement = `query ListEvolinciteRols($filter: ModelEvolinciteRolFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteRols(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            permissions
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteRolsQuery>response.data.listEvolinciteRols;
  }
  async EvolinciteRolsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteRolFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteRolsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteRolsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteRolFilterInput, $limit: Int, $nextToken: String) {
        evolinciteRolsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            permissions
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteRolsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteRolsByEvolinciteCompanyID
    );
  }
  async GetEvolinciteCustomer(id: string): Promise<GetEvolinciteCustomerQuery> {
    const statement = `query GetEvolinciteCustomer($id: ID!) {
        getEvolinciteCustomer(id: $id) {
          __typename
          id
          name
          lastName
          documentType
          documentNumber
          phone
          optionalPhone
          email
          picture
          birthDate
          municipality
          documents
          address
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteCustomerQuery>response.data.getEvolinciteCustomer;
  }
  async ListEvolinciteCustomers(
    filter?: ModelEvolinciteCustomerFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteCustomersQuery> {
    const statement = `query ListEvolinciteCustomers($filter: ModelEvolinciteCustomerFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteCustomers(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            lastName
            documentType
            documentNumber
            phone
            optionalPhone
            email
            picture
            birthDate
            municipality
            documents
            address
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteCustomersQuery>response.data.listEvolinciteCustomers;
  }
  async EvolinciteCustomersByDocumentNumber(
    documentNumber: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCustomerFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCustomersByDocumentNumberQuery> {
    const statement = `query EvolinciteCustomersByDocumentNumber($documentNumber: String!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCustomerFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCustomersByDocumentNumber(
          documentNumber: $documentNumber
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            lastName
            documentType
            documentNumber
            phone
            optionalPhone
            email
            picture
            birthDate
            municipality
            documents
            address
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      documentNumber,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCustomersByDocumentNumberQuery>(
      response.data.evolinciteCustomersByDocumentNumber
    );
  }
  async EvolinciteCustomersByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCustomerFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCustomersByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteCustomersByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCustomerFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCustomersByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            lastName
            documentType
            documentNumber
            phone
            optionalPhone
            email
            picture
            birthDate
            municipality
            documents
            address
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCustomersByEvolinciteCompanyIDQuery>(
      response.data.evolinciteCustomersByEvolinciteCompanyID
    );
  }
  async GetEvolinciteUserSettings(
    id: string
  ): Promise<GetEvolinciteUserSettingsQuery> {
    const statement = `query GetEvolinciteUserSettings($id: ID!) {
        getEvolinciteUserSettings(id: $id) {
          __typename
          id
          settings
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteUserSettingsQuery>(
      response.data.getEvolinciteUserSettings
    );
  }
  async ListEvolinciteUserSettings(
    filter?: ModelEvolinciteUserSettingsFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteUserSettingsQuery> {
    const statement = `query ListEvolinciteUserSettings($filter: ModelEvolinciteUserSettingsFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteUserSettings(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            settings
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteUserSettingsQuery>(
      response.data.listEvolinciteUserSettings
    );
  }
  async EvolinciteUserSettingsByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteUserSettingsFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteUserSettingsByEvolinciteUserIDQuery> {
    const statement = `query EvolinciteUserSettingsByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteUserSettingsFilterInput, $limit: Int, $nextToken: String) {
        evolinciteUserSettingsByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            settings
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteUserSettingsByEvolinciteUserIDQuery>(
      response.data.evolinciteUserSettingsByEvolinciteUserID
    );
  }
  async EvolinciteUserSettingsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteUserSettingsFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteUserSettingsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteUserSettingsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteUserSettingsFilterInput, $limit: Int, $nextToken: String) {
        evolinciteUserSettingsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            settings
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteUserSettingsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteUserSettingsByEvolinciteCompanyID
    );
  }
  async GetEvolinciteCrmPipeline(
    id: string
  ): Promise<GetEvolinciteCrmPipelineQuery> {
    const statement = `query GetEvolinciteCrmPipeline($id: ID!) {
        getEvolinciteCrmPipeline(id: $id) {
          __typename
          id
          name
          description
          publicDescription
          order
          state
          meta
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmStates {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteCrmPipelineQuery>(
      response.data.getEvolinciteCrmPipeline
    );
  }
  async ListEvolinciteCrmPipelines(
    filter?: ModelEvolinciteCrmPipelineFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteCrmPipelinesQuery> {
    const statement = `query ListEvolinciteCrmPipelines($filter: ModelEvolinciteCrmPipelineFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteCrmPipelines(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            description
            publicDescription
            order
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteCrmPipelinesQuery>(
      response.data.listEvolinciteCrmPipelines
    );
  }
  async EvolinciteCrmPipelinesByEvolinciteCompanyIDAndOrder(
    evolinciteCompanyID: string,
    order?: ModelFloatKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmPipelineFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmPipelinesByEvolinciteCompanyIDAndOrderQuery> {
    const statement = `query EvolinciteCrmPipelinesByEvolinciteCompanyIDAndOrder($evolinciteCompanyID: ID!, $order: ModelFloatKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmPipelineFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmPipelinesByEvolinciteCompanyIDAndOrder(
          evolinciteCompanyID: $evolinciteCompanyID
          order: $order
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            description
            publicDescription
            order
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (order) {
      gqlAPIServiceArguments.order = order;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCrmPipelinesByEvolinciteCompanyIDAndOrderQuery>(
      response.data.evolinciteCrmPipelinesByEvolinciteCompanyIDAndOrder
    );
  }
  async GetEvolinciteCrmState(id: string): Promise<GetEvolinciteCrmStateQuery> {
    const statement = `query GetEvolinciteCrmState($id: ID!) {
        getEvolinciteCrmState(id: $id) {
          __typename
          id
          name
          description
          publicDescription
          color
          order
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteCrmAutomations {
            __typename
            nextToken
          }
          evolinciteCrmPipelineID
          EvolinciteCrmPipeline {
            __typename
            id
            name
            description
            publicDescription
            order
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteCrmStateQuery>response.data.getEvolinciteCrmState;
  }
  async ListEvolinciteCrmStates(
    filter?: ModelEvolinciteCrmStateFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteCrmStatesQuery> {
    const statement = `query ListEvolinciteCrmStates($filter: ModelEvolinciteCrmStateFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteCrmStates(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            description
            publicDescription
            color
            order
            state
            evolinciteCompanyID
            evolinciteCrmPipelineID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteCrmStatesQuery>response.data.listEvolinciteCrmStates;
  }
  async EvolinciteCrmStatesByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmStateFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmStatesByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteCrmStatesByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmStateFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmStatesByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            description
            publicDescription
            color
            order
            state
            evolinciteCompanyID
            evolinciteCrmPipelineID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCrmStatesByEvolinciteCompanyIDQuery>(
      response.data.evolinciteCrmStatesByEvolinciteCompanyID
    );
  }
  async EvolinciteCrmStatesByEvolinciteCrmPipelineIDAndOrder(
    evolinciteCrmPipelineID: string,
    order?: ModelFloatKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmStateFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmStatesByEvolinciteCrmPipelineIDAndOrderQuery> {
    const statement = `query EvolinciteCrmStatesByEvolinciteCrmPipelineIDAndOrder($evolinciteCrmPipelineID: ID!, $order: ModelFloatKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmStateFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmStatesByEvolinciteCrmPipelineIDAndOrder(
          evolinciteCrmPipelineID: $evolinciteCrmPipelineID
          order: $order
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            description
            publicDescription
            color
            order
            state
            evolinciteCompanyID
            evolinciteCrmPipelineID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCrmPipelineID,
    };
    if (order) {
      gqlAPIServiceArguments.order = order;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCrmStatesByEvolinciteCrmPipelineIDAndOrderQuery>(
      response.data.evolinciteCrmStatesByEvolinciteCrmPipelineIDAndOrder
    );
  }
  async GetEvolinciteCrmNegotiationLog(
    id: string
  ): Promise<GetEvolinciteCrmNegotiationLogQuery> {
    const statement = `query GetEvolinciteCrmNegotiationLog($id: ID!) {
        getEvolinciteCrmNegotiationLog(id: $id) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteCrmNegotiationID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteCrmNegotiationLogQuery>(
      response.data.getEvolinciteCrmNegotiationLog
    );
  }
  async ListEvolinciteCrmNegotiationLogs(
    filter?: ModelEvolinciteCrmNegotiationLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteCrmNegotiationLogsQuery> {
    const statement = `query ListEvolinciteCrmNegotiationLogs($filter: ModelEvolinciteCrmNegotiationLogFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteCrmNegotiationLogs(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            log
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteCrmNegotiationLogsQuery>(
      response.data.listEvolinciteCrmNegotiationLogs
    );
  }
  async EvolinciteCrmNegotiationLogsByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmNegotiationLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmNegotiationLogsByEvolinciteUserIDQuery> {
    const statement = `query EvolinciteCrmNegotiationLogsByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmNegotiationLogFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmNegotiationLogsByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            log
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCrmNegotiationLogsByEvolinciteUserIDQuery>(
      response.data.evolinciteCrmNegotiationLogsByEvolinciteUserID
    );
  }
  async EvolinciteCrmNegotiationLogsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmNegotiationLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmNegotiationLogsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteCrmNegotiationLogsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmNegotiationLogFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmNegotiationLogsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            log
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCrmNegotiationLogsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteCrmNegotiationLogsByEvolinciteCompanyID
    );
  }
  async EvolinciteCrmNegotiationLogsByEvolinciteCrmNegotiationIDAndCreatedAt(
    evolinciteCrmNegotiationID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmNegotiationLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmNegotiationLogsByEvolinciteCrmNegotiationIDAndCreatedAtQuery> {
    const statement = `query EvolinciteCrmNegotiationLogsByEvolinciteCrmNegotiationIDAndCreatedAt($evolinciteCrmNegotiationID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmNegotiationLogFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmNegotiationLogsByEvolinciteCrmNegotiationIDAndCreatedAt(
          evolinciteCrmNegotiationID: $evolinciteCrmNegotiationID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            log
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCrmNegotiationID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <
      EvolinciteCrmNegotiationLogsByEvolinciteCrmNegotiationIDAndCreatedAtQuery
    >response.data
      .evolinciteCrmNegotiationLogsByEvolinciteCrmNegotiationIDAndCreatedAt;
  }
  async GetEvolinciteCrmNegotiation(
    id: string
  ): Promise<GetEvolinciteCrmNegotiationQuery> {
    const statement = `query GetEvolinciteCrmNegotiation($id: ID!) {
        getEvolinciteCrmNegotiation(id: $id) {
          __typename
          id
          name
          value
          due
          parent
          date
          documents
          meta
          frozen
          valueInterest
          valueCollection
          observers
          exitDate
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserSellerID
          EvolinciteUserSeller {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserReferrerID
          EvolinciteUserReferrer {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserOwnerID
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFieldValues {
            __typename
            nextToken
          }
          evolinciteCrmStateID
          EvolinciteCrmState {
            __typename
            id
            name
            description
            publicDescription
            color
            order
            state
            evolinciteCompanyID
            evolinciteCrmPipelineID
            createdAt
            updatedAt
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          evolinciteCustomerID
          EvolinciteCustomer {
            __typename
            id
            name
            lastName
            documentType
            documentNumber
            phone
            optionalPhone
            email
            picture
            birthDate
            municipality
            documents
            address
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteComments {
            __typename
            nextToken
          }
          EvolinciteActivities {
            __typename
            nextToken
          }
          EvolinciteUsersObserver {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          evolinciteProcessTypeID
          EvolinciteProcessType {
            __typename
            id
            name
            order
            sellerCommission
            referrerCommission
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          initialGoalID
          InitialGoal {
            __typename
            id
            name
            description
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          finalGoalID
          FinalGoal {
            __typename
            id
            name
            description
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteCrmNegotiationQuery>(
      response.data.getEvolinciteCrmNegotiation
    );
  }
  async ListEvolinciteCrmNegotiations(
    filter?: ModelEvolinciteCrmNegotiationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteCrmNegotiationsQuery> {
    const statement = `query ListEvolinciteCrmNegotiations($filter: ModelEvolinciteCrmNegotiationFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteCrmNegotiations(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteCrmNegotiationsQuery>(
      response.data.listEvolinciteCrmNegotiations
    );
  }
  async EvolinciteCrmNegotiationsByParent(
    parent: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmNegotiationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmNegotiationsByParentQuery> {
    const statement = `query EvolinciteCrmNegotiationsByParent($parent: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmNegotiationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmNegotiationsByParent(
          parent: $parent
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      parent,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCrmNegotiationsByParentQuery>(
      response.data.evolinciteCrmNegotiationsByParent
    );
  }
  async EvolinciteCrmNegotiationsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmNegotiationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmNegotiationsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteCrmNegotiationsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmNegotiationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmNegotiationsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCrmNegotiationsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteCrmNegotiationsByEvolinciteCompanyID
    );
  }
  async EvolinciteCrmNegotiationsByEvolinciteUserSellerID(
    evolinciteUserSellerID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmNegotiationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmNegotiationsByEvolinciteUserSellerIDQuery> {
    const statement = `query EvolinciteCrmNegotiationsByEvolinciteUserSellerID($evolinciteUserSellerID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmNegotiationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmNegotiationsByEvolinciteUserSellerID(
          evolinciteUserSellerID: $evolinciteUserSellerID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserSellerID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCrmNegotiationsByEvolinciteUserSellerIDQuery>(
      response.data.evolinciteCrmNegotiationsByEvolinciteUserSellerID
    );
  }
  async EvolinciteCrmNegotiationsByEvolinciteUserReferrerID(
    evolinciteUserReferrerID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmNegotiationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmNegotiationsByEvolinciteUserReferrerIDQuery> {
    const statement = `query EvolinciteCrmNegotiationsByEvolinciteUserReferrerID($evolinciteUserReferrerID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmNegotiationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmNegotiationsByEvolinciteUserReferrerID(
          evolinciteUserReferrerID: $evolinciteUserReferrerID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserReferrerID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCrmNegotiationsByEvolinciteUserReferrerIDQuery>(
      response.data.evolinciteCrmNegotiationsByEvolinciteUserReferrerID
    );
  }
  async EvolinciteCrmNegotiationsByEvolinciteUserOwnerID(
    evolinciteUserOwnerID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmNegotiationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmNegotiationsByEvolinciteUserOwnerIDQuery> {
    const statement = `query EvolinciteCrmNegotiationsByEvolinciteUserOwnerID($evolinciteUserOwnerID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmNegotiationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmNegotiationsByEvolinciteUserOwnerID(
          evolinciteUserOwnerID: $evolinciteUserOwnerID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserOwnerID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCrmNegotiationsByEvolinciteUserOwnerIDQuery>(
      response.data.evolinciteCrmNegotiationsByEvolinciteUserOwnerID
    );
  }
  async EvolinciteCrmNegotiationsByEvolinciteCrmStateIDAndCreatedAt(
    evolinciteCrmStateID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmNegotiationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmNegotiationsByEvolinciteCrmStateIDAndCreatedAtQuery> {
    const statement = `query EvolinciteCrmNegotiationsByEvolinciteCrmStateIDAndCreatedAt($evolinciteCrmStateID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmNegotiationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmNegotiationsByEvolinciteCrmStateIDAndCreatedAt(
          evolinciteCrmStateID: $evolinciteCrmStateID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCrmStateID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCrmNegotiationsByEvolinciteCrmStateIDAndCreatedAtQuery>(
      response.data.evolinciteCrmNegotiationsByEvolinciteCrmStateIDAndCreatedAt
    );
  }
  async EvolinciteCrmNegotiationsByEvolinciteCustomerID(
    evolinciteCustomerID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmNegotiationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmNegotiationsByEvolinciteCustomerIDQuery> {
    const statement = `query EvolinciteCrmNegotiationsByEvolinciteCustomerID($evolinciteCustomerID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmNegotiationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmNegotiationsByEvolinciteCustomerID(
          evolinciteCustomerID: $evolinciteCustomerID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCustomerID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCrmNegotiationsByEvolinciteCustomerIDQuery>(
      response.data.evolinciteCrmNegotiationsByEvolinciteCustomerID
    );
  }
  async EvolinciteCrmNegotiationsByEvolinciteProcessTypeID(
    evolinciteProcessTypeID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmNegotiationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmNegotiationsByEvolinciteProcessTypeIDQuery> {
    const statement = `query EvolinciteCrmNegotiationsByEvolinciteProcessTypeID($evolinciteProcessTypeID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmNegotiationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmNegotiationsByEvolinciteProcessTypeID(
          evolinciteProcessTypeID: $evolinciteProcessTypeID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteProcessTypeID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCrmNegotiationsByEvolinciteProcessTypeIDQuery>(
      response.data.evolinciteCrmNegotiationsByEvolinciteProcessTypeID
    );
  }
  async EvolinciteCrmNegotiationsByInitialGoalID(
    initialGoalID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmNegotiationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmNegotiationsByInitialGoalIDQuery> {
    const statement = `query EvolinciteCrmNegotiationsByInitialGoalID($initialGoalID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmNegotiationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmNegotiationsByInitialGoalID(
          initialGoalID: $initialGoalID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      initialGoalID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCrmNegotiationsByInitialGoalIDQuery>(
      response.data.evolinciteCrmNegotiationsByInitialGoalID
    );
  }
  async EvolinciteCrmNegotiationsByFinalGoalID(
    finalGoalID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmNegotiationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmNegotiationsByFinalGoalIDQuery> {
    const statement = `query EvolinciteCrmNegotiationsByFinalGoalID($finalGoalID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmNegotiationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmNegotiationsByFinalGoalID(
          finalGoalID: $finalGoalID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      finalGoalID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCrmNegotiationsByFinalGoalIDQuery>(
      response.data.evolinciteCrmNegotiationsByFinalGoalID
    );
  }
  async GetEvolinciteRoom(id: string): Promise<GetEvolinciteRoomQuery> {
    const statement = `query GetEvolinciteRoom($id: ID!) {
        getEvolinciteRoom(id: $id) {
          __typename
          id
          Key
          name
          state
          meta
          EvolinciteUsers {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteRoomQuery>response.data.getEvolinciteRoom;
  }
  async ListEvolinciteRooms(
    filter?: ModelEvolinciteRoomFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteRoomsQuery> {
    const statement = `query ListEvolinciteRooms($filter: ModelEvolinciteRoomFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteRooms(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            Key
            name
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteRoomsQuery>response.data.listEvolinciteRooms;
  }
  async EvolinciteRoomsByKey(
    Key: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteRoomFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteRoomsByKeyQuery> {
    const statement = `query EvolinciteRoomsByKey($Key: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteRoomFilterInput, $limit: Int, $nextToken: String) {
        evolinciteRoomsByKey(
          Key: $Key
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            Key
            name
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      Key,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteRoomsByKeyQuery>response.data.evolinciteRoomsByKey;
  }
  async EvolinciteRoomsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteRoomFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteRoomsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteRoomsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteRoomFilterInput, $limit: Int, $nextToken: String) {
        evolinciteRoomsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            Key
            name
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteRoomsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteRoomsByEvolinciteCompanyID
    );
  }
  async GetEvolinciteMessage(id: string): Promise<GetEvolinciteMessageQuery> {
    const statement = `query GetEvolinciteMessage($id: ID!) {
        getEvolinciteMessage(id: $id) {
          __typename
          id
          content
          type
          state
          createdAt
          updatedAt
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteRoomID
          EvolinciteRoom {
            __typename
            id
            Key
            name
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteMessageQuery>response.data.getEvolinciteMessage;
  }
  async ListEvolinciteMessages(
    filter?: ModelEvolinciteMessageFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteMessagesQuery> {
    const statement = `query ListEvolinciteMessages($filter: ModelEvolinciteMessageFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteMessages(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            content
            type
            state
            createdAt
            updatedAt
            evolinciteCompanyID
            evolinciteUserID
            evolinciteRoomID
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteMessagesQuery>response.data.listEvolinciteMessages;
  }
  async EvolinciteMessagesByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteMessageFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteMessagesByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteMessagesByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteMessageFilterInput, $limit: Int, $nextToken: String) {
        evolinciteMessagesByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            content
            type
            state
            createdAt
            updatedAt
            evolinciteCompanyID
            evolinciteUserID
            evolinciteRoomID
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteMessagesByEvolinciteCompanyIDQuery>(
      response.data.evolinciteMessagesByEvolinciteCompanyID
    );
  }
  async EvolinciteMessagesByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteMessageFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteMessagesByEvolinciteUserIDQuery> {
    const statement = `query EvolinciteMessagesByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteMessageFilterInput, $limit: Int, $nextToken: String) {
        evolinciteMessagesByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            content
            type
            state
            createdAt
            updatedAt
            evolinciteCompanyID
            evolinciteUserID
            evolinciteRoomID
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteMessagesByEvolinciteUserIDQuery>(
      response.data.evolinciteMessagesByEvolinciteUserID
    );
  }
  async EvolinciteMessagesByEvolinciteRoomIDAndCreatedAt(
    evolinciteRoomID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteMessageFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteMessagesByEvolinciteRoomIDAndCreatedAtQuery> {
    const statement = `query EvolinciteMessagesByEvolinciteRoomIDAndCreatedAt($evolinciteRoomID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteMessageFilterInput, $limit: Int, $nextToken: String) {
        evolinciteMessagesByEvolinciteRoomIDAndCreatedAt(
          evolinciteRoomID: $evolinciteRoomID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            content
            type
            state
            createdAt
            updatedAt
            evolinciteCompanyID
            evolinciteUserID
            evolinciteRoomID
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteRoomID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteMessagesByEvolinciteRoomIDAndCreatedAtQuery>(
      response.data.evolinciteMessagesByEvolinciteRoomIDAndCreatedAt
    );
  }
  async GetEvolinciteCrmNegotiationFieldValue(
    id: string
  ): Promise<GetEvolinciteCrmNegotiationFieldValueQuery> {
    const statement = `query GetEvolinciteCrmNegotiationFieldValue($id: ID!) {
        getEvolinciteCrmNegotiationFieldValue(id: $id) {
          __typename
          id
          value
          state
          evolinciteCrmNegotiationFieldID
          EvolinciteCrmNegotiationField {
            __typename
            id
            field
            type
            required
            order
            state
            meta
            evolinciteCompanyID
            evolinciteCrmNegotiationSectionID
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteCrmNegotiationFieldValueQuery>(
      response.data.getEvolinciteCrmNegotiationFieldValue
    );
  }
  async ListEvolinciteCrmNegotiationFieldValues(
    filter?: ModelEvolinciteCrmNegotiationFieldValueFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteCrmNegotiationFieldValuesQuery> {
    const statement = `query ListEvolinciteCrmNegotiationFieldValues($filter: ModelEvolinciteCrmNegotiationFieldValueFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteCrmNegotiationFieldValues(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            value
            state
            evolinciteCrmNegotiationFieldID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteCrmNegotiationFieldValuesQuery>(
      response.data.listEvolinciteCrmNegotiationFieldValues
    );
  }
  async EvolinciteCrmNegotiationFieldValuesByEvolinciteCrmNegotiationFieldID(
    evolinciteCrmNegotiationFieldID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmNegotiationFieldValueFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmNegotiationFieldValuesByEvolinciteCrmNegotiationFieldIDQuery> {
    const statement = `query EvolinciteCrmNegotiationFieldValuesByEvolinciteCrmNegotiationFieldID($evolinciteCrmNegotiationFieldID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmNegotiationFieldValueFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmNegotiationFieldValuesByEvolinciteCrmNegotiationFieldID(
          evolinciteCrmNegotiationFieldID: $evolinciteCrmNegotiationFieldID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            value
            state
            evolinciteCrmNegotiationFieldID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCrmNegotiationFieldID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <
      EvolinciteCrmNegotiationFieldValuesByEvolinciteCrmNegotiationFieldIDQuery
    >response.data
      .evolinciteCrmNegotiationFieldValuesByEvolinciteCrmNegotiationFieldID;
  }
  async EvolinciteCrmNegotiationFieldValuesByEvolinciteCrmNegotiationID(
    evolinciteCrmNegotiationID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCrmNegotiationFieldValueFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCrmNegotiationFieldValuesByEvolinciteCrmNegotiationIDQuery> {
    const statement = `query EvolinciteCrmNegotiationFieldValuesByEvolinciteCrmNegotiationID($evolinciteCrmNegotiationID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCrmNegotiationFieldValueFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCrmNegotiationFieldValuesByEvolinciteCrmNegotiationID(
          evolinciteCrmNegotiationID: $evolinciteCrmNegotiationID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            value
            state
            evolinciteCrmNegotiationFieldID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCrmNegotiationID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <
      EvolinciteCrmNegotiationFieldValuesByEvolinciteCrmNegotiationIDQuery
    >response.data
      .evolinciteCrmNegotiationFieldValuesByEvolinciteCrmNegotiationID;
  }
  async GetEvolinciteEmail(id: string): Promise<GetEvolinciteEmailQuery> {
    const statement = `query GetEvolinciteEmail($id: ID!) {
        getEvolinciteEmail(id: $id) {
          __typename
          id
          from
          to
          content
          subject
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteEmailQuery>response.data.getEvolinciteEmail;
  }
  async ListEvolinciteEmails(
    filter?: ModelEvolinciteEmailFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteEmailsQuery> {
    const statement = `query ListEvolinciteEmails($filter: ModelEvolinciteEmailFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteEmails(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            from
            to
            content
            subject
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteEmailsQuery>response.data.listEvolinciteEmails;
  }
  async EvolinciteEmailsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteEmailFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteEmailsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteEmailsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteEmailFilterInput, $limit: Int, $nextToken: String) {
        evolinciteEmailsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            from
            to
            content
            subject
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteEmailsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteEmailsByEvolinciteCompanyID
    );
  }
  async GetEvolinciteEmailTemplate(
    id: string
  ): Promise<GetEvolinciteEmailTemplateQuery> {
    const statement = `query GetEvolinciteEmailTemplate($id: ID!) {
        getEvolinciteEmailTemplate(id: $id) {
          __typename
          id
          content
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteEmailTemplateQuery>(
      response.data.getEvolinciteEmailTemplate
    );
  }
  async ListEvolinciteEmailTemplates(
    filter?: ModelEvolinciteEmailTemplateFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteEmailTemplatesQuery> {
    const statement = `query ListEvolinciteEmailTemplates($filter: ModelEvolinciteEmailTemplateFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteEmailTemplates(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            content
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteEmailTemplatesQuery>(
      response.data.listEvolinciteEmailTemplates
    );
  }
  async EvolinciteEmailTemplatesByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteEmailTemplateFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteEmailTemplatesByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteEmailTemplatesByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteEmailTemplateFilterInput, $limit: Int, $nextToken: String) {
        evolinciteEmailTemplatesByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            content
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteEmailTemplatesByEvolinciteCompanyIDQuery>(
      response.data.evolinciteEmailTemplatesByEvolinciteCompanyID
    );
  }
  async GetEvolinciteNotification(
    id: string
  ): Promise<GetEvolinciteNotificationQuery> {
    const statement = `query GetEvolinciteNotification($id: ID!) {
        getEvolinciteNotification(id: $id) {
          __typename
          id
          content
          title
          priority
          type
          meta
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteNotificationQuery>(
      response.data.getEvolinciteNotification
    );
  }
  async ListEvolinciteNotifications(
    filter?: ModelEvolinciteNotificationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteNotificationsQuery> {
    const statement = `query ListEvolinciteNotifications($filter: ModelEvolinciteNotificationFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteNotifications(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            content
            title
            priority
            type
            meta
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteNotificationsQuery>(
      response.data.listEvolinciteNotifications
    );
  }
  async EvolinciteNotificationsByEvolinciteUserIDAndCreatedAt(
    evolinciteUserID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteNotificationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteNotificationsByEvolinciteUserIDAndCreatedAtQuery> {
    const statement = `query EvolinciteNotificationsByEvolinciteUserIDAndCreatedAt($evolinciteUserID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteNotificationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteNotificationsByEvolinciteUserIDAndCreatedAt(
          evolinciteUserID: $evolinciteUserID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            content
            title
            priority
            type
            meta
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteNotificationsByEvolinciteUserIDAndCreatedAtQuery>(
      response.data.evolinciteNotificationsByEvolinciteUserIDAndCreatedAt
    );
  }
  async EvolinciteNotificationsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteNotificationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteNotificationsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteNotificationsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteNotificationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteNotificationsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            content
            title
            priority
            type
            meta
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteNotificationsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteNotificationsByEvolinciteCompanyID
    );
  }
  async GetEvolinciteUserDepartment(
    id: string
  ): Promise<GetEvolinciteUserDepartmentQuery> {
    const statement = `query GetEvolinciteUserDepartment($id: ID!) {
        getEvolinciteUserDepartment(id: $id) {
          __typename
          id
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteDepartmentID
          EvolinciteDepartment {
            __typename
            id
            name
            parent
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteUserDepartmentQuery>(
      response.data.getEvolinciteUserDepartment
    );
  }
  async ListEvolinciteUserDepartments(
    filter?: ModelEvolinciteUserDepartmentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteUserDepartmentsQuery> {
    const statement = `query ListEvolinciteUserDepartments($filter: ModelEvolinciteUserDepartmentFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteUserDepartments(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            state
            evolinciteCompanyID
            evolinciteUserID
            evolinciteDepartmentID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteUserDepartmentsQuery>(
      response.data.listEvolinciteUserDepartments
    );
  }
  async EvolinciteUserDepartmentsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteUserDepartmentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteUserDepartmentsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteUserDepartmentsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteUserDepartmentFilterInput, $limit: Int, $nextToken: String) {
        evolinciteUserDepartmentsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            state
            evolinciteCompanyID
            evolinciteUserID
            evolinciteDepartmentID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteUserDepartmentsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteUserDepartmentsByEvolinciteCompanyID
    );
  }
  async EvolinciteUserDepartmentsByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteUserDepartmentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteUserDepartmentsByEvolinciteUserIDQuery> {
    const statement = `query EvolinciteUserDepartmentsByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteUserDepartmentFilterInput, $limit: Int, $nextToken: String) {
        evolinciteUserDepartmentsByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            state
            evolinciteCompanyID
            evolinciteUserID
            evolinciteDepartmentID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteUserDepartmentsByEvolinciteUserIDQuery>(
      response.data.evolinciteUserDepartmentsByEvolinciteUserID
    );
  }
  async EvolinciteUserDepartmentsByEvolinciteDepartmentID(
    evolinciteDepartmentID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteUserDepartmentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteUserDepartmentsByEvolinciteDepartmentIDQuery> {
    const statement = `query EvolinciteUserDepartmentsByEvolinciteDepartmentID($evolinciteDepartmentID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteUserDepartmentFilterInput, $limit: Int, $nextToken: String) {
        evolinciteUserDepartmentsByEvolinciteDepartmentID(
          evolinciteDepartmentID: $evolinciteDepartmentID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            state
            evolinciteCompanyID
            evolinciteUserID
            evolinciteDepartmentID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteDepartmentID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteUserDepartmentsByEvolinciteDepartmentIDQuery>(
      response.data.evolinciteUserDepartmentsByEvolinciteDepartmentID
    );
  }
  async GetEvolinciteUserEvolinciteCompany(
    id: string
  ): Promise<GetEvolinciteUserEvolinciteCompanyQuery> {
    const statement = `query GetEvolinciteUserEvolinciteCompany($id: ID!) {
        getEvolinciteUserEvolinciteCompany(id: $id) {
          __typename
          id
          state
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteUserEvolinciteCompanyQuery>(
      response.data.getEvolinciteUserEvolinciteCompany
    );
  }
  async ListEvolinciteUserEvolinciteCompanies(
    filter?: ModelEvolinciteUserEvolinciteCompanyFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteUserEvolinciteCompaniesQuery> {
    const statement = `query ListEvolinciteUserEvolinciteCompanies($filter: ModelEvolinciteUserEvolinciteCompanyFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteUserEvolinciteCompanies(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteUserEvolinciteCompaniesQuery>(
      response.data.listEvolinciteUserEvolinciteCompanies
    );
  }
  async EvolinciteUserEvolinciteCompaniesByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteUserEvolinciteCompanyFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteUserEvolinciteCompaniesByEvolinciteUserIDQuery> {
    const statement = `query EvolinciteUserEvolinciteCompaniesByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteUserEvolinciteCompanyFilterInput, $limit: Int, $nextToken: String) {
        evolinciteUserEvolinciteCompaniesByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteUserEvolinciteCompaniesByEvolinciteUserIDQuery>(
      response.data.evolinciteUserEvolinciteCompaniesByEvolinciteUserID
    );
  }
  async EvolinciteUserEvolinciteCompaniesByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteUserEvolinciteCompanyFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteUserEvolinciteCompaniesByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteUserEvolinciteCompaniesByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteUserEvolinciteCompanyFilterInput, $limit: Int, $nextToken: String) {
        evolinciteUserEvolinciteCompaniesByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteUserEvolinciteCompaniesByEvolinciteCompanyIDQuery>(
      response.data.evolinciteUserEvolinciteCompaniesByEvolinciteCompanyID
    );
  }
  async GetEvolinciteUser(id: string): Promise<GetEvolinciteUserQuery> {
    const statement = `query GetEvolinciteUser($id: ID!) {
        getEvolinciteUser(id: $id) {
          __typename
          id
          name
          nit
          phone
          picture
          email
          sub
          meta
          cv
          contract
          memos
          personalMail
          personalPhone
          state
          EvolinciteUserEvolinciteCompanies {
            __typename
            nextToken
          }
          EvolinciteActivitiesOwner {
            __typename
            nextToken
          }
          EvolinciteActivitiesParticipants {
            __typename
            nextToken
          }
          EvolinciteRooms {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsOwner {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsReferrer {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsSeller {
            __typename
            nextToken
          }
          EvolincitePaymentsUserSeller {
            __typename
            nextToken
          }
          EvolincitePaymentsUserReferrer {
            __typename
            nextToken
          }
          EvolinciteNotifications {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteComments {
            __typename
            nextToken
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteUserSettings {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsObserver {
            __typename
            nextToken
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          EvolinciteTicket {
            __typename
            nextToken
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          EvolinciteFolders {
            __typename
            nextToken
          }
          EvolinciteArticles {
            __typename
            nextToken
          }
          EvolinciteArticleComments {
            __typename
            nextToken
          }
          EvolinciteFoldersOwner {
            __typename
            nextToken
          }
          EvolinciteFormConfigurations {
            __typename
            nextToken
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          EvolinciteMails {
            __typename
            nextToken
          }
          EvolinciteEmployeeObservations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteUserQuery>response.data.getEvolinciteUser;
  }
  async ListEvolinciteUsers(
    filter?: ModelEvolinciteUserFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteUsersQuery> {
    const statement = `query ListEvolinciteUsers($filter: ModelEvolinciteUserFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteUsersQuery>response.data.listEvolinciteUsers;
  }
  async GetEvolinciteCompany(id: string): Promise<GetEvolinciteCompanyQuery> {
    const statement = `query GetEvolinciteCompany($id: ID!) {
        getEvolinciteCompany(id: $id) {
          __typename
          id
          name
          nit
          picture
          meta
          state
          EvolinciteUserEvolinciteCompanies {
            __typename
            nextToken
          }
          evolinciteSubscriptionID
          EvolinciteSubscription {
            __typename
            id
            name
            price
            dateInitial
            dateFinal
            state
            createdAt
            updatedAt
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationFields {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationSections {
            __typename
            nextToken
          }
          EvolinciteCrmAutomations {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          EvolinciteDepartments {
            __typename
            nextToken
          }
          EvolinciteCustomers {
            __typename
            nextToken
          }
          EvolinciteCrmPipelines {
            __typename
            nextToken
          }
          EvolinciteCrmStates {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteJobTitles {
            __typename
            nextToken
          }
          EvolinciteNotifications {
            __typename
            nextToken
          }
          EvolinciteEmailTemplates {
            __typename
            nextToken
          }
          EvolinciteEmails {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteActivities {
            __typename
            nextToken
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteRoles {
            __typename
            nextToken
          }
          EvolinciteUserSettings {
            __typename
            nextToken
          }
          EvolinciteRooms {
            __typename
            nextToken
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          EvolinciteExpenseTypes {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          EvolinciteProcessTypes {
            __typename
            nextToken
          }
          EvolinciteGoal {
            __typename
            nextToken
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          EvolinciteTicketOwner {
            __typename
            nextToken
          }
          EvolinciteTicketOrigin {
            __typename
            nextToken
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          EvolinciteFolders {
            __typename
            nextToken
          }
          EvolinciteArticles {
            __typename
            nextToken
          }
          EvolinciteFormConfigurations {
            __typename
            nextToken
          }
          EvolincitePaymentAutomations {
            __typename
            nextToken
          }
          EvolinciteMails {
            __typename
            nextToken
          }
          EvolinciteMailTemplates {
            __typename
            nextToken
          }
          EvolinciteCompanySubscriptions {
            __typename
            nextToken
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          EvolinciteEmployeeObservations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteCompanyQuery>response.data.getEvolinciteCompany;
  }
  async ListEvolinciteCompanies(
    filter?: ModelEvolinciteCompanyFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteCompaniesQuery> {
    const statement = `query ListEvolinciteCompanies($filter: ModelEvolinciteCompanyFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteCompanies(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteCompaniesQuery>response.data.listEvolinciteCompanies;
  }
  async EvolinciteCompaniesByNit(
    nit: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCompanyFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCompaniesByNitQuery> {
    const statement = `query EvolinciteCompaniesByNit($nit: String!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCompanyFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCompaniesByNit(
          nit: $nit
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      nit,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCompaniesByNitQuery>(
      response.data.evolinciteCompaniesByNit
    );
  }
  async EvolinciteCompaniesByEvolinciteSubscriptionID(
    evolinciteSubscriptionID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCompanyFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCompaniesByEvolinciteSubscriptionIDQuery> {
    const statement = `query EvolinciteCompaniesByEvolinciteSubscriptionID($evolinciteSubscriptionID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCompanyFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCompaniesByEvolinciteSubscriptionID(
          evolinciteSubscriptionID: $evolinciteSubscriptionID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteSubscriptionID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCompaniesByEvolinciteSubscriptionIDQuery>(
      response.data.evolinciteCompaniesByEvolinciteSubscriptionID
    );
  }
  async GetEvolinciteGoal(id: string): Promise<GetEvolinciteGoalQuery> {
    const statement = `query GetEvolinciteGoal($id: ID!) {
        getEvolinciteGoal(id: $id) {
          __typename
          id
          name
          description
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationsInitial {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsFinal {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteGoalQuery>response.data.getEvolinciteGoal;
  }
  async ListEvolinciteGoals(
    filter?: ModelEvolinciteGoalFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteGoalsQuery> {
    const statement = `query ListEvolinciteGoals($filter: ModelEvolinciteGoalFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteGoals(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            description
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteGoalsQuery>response.data.listEvolinciteGoals;
  }
  async EvolinciteGoalsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteGoalFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteGoalsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteGoalsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteGoalFilterInput, $limit: Int, $nextToken: String) {
        evolinciteGoalsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            description
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteGoalsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteGoalsByEvolinciteCompanyID
    );
  }
  async GetEvolinciteWalletPaymentLog(
    id: string
  ): Promise<GetEvolinciteWalletPaymentLogQuery> {
    const statement = `query GetEvolinciteWalletPaymentLog($id: ID!) {
        getEvolinciteWalletPaymentLog(id: $id) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteWalletPaymentID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteWalletPayment {
            __typename
            id
            amount
            scheduledDate
            datePayment
            paymentStatus
            prePayment
            postPayment
            observations
            voucher
            transactionType
            reference
            amountInterest
            amountCollection
            state
            evolinciteCompanyID
            evolinciteUserReferrerID
            evolinciteUserSellerID
            evolinciteCrmNegotiationID
            evolinciteCustomerID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteWalletPaymentLogQuery>(
      response.data.getEvolinciteWalletPaymentLog
    );
  }
  async ListEvolinciteWalletPaymentLogs(
    filter?: ModelEvolinciteWalletPaymentLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteWalletPaymentLogsQuery> {
    const statement = `query ListEvolinciteWalletPaymentLogs($filter: ModelEvolinciteWalletPaymentLogFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteWalletPaymentLogs(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            log
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteWalletPaymentID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteWalletPaymentLogsQuery>(
      response.data.listEvolinciteWalletPaymentLogs
    );
  }
  async EvolinciteWalletPaymentLogsByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteWalletPaymentLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteWalletPaymentLogsByEvolinciteUserIDQuery> {
    const statement = `query EvolinciteWalletPaymentLogsByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteWalletPaymentLogFilterInput, $limit: Int, $nextToken: String) {
        evolinciteWalletPaymentLogsByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            log
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteWalletPaymentID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteWalletPaymentLogsByEvolinciteUserIDQuery>(
      response.data.evolinciteWalletPaymentLogsByEvolinciteUserID
    );
  }
  async EvolinciteWalletPaymentLogsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteWalletPaymentLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteWalletPaymentLogsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteWalletPaymentLogsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteWalletPaymentLogFilterInput, $limit: Int, $nextToken: String) {
        evolinciteWalletPaymentLogsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            log
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteWalletPaymentID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteWalletPaymentLogsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteWalletPaymentLogsByEvolinciteCompanyID
    );
  }
  async EvolinciteWalletPaymentLogsByEvolinciteWalletPaymentIDAndCreatedAt(
    evolinciteWalletPaymentID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteWalletPaymentLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteWalletPaymentLogsByEvolinciteWalletPaymentIDAndCreatedAtQuery> {
    const statement = `query EvolinciteWalletPaymentLogsByEvolinciteWalletPaymentIDAndCreatedAt($evolinciteWalletPaymentID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteWalletPaymentLogFilterInput, $limit: Int, $nextToken: String) {
        evolinciteWalletPaymentLogsByEvolinciteWalletPaymentIDAndCreatedAt(
          evolinciteWalletPaymentID: $evolinciteWalletPaymentID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            log
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteWalletPaymentID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteWalletPaymentID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <
      EvolinciteWalletPaymentLogsByEvolinciteWalletPaymentIDAndCreatedAtQuery
    >response.data
      .evolinciteWalletPaymentLogsByEvolinciteWalletPaymentIDAndCreatedAt;
  }
  async GetEvolinciteExpenseLog(
    id: string
  ): Promise<GetEvolinciteExpenseLogQuery> {
    const statement = `query GetEvolinciteExpenseLog($id: ID!) {
        getEvolinciteExpenseLog(id: $id) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteExpenseID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteExpense {
            __typename
            id
            amount
            process
            expenseState
            expenseDate
            observations
            voucher
            transactionType
            reference
            state
            evolinciteExpenseTypeID
            evolinciteCrmNegotiationID
            evolinciteCompanyID
            evolinciteUserID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteExpenseLogQuery>response.data.getEvolinciteExpenseLog;
  }
  async ListEvolinciteExpenseLogs(
    filter?: ModelEvolinciteExpenseLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteExpenseLogsQuery> {
    const statement = `query ListEvolinciteExpenseLogs($filter: ModelEvolinciteExpenseLogFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteExpenseLogs(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            log
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteExpenseID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteExpenseLogsQuery>(
      response.data.listEvolinciteExpenseLogs
    );
  }
  async EvolinciteExpenseLogsByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteExpenseLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteExpenseLogsByEvolinciteUserIDQuery> {
    const statement = `query EvolinciteExpenseLogsByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteExpenseLogFilterInput, $limit: Int, $nextToken: String) {
        evolinciteExpenseLogsByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            log
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteExpenseID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteExpenseLogsByEvolinciteUserIDQuery>(
      response.data.evolinciteExpenseLogsByEvolinciteUserID
    );
  }
  async EvolinciteExpenseLogsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteExpenseLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteExpenseLogsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteExpenseLogsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteExpenseLogFilterInput, $limit: Int, $nextToken: String) {
        evolinciteExpenseLogsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            log
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteExpenseID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteExpenseLogsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteExpenseLogsByEvolinciteCompanyID
    );
  }
  async EvolinciteExpenseLogsByEvolinciteExpenseIDAndCreatedAt(
    evolinciteExpenseID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteExpenseLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteExpenseLogsByEvolinciteExpenseIDAndCreatedAtQuery> {
    const statement = `query EvolinciteExpenseLogsByEvolinciteExpenseIDAndCreatedAt($evolinciteExpenseID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteExpenseLogFilterInput, $limit: Int, $nextToken: String) {
        evolinciteExpenseLogsByEvolinciteExpenseIDAndCreatedAt(
          evolinciteExpenseID: $evolinciteExpenseID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            log
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteExpenseID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteExpenseID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteExpenseLogsByEvolinciteExpenseIDAndCreatedAtQuery>(
      response.data.evolinciteExpenseLogsByEvolinciteExpenseIDAndCreatedAt
    );
  }
  async GetEvolinciteTicket(id: string): Promise<GetEvolinciteTicketQuery> {
    const statement = `query GetEvolinciteTicket($id: ID!) {
        getEvolinciteTicket(id: $id) {
          __typename
          id
          name
          description
          documents
          meta
          ticketState
          state
          evolinciteUserID
          evolinciteCompanyOwnerID
          evolinciteCompanyOriginID
          EvolinciteCompanyOwner {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCompanyOrigin {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteTicketQuery>response.data.getEvolinciteTicket;
  }
  async ListEvolinciteTickets(
    filter?: ModelEvolinciteTicketFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteTicketsQuery> {
    const statement = `query ListEvolinciteTickets($filter: ModelEvolinciteTicketFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteTickets(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            description
            documents
            meta
            ticketState
            state
            evolinciteUserID
            evolinciteCompanyOwnerID
            evolinciteCompanyOriginID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteTicketsQuery>response.data.listEvolinciteTickets;
  }
  async EvolinciteTicketsByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteTicketFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteTicketsByEvolinciteUserIDQuery> {
    const statement = `query EvolinciteTicketsByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteTicketFilterInput, $limit: Int, $nextToken: String) {
        evolinciteTicketsByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            description
            documents
            meta
            ticketState
            state
            evolinciteUserID
            evolinciteCompanyOwnerID
            evolinciteCompanyOriginID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteTicketsByEvolinciteUserIDQuery>(
      response.data.evolinciteTicketsByEvolinciteUserID
    );
  }
  async EvolinciteTicketsByEvolinciteCompanyOwnerID(
    evolinciteCompanyOwnerID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteTicketFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteTicketsByEvolinciteCompanyOwnerIDQuery> {
    const statement = `query EvolinciteTicketsByEvolinciteCompanyOwnerID($evolinciteCompanyOwnerID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteTicketFilterInput, $limit: Int, $nextToken: String) {
        evolinciteTicketsByEvolinciteCompanyOwnerID(
          evolinciteCompanyOwnerID: $evolinciteCompanyOwnerID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            description
            documents
            meta
            ticketState
            state
            evolinciteUserID
            evolinciteCompanyOwnerID
            evolinciteCompanyOriginID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyOwnerID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteTicketsByEvolinciteCompanyOwnerIDQuery>(
      response.data.evolinciteTicketsByEvolinciteCompanyOwnerID
    );
  }
  async EvolinciteTicketsByEvolinciteCompanyOriginID(
    evolinciteCompanyOriginID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteTicketFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteTicketsByEvolinciteCompanyOriginIDQuery> {
    const statement = `query EvolinciteTicketsByEvolinciteCompanyOriginID($evolinciteCompanyOriginID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteTicketFilterInput, $limit: Int, $nextToken: String) {
        evolinciteTicketsByEvolinciteCompanyOriginID(
          evolinciteCompanyOriginID: $evolinciteCompanyOriginID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            description
            documents
            meta
            ticketState
            state
            evolinciteUserID
            evolinciteCompanyOwnerID
            evolinciteCompanyOriginID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyOriginID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteTicketsByEvolinciteCompanyOriginIDQuery>(
      response.data.evolinciteTicketsByEvolinciteCompanyOriginID
    );
  }
  async GetEvolinciteTicketLog(
    id: string
  ): Promise<GetEvolinciteTicketLogQuery> {
    const statement = `query GetEvolinciteTicketLog($id: ID!) {
        getEvolinciteTicketLog(id: $id) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteTicketID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteTicket {
            __typename
            id
            name
            description
            documents
            meta
            ticketState
            state
            evolinciteUserID
            evolinciteCompanyOwnerID
            evolinciteCompanyOriginID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteTicketLogQuery>response.data.getEvolinciteTicketLog;
  }
  async ListEvolinciteTicketLogs(
    filter?: ModelEvolinciteTicketLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteTicketLogsQuery> {
    const statement = `query ListEvolinciteTicketLogs($filter: ModelEvolinciteTicketLogFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteTicketLogs(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            log
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteTicketID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteTicketLogsQuery>(
      response.data.listEvolinciteTicketLogs
    );
  }
  async EvolinciteTicketLogsByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteTicketLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteTicketLogsByEvolinciteUserIDQuery> {
    const statement = `query EvolinciteTicketLogsByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteTicketLogFilterInput, $limit: Int, $nextToken: String) {
        evolinciteTicketLogsByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            log
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteTicketID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteTicketLogsByEvolinciteUserIDQuery>(
      response.data.evolinciteTicketLogsByEvolinciteUserID
    );
  }
  async EvolinciteTicketLogsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteTicketLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteTicketLogsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteTicketLogsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteTicketLogFilterInput, $limit: Int, $nextToken: String) {
        evolinciteTicketLogsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            log
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteTicketID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteTicketLogsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteTicketLogsByEvolinciteCompanyID
    );
  }
  async EvolinciteTicketLogsByEvolinciteTicketIDAndCreatedAt(
    evolinciteTicketID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteTicketLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteTicketLogsByEvolinciteTicketIDAndCreatedAtQuery> {
    const statement = `query EvolinciteTicketLogsByEvolinciteTicketIDAndCreatedAt($evolinciteTicketID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteTicketLogFilterInput, $limit: Int, $nextToken: String) {
        evolinciteTicketLogsByEvolinciteTicketIDAndCreatedAt(
          evolinciteTicketID: $evolinciteTicketID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            log
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteTicketID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteTicketID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteTicketLogsByEvolinciteTicketIDAndCreatedAtQuery>(
      response.data.evolinciteTicketLogsByEvolinciteTicketIDAndCreatedAt
    );
  }
  async GetEvolinciteFile(id: string): Promise<GetEvolinciteFileQuery> {
    const statement = `query GetEvolinciteFile($id: ID!) {
        getEvolinciteFile(id: $id) {
          __typename
          id
          name
          size
          meta
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteFolderID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFolder {
            __typename
            id
            parent
            name
            meta
            state
            evolinciteUserID
            evolinciteUserOwnerID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteFileQuery>response.data.getEvolinciteFile;
  }
  async ListEvolinciteFiles(
    filter?: ModelEvolinciteFileFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteFilesQuery> {
    const statement = `query ListEvolinciteFiles($filter: ModelEvolinciteFileFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteFiles(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            size
            meta
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteFolderID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteFilesQuery>response.data.listEvolinciteFiles;
  }
  async EvolinciteFilesByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteFileFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteFilesByEvolinciteUserIDQuery> {
    const statement = `query EvolinciteFilesByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteFileFilterInput, $limit: Int, $nextToken: String) {
        evolinciteFilesByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            size
            meta
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteFolderID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteFilesByEvolinciteUserIDQuery>(
      response.data.evolinciteFilesByEvolinciteUserID
    );
  }
  async EvolinciteFilesByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteFileFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteFilesByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteFilesByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteFileFilterInput, $limit: Int, $nextToken: String) {
        evolinciteFilesByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            size
            meta
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteFolderID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteFilesByEvolinciteCompanyIDQuery>(
      response.data.evolinciteFilesByEvolinciteCompanyID
    );
  }
  async EvolinciteFilesByEvolinciteFolderIDAndUpdatedAt(
    evolinciteFolderID: string,
    updatedAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteFileFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteFilesByEvolinciteFolderIDAndUpdatedAtQuery> {
    const statement = `query EvolinciteFilesByEvolinciteFolderIDAndUpdatedAt($evolinciteFolderID: ID!, $updatedAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteFileFilterInput, $limit: Int, $nextToken: String) {
        evolinciteFilesByEvolinciteFolderIDAndUpdatedAt(
          evolinciteFolderID: $evolinciteFolderID
          updatedAt: $updatedAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            size
            meta
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteFolderID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteFolderID,
    };
    if (updatedAt) {
      gqlAPIServiceArguments.updatedAt = updatedAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteFilesByEvolinciteFolderIDAndUpdatedAtQuery>(
      response.data.evolinciteFilesByEvolinciteFolderIDAndUpdatedAt
    );
  }
  async GetEvolinciteFolder(id: string): Promise<GetEvolinciteFolderQuery> {
    const statement = `query GetEvolinciteFolder($id: ID!) {
        getEvolinciteFolder(id: $id) {
          __typename
          id
          parent
          name
          meta
          state
          evolinciteUserID
          evolinciteUserOwnerID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteFolderQuery>response.data.getEvolinciteFolder;
  }
  async ListEvolinciteFolders(
    filter?: ModelEvolinciteFolderFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteFoldersQuery> {
    const statement = `query ListEvolinciteFolders($filter: ModelEvolinciteFolderFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteFolders(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            parent
            name
            meta
            state
            evolinciteUserID
            evolinciteUserOwnerID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteFoldersQuery>response.data.listEvolinciteFolders;
  }
  async EvolinciteFoldersByParent(
    parent: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteFolderFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteFoldersByParentQuery> {
    const statement = `query EvolinciteFoldersByParent($parent: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteFolderFilterInput, $limit: Int, $nextToken: String) {
        evolinciteFoldersByParent(
          parent: $parent
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            parent
            name
            meta
            state
            evolinciteUserID
            evolinciteUserOwnerID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      parent,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteFoldersByParentQuery>(
      response.data.evolinciteFoldersByParent
    );
  }
  async EvolinciteFoldersByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteFolderFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteFoldersByEvolinciteUserIDQuery> {
    const statement = `query EvolinciteFoldersByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteFolderFilterInput, $limit: Int, $nextToken: String) {
        evolinciteFoldersByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            parent
            name
            meta
            state
            evolinciteUserID
            evolinciteUserOwnerID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteFoldersByEvolinciteUserIDQuery>(
      response.data.evolinciteFoldersByEvolinciteUserID
    );
  }
  async EvolinciteFoldersByEvolinciteUserOwnerID(
    evolinciteUserOwnerID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteFolderFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteFoldersByEvolinciteUserOwnerIDQuery> {
    const statement = `query EvolinciteFoldersByEvolinciteUserOwnerID($evolinciteUserOwnerID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteFolderFilterInput, $limit: Int, $nextToken: String) {
        evolinciteFoldersByEvolinciteUserOwnerID(
          evolinciteUserOwnerID: $evolinciteUserOwnerID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            parent
            name
            meta
            state
            evolinciteUserID
            evolinciteUserOwnerID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserOwnerID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteFoldersByEvolinciteUserOwnerIDQuery>(
      response.data.evolinciteFoldersByEvolinciteUserOwnerID
    );
  }
  async EvolinciteFoldersByEvolinciteCompanyIDAndCreatedAt(
    evolinciteCompanyID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteFolderFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteFoldersByEvolinciteCompanyIDAndCreatedAtQuery> {
    const statement = `query EvolinciteFoldersByEvolinciteCompanyIDAndCreatedAt($evolinciteCompanyID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteFolderFilterInput, $limit: Int, $nextToken: String) {
        evolinciteFoldersByEvolinciteCompanyIDAndCreatedAt(
          evolinciteCompanyID: $evolinciteCompanyID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            parent
            name
            meta
            state
            evolinciteUserID
            evolinciteUserOwnerID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteFoldersByEvolinciteCompanyIDAndCreatedAtQuery>(
      response.data.evolinciteFoldersByEvolinciteCompanyIDAndCreatedAt
    );
  }
  async GetEvolinciteArticle(id: string): Promise<GetEvolinciteArticleQuery> {
    const statement = `query GetEvolinciteArticle($id: ID!) {
        getEvolinciteArticle(id: $id) {
          __typename
          id
          front
          cover
          title
          content
          articleState
          visibility
          publicationDate
          meta
          files
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteArticleComments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteArticleQuery>response.data.getEvolinciteArticle;
  }
  async ListEvolinciteArticles(
    filter?: ModelEvolinciteArticleFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteArticlesQuery> {
    const statement = `query ListEvolinciteArticles($filter: ModelEvolinciteArticleFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteArticles(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            front
            cover
            title
            content
            articleState
            visibility
            publicationDate
            meta
            files
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteArticlesQuery>response.data.listEvolinciteArticles;
  }
  async EvolinciteArticlesByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteArticleFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteArticlesByEvolinciteUserIDQuery> {
    const statement = `query EvolinciteArticlesByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteArticleFilterInput, $limit: Int, $nextToken: String) {
        evolinciteArticlesByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            front
            cover
            title
            content
            articleState
            visibility
            publicationDate
            meta
            files
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteArticlesByEvolinciteUserIDQuery>(
      response.data.evolinciteArticlesByEvolinciteUserID
    );
  }
  async EvolinciteArticlesByEvolinciteCompanyIDAndCreatedAt(
    evolinciteCompanyID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteArticleFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteArticlesByEvolinciteCompanyIDAndCreatedAtQuery> {
    const statement = `query EvolinciteArticlesByEvolinciteCompanyIDAndCreatedAt($evolinciteCompanyID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteArticleFilterInput, $limit: Int, $nextToken: String) {
        evolinciteArticlesByEvolinciteCompanyIDAndCreatedAt(
          evolinciteCompanyID: $evolinciteCompanyID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            front
            cover
            title
            content
            articleState
            visibility
            publicationDate
            meta
            files
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteArticlesByEvolinciteCompanyIDAndCreatedAtQuery>(
      response.data.evolinciteArticlesByEvolinciteCompanyIDAndCreatedAt
    );
  }
  async GetEvolinciteArticleComment(
    id: string
  ): Promise<GetEvolinciteArticleCommentQuery> {
    const statement = `query GetEvolinciteArticleComment($id: ID!) {
        getEvolinciteArticleComment(id: $id) {
          __typename
          id
          content
          state
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteArticleID
          EvolinciteArticle {
            __typename
            id
            front
            cover
            title
            content
            articleState
            visibility
            publicationDate
            meta
            files
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteArticleCommentQuery>(
      response.data.getEvolinciteArticleComment
    );
  }
  async ListEvolinciteArticleComments(
    filter?: ModelEvolinciteArticleCommentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteArticleCommentsQuery> {
    const statement = `query ListEvolinciteArticleComments($filter: ModelEvolinciteArticleCommentFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteArticleComments(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            content
            state
            evolinciteUserID
            evolinciteArticleID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteArticleCommentsQuery>(
      response.data.listEvolinciteArticleComments
    );
  }
  async EvolinciteArticleCommentsByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteArticleCommentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteArticleCommentsByEvolinciteUserIDQuery> {
    const statement = `query EvolinciteArticleCommentsByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteArticleCommentFilterInput, $limit: Int, $nextToken: String) {
        evolinciteArticleCommentsByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            content
            state
            evolinciteUserID
            evolinciteArticleID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteArticleCommentsByEvolinciteUserIDQuery>(
      response.data.evolinciteArticleCommentsByEvolinciteUserID
    );
  }
  async EvolinciteArticleCommentsByEvolinciteArticleIDAndCreatedAt(
    evolinciteArticleID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteArticleCommentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteArticleCommentsByEvolinciteArticleIDAndCreatedAtQuery> {
    const statement = `query EvolinciteArticleCommentsByEvolinciteArticleIDAndCreatedAt($evolinciteArticleID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteArticleCommentFilterInput, $limit: Int, $nextToken: String) {
        evolinciteArticleCommentsByEvolinciteArticleIDAndCreatedAt(
          evolinciteArticleID: $evolinciteArticleID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            content
            state
            evolinciteUserID
            evolinciteArticleID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteArticleID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteArticleCommentsByEvolinciteArticleIDAndCreatedAtQuery>(
      response.data.evolinciteArticleCommentsByEvolinciteArticleIDAndCreatedAt
    );
  }
  async GetEvolinciteFormConfiguration(
    id: string
  ): Promise<GetEvolinciteFormConfigurationQuery> {
    const statement = `query GetEvolinciteFormConfiguration($id: ID!) {
        getEvolinciteFormConfiguration(id: $id) {
          __typename
          id
          key
          name
          config
          meta
          title
          description
          observations
          front
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteFormConfigurationQuery>(
      response.data.getEvolinciteFormConfiguration
    );
  }
  async ListEvolinciteFormConfigurations(
    filter?: ModelEvolinciteFormConfigurationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteFormConfigurationsQuery> {
    const statement = `query ListEvolinciteFormConfigurations($filter: ModelEvolinciteFormConfigurationFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteFormConfigurations(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            key
            name
            config
            meta
            title
            description
            observations
            front
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteFormConfigurationsQuery>(
      response.data.listEvolinciteFormConfigurations
    );
  }
  async EvolinciteFormConfigurationsByKey(
    key: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteFormConfigurationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteFormConfigurationsByKeyQuery> {
    const statement = `query EvolinciteFormConfigurationsByKey($key: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteFormConfigurationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteFormConfigurationsByKey(
          key: $key
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            key
            name
            config
            meta
            title
            description
            observations
            front
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      key,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteFormConfigurationsByKeyQuery>(
      response.data.evolinciteFormConfigurationsByKey
    );
  }
  async EvolinciteFormConfigurationsByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteFormConfigurationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteFormConfigurationsByEvolinciteUserIDQuery> {
    const statement = `query EvolinciteFormConfigurationsByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteFormConfigurationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteFormConfigurationsByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            key
            name
            config
            meta
            title
            description
            observations
            front
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteFormConfigurationsByEvolinciteUserIDQuery>(
      response.data.evolinciteFormConfigurationsByEvolinciteUserID
    );
  }
  async EvolinciteFormConfigurationsByEvolinciteCompanyIDAndCreatedAt(
    evolinciteCompanyID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteFormConfigurationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteFormConfigurationsByEvolinciteCompanyIDAndCreatedAtQuery> {
    const statement = `query EvolinciteFormConfigurationsByEvolinciteCompanyIDAndCreatedAt($evolinciteCompanyID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteFormConfigurationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteFormConfigurationsByEvolinciteCompanyIDAndCreatedAt(
          evolinciteCompanyID: $evolinciteCompanyID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            key
            name
            config
            meta
            title
            description
            observations
            front
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteFormConfigurationsByEvolinciteCompanyIDAndCreatedAtQuery>(
      response.data
        .evolinciteFormConfigurationsByEvolinciteCompanyIDAndCreatedAt
    );
  }
  async GetEvolinciteFormAnswer(
    id: string
  ): Promise<GetEvolinciteFormAnswerQuery> {
    const statement = `query GetEvolinciteFormAnswer($id: ID!) {
        getEvolinciteFormAnswer(id: $id) {
          __typename
          id
          meta
          answerState
          state
          evolinciteUserID
          evolinciteFormConfigurationID
          EvolinciteFormConfiguration {
            __typename
            id
            key
            name
            config
            meta
            title
            description
            observations
            front
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteFormAnswerQuery>response.data.getEvolinciteFormAnswer;
  }
  async ListEvolinciteFormAnswers(
    filter?: ModelEvolinciteFormAnswerFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteFormAnswersQuery> {
    const statement = `query ListEvolinciteFormAnswers($filter: ModelEvolinciteFormAnswerFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteFormAnswers(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            meta
            answerState
            state
            evolinciteUserID
            evolinciteFormConfigurationID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteFormAnswersQuery>(
      response.data.listEvolinciteFormAnswers
    );
  }
  async EvolinciteFormAnswersByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteFormAnswerFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteFormAnswersByEvolinciteUserIDQuery> {
    const statement = `query EvolinciteFormAnswersByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteFormAnswerFilterInput, $limit: Int, $nextToken: String) {
        evolinciteFormAnswersByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            meta
            answerState
            state
            evolinciteUserID
            evolinciteFormConfigurationID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteFormAnswersByEvolinciteUserIDQuery>(
      response.data.evolinciteFormAnswersByEvolinciteUserID
    );
  }
  async EvolinciteFormAnswersByEvolinciteFormConfigurationIDAndCreatedAt(
    evolinciteFormConfigurationID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteFormAnswerFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteFormAnswersByEvolinciteFormConfigurationIDAndCreatedAtQuery> {
    const statement = `query EvolinciteFormAnswersByEvolinciteFormConfigurationIDAndCreatedAt($evolinciteFormConfigurationID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteFormAnswerFilterInput, $limit: Int, $nextToken: String) {
        evolinciteFormAnswersByEvolinciteFormConfigurationIDAndCreatedAt(
          evolinciteFormConfigurationID: $evolinciteFormConfigurationID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            meta
            answerState
            state
            evolinciteUserID
            evolinciteFormConfigurationID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteFormConfigurationID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <
      EvolinciteFormAnswersByEvolinciteFormConfigurationIDAndCreatedAtQuery
    >response.data
      .evolinciteFormAnswersByEvolinciteFormConfigurationIDAndCreatedAt;
  }
  async EvolinciteFormAnswersByEvolinciteCompanyIDAndCreatedAt(
    evolinciteCompanyID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteFormAnswerFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteFormAnswersByEvolinciteCompanyIDAndCreatedAtQuery> {
    const statement = `query EvolinciteFormAnswersByEvolinciteCompanyIDAndCreatedAt($evolinciteCompanyID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteFormAnswerFilterInput, $limit: Int, $nextToken: String) {
        evolinciteFormAnswersByEvolinciteCompanyIDAndCreatedAt(
          evolinciteCompanyID: $evolinciteCompanyID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            meta
            answerState
            state
            evolinciteUserID
            evolinciteFormConfigurationID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteFormAnswersByEvolinciteCompanyIDAndCreatedAtQuery>(
      response.data.evolinciteFormAnswersByEvolinciteCompanyIDAndCreatedAt
    );
  }
  async GetEvolincitePaymentAutomation(
    id: string
  ): Promise<GetEvolincitePaymentAutomationQuery> {
    const statement = `query GetEvolincitePaymentAutomation($id: ID!) {
        getEvolincitePaymentAutomation(id: $id) {
          __typename
          id
          name
          setting
          order
          repeat
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolincitePaymentAutomationQuery>(
      response.data.getEvolincitePaymentAutomation
    );
  }
  async ListEvolincitePaymentAutomations(
    filter?: ModelEvolincitePaymentAutomationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolincitePaymentAutomationsQuery> {
    const statement = `query ListEvolincitePaymentAutomations($filter: ModelEvolincitePaymentAutomationFilterInput, $limit: Int, $nextToken: String) {
        listEvolincitePaymentAutomations(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            setting
            order
            repeat
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolincitePaymentAutomationsQuery>(
      response.data.listEvolincitePaymentAutomations
    );
  }
  async EvolincitePaymentAutomationsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolincitePaymentAutomationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolincitePaymentAutomationsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolincitePaymentAutomationsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolincitePaymentAutomationFilterInput, $limit: Int, $nextToken: String) {
        evolincitePaymentAutomationsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            setting
            order
            repeat
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolincitePaymentAutomationsByEvolinciteCompanyIDQuery>(
      response.data.evolincitePaymentAutomationsByEvolinciteCompanyID
    );
  }
  async GetEvolinciteMail(id: string): Promise<GetEvolinciteMailQuery> {
    const statement = `query GetEvolinciteMail($id: ID!) {
        getEvolinciteMail(id: $id) {
          __typename
          id
          destinations
          subject
          content
          submissionStatus
          setting
          response
          files
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteMailQuery>response.data.getEvolinciteMail;
  }
  async ListEvolinciteMails(
    filter?: ModelEvolinciteMailFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteMailsQuery> {
    const statement = `query ListEvolinciteMails($filter: ModelEvolinciteMailFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteMails(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            destinations
            subject
            content
            submissionStatus
            setting
            response
            files
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteMailsQuery>response.data.listEvolinciteMails;
  }
  async EvolinciteMailsByEvolinciteCompanyIDAndCreatedAt(
    evolinciteCompanyID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteMailFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteMailsByEvolinciteCompanyIDAndCreatedAtQuery> {
    const statement = `query EvolinciteMailsByEvolinciteCompanyIDAndCreatedAt($evolinciteCompanyID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteMailFilterInput, $limit: Int, $nextToken: String) {
        evolinciteMailsByEvolinciteCompanyIDAndCreatedAt(
          evolinciteCompanyID: $evolinciteCompanyID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            destinations
            subject
            content
            submissionStatus
            setting
            response
            files
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteMailsByEvolinciteCompanyIDAndCreatedAtQuery>(
      response.data.evolinciteMailsByEvolinciteCompanyIDAndCreatedAt
    );
  }
  async EvolinciteMailsByEvolinciteUserIDAndCreatedAt(
    evolinciteUserID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteMailFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteMailsByEvolinciteUserIDAndCreatedAtQuery> {
    const statement = `query EvolinciteMailsByEvolinciteUserIDAndCreatedAt($evolinciteUserID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteMailFilterInput, $limit: Int, $nextToken: String) {
        evolinciteMailsByEvolinciteUserIDAndCreatedAt(
          evolinciteUserID: $evolinciteUserID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            destinations
            subject
            content
            submissionStatus
            setting
            response
            files
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteMailsByEvolinciteUserIDAndCreatedAtQuery>(
      response.data.evolinciteMailsByEvolinciteUserIDAndCreatedAt
    );
  }
  async GetEvolinciteMailConfiguration(
    id: string
  ): Promise<GetEvolinciteMailConfigurationQuery> {
    const statement = `query GetEvolinciteMailConfiguration($id: ID!) {
        getEvolinciteMailConfiguration(id: $id) {
          __typename
          id
          SMTP
          email
          password
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteMailConfigurationQuery>(
      response.data.getEvolinciteMailConfiguration
    );
  }
  async ListEvolinciteMailConfigurations(
    filter?: ModelEvolinciteMailConfigurationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteMailConfigurationsQuery> {
    const statement = `query ListEvolinciteMailConfigurations($filter: ModelEvolinciteMailConfigurationFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteMailConfigurations(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            SMTP
            email
            password
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteMailConfigurationsQuery>(
      response.data.listEvolinciteMailConfigurations
    );
  }
  async EvolinciteMailConfigurationsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteMailConfigurationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteMailConfigurationsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteMailConfigurationsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteMailConfigurationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteMailConfigurationsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            SMTP
            email
            password
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteMailConfigurationsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteMailConfigurationsByEvolinciteCompanyID
    );
  }
  async EvolinciteMailConfigurationsByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteMailConfigurationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteMailConfigurationsByEvolinciteUserIDQuery> {
    const statement = `query EvolinciteMailConfigurationsByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteMailConfigurationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteMailConfigurationsByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            SMTP
            email
            password
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteMailConfigurationsByEvolinciteUserIDQuery>(
      response.data.evolinciteMailConfigurationsByEvolinciteUserID
    );
  }
  async GetEvolinciteMailTemplate(
    id: string
  ): Promise<GetEvolinciteMailTemplateQuery> {
    const statement = `query GetEvolinciteMailTemplate($id: ID!) {
        getEvolinciteMailTemplate(id: $id) {
          __typename
          id
          destinations
          subject
          content
          files
          transmitter
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteMailTemplateQuery>(
      response.data.getEvolinciteMailTemplate
    );
  }
  async ListEvolinciteMailTemplates(
    filter?: ModelEvolinciteMailTemplateFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteMailTemplatesQuery> {
    const statement = `query ListEvolinciteMailTemplates($filter: ModelEvolinciteMailTemplateFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteMailTemplates(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            destinations
            subject
            content
            files
            transmitter
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteMailTemplatesQuery>(
      response.data.listEvolinciteMailTemplates
    );
  }
  async EvolinciteMailTemplatesByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteMailTemplateFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteMailTemplatesByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteMailTemplatesByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteMailTemplateFilterInput, $limit: Int, $nextToken: String) {
        evolinciteMailTemplatesByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            destinations
            subject
            content
            files
            transmitter
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteMailTemplatesByEvolinciteCompanyIDQuery>(
      response.data.evolinciteMailTemplatesByEvolinciteCompanyID
    );
  }
  async GetEvolinciteMailTemplateLog(
    id: string
  ): Promise<GetEvolinciteMailTemplateLogQuery> {
    const statement = `query GetEvolinciteMailTemplateLog($id: ID!) {
        getEvolinciteMailTemplateLog(id: $id) {
          __typename
          id
          key
          log
          date
          previousLog
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteMailTemplateLogQuery>(
      response.data.getEvolinciteMailTemplateLog
    );
  }
  async ListEvolinciteMailTemplateLogs(
    filter?: ModelEvolinciteMailTemplateLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteMailTemplateLogsQuery> {
    const statement = `query ListEvolinciteMailTemplateLogs($filter: ModelEvolinciteMailTemplateLogFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteMailTemplateLogs(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            key
            log
            date
            previousLog
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteMailTemplateLogsQuery>(
      response.data.listEvolinciteMailTemplateLogs
    );
  }
  async EvolinciteMailTemplateLogsByKey(
    key: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteMailTemplateLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteMailTemplateLogsByKeyQuery> {
    const statement = `query EvolinciteMailTemplateLogsByKey($key: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteMailTemplateLogFilterInput, $limit: Int, $nextToken: String) {
        evolinciteMailTemplateLogsByKey(
          key: $key
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            key
            log
            date
            previousLog
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      key,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteMailTemplateLogsByKeyQuery>(
      response.data.evolinciteMailTemplateLogsByKey
    );
  }
  async EvolinciteMailTemplateLogsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteMailTemplateLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteMailTemplateLogsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteMailTemplateLogsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteMailTemplateLogFilterInput, $limit: Int, $nextToken: String) {
        evolinciteMailTemplateLogsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            key
            log
            date
            previousLog
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteMailTemplateLogsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteMailTemplateLogsByEvolinciteCompanyID
    );
  }
  async EvolinciteMailTemplateLogsByEvolinciteUserID(
    evolinciteUserID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteMailTemplateLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteMailTemplateLogsByEvolinciteUserIDQuery> {
    const statement = `query EvolinciteMailTemplateLogsByEvolinciteUserID($evolinciteUserID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteMailTemplateLogFilterInput, $limit: Int, $nextToken: String) {
        evolinciteMailTemplateLogsByEvolinciteUserID(
          evolinciteUserID: $evolinciteUserID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            key
            log
            date
            previousLog
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteMailTemplateLogsByEvolinciteUserIDQuery>(
      response.data.evolinciteMailTemplateLogsByEvolinciteUserID
    );
  }
  async GetEvolincitePackage(id: string): Promise<GetEvolincitePackageQuery> {
    const statement = `query GetEvolincitePackage($id: ID!) {
        getEvolincitePackage(id: $id) {
          __typename
          id
          name
          description
          goal
          duration
          state
          EvolinciteFunctionalities {
            __typename
            nextToken
          }
          EvolinciteCompanySubscriptions {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolincitePackageQuery>response.data.getEvolincitePackage;
  }
  async ListEvolincitePackages(
    filter?: ModelEvolincitePackageFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolincitePackagesQuery> {
    const statement = `query ListEvolincitePackages($filter: ModelEvolincitePackageFilterInput, $limit: Int, $nextToken: String) {
        listEvolincitePackages(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            description
            goal
            duration
            state
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolincitePackagesQuery>response.data.listEvolincitePackages;
  }
  async GetEvolinciteCompanySubscription(
    id: string
  ): Promise<GetEvolinciteCompanySubscriptionQuery> {
    const statement = `query GetEvolinciteCompanySubscription($id: ID!) {
        getEvolinciteCompanySubscription(id: $id) {
          __typename
          id
          name
          price
          dateInitial
          dateFinal
          activatorUser
          state
          evolincitePackageID
          EvolincitePackage {
            __typename
            id
            name
            description
            goal
            duration
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteCompanySubscriptionQuery>(
      response.data.getEvolinciteCompanySubscription
    );
  }
  async ListEvolinciteCompanySubscriptions(
    filter?: ModelEvolinciteCompanySubscriptionFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteCompanySubscriptionsQuery> {
    const statement = `query ListEvolinciteCompanySubscriptions($filter: ModelEvolinciteCompanySubscriptionFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteCompanySubscriptions(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            price
            dateInitial
            dateFinal
            activatorUser
            state
            evolincitePackageID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteCompanySubscriptionsQuery>(
      response.data.listEvolinciteCompanySubscriptions
    );
  }
  async EvolinciteCompanySubscriptionsByEvolincitePackageID(
    evolincitePackageID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCompanySubscriptionFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCompanySubscriptionsByEvolincitePackageIDQuery> {
    const statement = `query EvolinciteCompanySubscriptionsByEvolincitePackageID($evolincitePackageID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCompanySubscriptionFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCompanySubscriptionsByEvolincitePackageID(
          evolincitePackageID: $evolincitePackageID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            price
            dateInitial
            dateFinal
            activatorUser
            state
            evolincitePackageID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolincitePackageID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCompanySubscriptionsByEvolincitePackageIDQuery>(
      response.data.evolinciteCompanySubscriptionsByEvolincitePackageID
    );
  }
  async EvolinciteCompanySubscriptionsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteCompanySubscriptionFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteCompanySubscriptionsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteCompanySubscriptionsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteCompanySubscriptionFilterInput, $limit: Int, $nextToken: String) {
        evolinciteCompanySubscriptionsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            price
            dateInitial
            dateFinal
            activatorUser
            state
            evolincitePackageID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteCompanySubscriptionsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteCompanySubscriptionsByEvolinciteCompanyID
    );
  }
  async GetEvolinciteEmployeeObservation(
    id: string
  ): Promise<GetEvolinciteEmployeeObservationQuery> {
    const statement = `query GetEvolinciteEmployeeObservation($id: ID!) {
        getEvolinciteEmployeeObservation(id: $id) {
          __typename
          id
          name
          content
          isPublic
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteEmployeeObservationQuery>(
      response.data.getEvolinciteEmployeeObservation
    );
  }
  async ListEvolinciteEmployeeObservations(
    filter?: ModelEvolinciteEmployeeObservationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteEmployeeObservationsQuery> {
    const statement = `query ListEvolinciteEmployeeObservations($filter: ModelEvolinciteEmployeeObservationFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteEmployeeObservations(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            content
            isPublic
            meta
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteEmployeeObservationsQuery>(
      response.data.listEvolinciteEmployeeObservations
    );
  }
  async EvolinciteEmployeeObservationsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteEmployeeObservationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteEmployeeObservationsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteEmployeeObservationsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteEmployeeObservationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteEmployeeObservationsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            content
            isPublic
            meta
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteEmployeeObservationsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteEmployeeObservationsByEvolinciteCompanyID
    );
  }
  async EvolinciteEmployeeObservationsByEvolinciteUserIDAndCreatedAt(
    evolinciteUserID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteEmployeeObservationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteEmployeeObservationsByEvolinciteUserIDAndCreatedAtQuery> {
    const statement = `query EvolinciteEmployeeObservationsByEvolinciteUserIDAndCreatedAt($evolinciteUserID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteEmployeeObservationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteEmployeeObservationsByEvolinciteUserIDAndCreatedAt(
          evolinciteUserID: $evolinciteUserID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            content
            isPublic
            meta
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteEmployeeObservationsByEvolinciteUserIDAndCreatedAtQuery>(
      response.data.evolinciteEmployeeObservationsByEvolinciteUserIDAndCreatedAt
    );
  }
  async GetEvolinciteTag(id: string): Promise<GetEvolinciteTagQuery> {
    const statement = `query GetEvolinciteTag($id: ID!) {
        getEvolinciteTag(id: $id) {
          __typename
          id
          name
          description
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteTagQuery>response.data.getEvolinciteTag;
  }
  async ListEvolinciteTags(
    filter?: ModelEvolinciteTagFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteTagsQuery> {
    const statement = `query ListEvolinciteTags($filter: ModelEvolinciteTagFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteTags(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            description
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteTagsQuery>response.data.listEvolinciteTags;
  }
  async EvolinciteTagsByName(
    name: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteTagFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteTagsByNameQuery> {
    const statement = `query EvolinciteTagsByName($name: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteTagFilterInput, $limit: Int, $nextToken: String) {
        evolinciteTagsByName(
          name: $name
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            description
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      name,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteTagsByNameQuery>response.data.evolinciteTagsByName;
  }
  async EvolinciteTagsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteTagFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteTagsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteTagsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteTagFilterInput, $limit: Int, $nextToken: String) {
        evolinciteTagsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            description
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteTagsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteTagsByEvolinciteCompanyID
    );
  }
  async EvolinciteTagsByEvolinciteUserIDAndCreatedAt(
    evolinciteUserID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteTagFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteTagsByEvolinciteUserIDAndCreatedAtQuery> {
    const statement = `query EvolinciteTagsByEvolinciteUserIDAndCreatedAt($evolinciteUserID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteTagFilterInput, $limit: Int, $nextToken: String) {
        evolinciteTagsByEvolinciteUserIDAndCreatedAt(
          evolinciteUserID: $evolinciteUserID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            description
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteTagsByEvolinciteUserIDAndCreatedAtQuery>(
      response.data.evolinciteTagsByEvolinciteUserIDAndCreatedAt
    );
  }
  async GetEvolinciteMilestone(
    id: string
  ): Promise<GetEvolinciteMilestoneQuery> {
    const statement = `query GetEvolinciteMilestone($id: ID!) {
        getEvolinciteMilestone(id: $id) {
          __typename
          name
          description
          tags
          type
          config
          startDate
          endDate
          employees
          managers
          isClosed
          closingNotes
          log
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
          id
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteMilestoneQuery>response.data.getEvolinciteMilestone;
  }
  async ListEvolinciteMilestones(
    filter?: ModelEvolinciteMilestoneFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteMilestonesQuery> {
    const statement = `query ListEvolinciteMilestones($filter: ModelEvolinciteMilestoneFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteMilestones(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            name
            description
            tags
            type
            config
            startDate
            endDate
            employees
            managers
            isClosed
            closingNotes
            log
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
            id
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteMilestonesQuery>(
      response.data.listEvolinciteMilestones
    );
  }
  async EvolinciteMilestonesByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteMilestoneFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteMilestonesByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteMilestonesByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteMilestoneFilterInput, $limit: Int, $nextToken: String) {
        evolinciteMilestonesByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            name
            description
            tags
            type
            config
            startDate
            endDate
            employees
            managers
            isClosed
            closingNotes
            log
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
            id
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteMilestonesByEvolinciteCompanyIDQuery>(
      response.data.evolinciteMilestonesByEvolinciteCompanyID
    );
  }
  async EvolinciteMilestonesByEvolinciteUserIDAndCreatedAt(
    evolinciteUserID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteMilestoneFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteMilestonesByEvolinciteUserIDAndCreatedAtQuery> {
    const statement = `query EvolinciteMilestonesByEvolinciteUserIDAndCreatedAt($evolinciteUserID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteMilestoneFilterInput, $limit: Int, $nextToken: String) {
        evolinciteMilestonesByEvolinciteUserIDAndCreatedAt(
          evolinciteUserID: $evolinciteUserID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            name
            description
            tags
            type
            config
            startDate
            endDate
            employees
            managers
            isClosed
            closingNotes
            log
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
            id
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteMilestonesByEvolinciteUserIDAndCreatedAtQuery>(
      response.data.evolinciteMilestonesByEvolinciteUserIDAndCreatedAt
    );
  }
  async GetEvolinciteUserLog(id: string): Promise<GetEvolinciteUserLogQuery> {
    const statement = `query GetEvolinciteUserLog($id: ID!) {
        getEvolinciteUserLog(id: $id) {
          __typename
          id
          log
          functionality
          state
          key
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteUserLogQuery>response.data.getEvolinciteUserLog;
  }
  async ListEvolinciteUserLogs(
    filter?: ModelEvolinciteUserLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteUserLogsQuery> {
    const statement = `query ListEvolinciteUserLogs($filter: ModelEvolinciteUserLogFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteUserLogs(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            log
            functionality
            state
            key
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteUserLogsQuery>response.data.listEvolinciteUserLogs;
  }
  async EvolinciteUserLogsByKey(
    key: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteUserLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteUserLogsByKeyQuery> {
    const statement = `query EvolinciteUserLogsByKey($key: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteUserLogFilterInput, $limit: Int, $nextToken: String) {
        evolinciteUserLogsByKey(
          key: $key
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            log
            functionality
            state
            key
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      key,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteUserLogsByKeyQuery>response.data.evolinciteUserLogsByKey;
  }
  async EvolinciteUserLogsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteUserLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteUserLogsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteUserLogsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteUserLogFilterInput, $limit: Int, $nextToken: String) {
        evolinciteUserLogsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            log
            functionality
            state
            key
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteUserLogsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteUserLogsByEvolinciteCompanyID
    );
  }
  async EvolinciteUserLogsByEvolinciteUserIDAndCreatedAt(
    evolinciteUserID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteUserLogFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteUserLogsByEvolinciteUserIDAndCreatedAtQuery> {
    const statement = `query EvolinciteUserLogsByEvolinciteUserIDAndCreatedAt($evolinciteUserID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteUserLogFilterInput, $limit: Int, $nextToken: String) {
        evolinciteUserLogsByEvolinciteUserIDAndCreatedAt(
          evolinciteUserID: $evolinciteUserID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            log
            functionality
            state
            key
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteUserLogsByEvolinciteUserIDAndCreatedAtQuery>(
      response.data.evolinciteUserLogsByEvolinciteUserIDAndCreatedAt
    );
  }
  async GetEvolinciteUserTimeTracking(
    id: string
  ): Promise<GetEvolinciteUserTimeTrackingQuery> {
    const statement = `query GetEvolinciteUserTimeTracking($id: ID!) {
        getEvolinciteUserTimeTracking(id: $id) {
          __typename
          id
          time
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteUserTimeTrackingQuery>(
      response.data.getEvolinciteUserTimeTracking
    );
  }
  async ListEvolinciteUserTimeTrackings(
    filter?: ModelEvolinciteUserTimeTrackingFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteUserTimeTrackingsQuery> {
    const statement = `query ListEvolinciteUserTimeTrackings($filter: ModelEvolinciteUserTimeTrackingFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteUserTimeTrackings(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            time
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteUserTimeTrackingsQuery>(
      response.data.listEvolinciteUserTimeTrackings
    );
  }
  async EvolinciteUserTimeTrackingsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteUserTimeTrackingFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteUserTimeTrackingsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteUserTimeTrackingsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteUserTimeTrackingFilterInput, $limit: Int, $nextToken: String) {
        evolinciteUserTimeTrackingsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            time
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteUserTimeTrackingsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteUserTimeTrackingsByEvolinciteCompanyID
    );
  }
  async EvolinciteUserTimeTrackingsByEvolinciteUserIDAndCreatedAt(
    evolinciteUserID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteUserTimeTrackingFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteUserTimeTrackingsByEvolinciteUserIDAndCreatedAtQuery> {
    const statement = `query EvolinciteUserTimeTrackingsByEvolinciteUserIDAndCreatedAt($evolinciteUserID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteUserTimeTrackingFilterInput, $limit: Int, $nextToken: String) {
        evolinciteUserTimeTrackingsByEvolinciteUserIDAndCreatedAt(
          evolinciteUserID: $evolinciteUserID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            time
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteUserTimeTrackingsByEvolinciteUserIDAndCreatedAtQuery>(
      response.data.evolinciteUserTimeTrackingsByEvolinciteUserIDAndCreatedAt
    );
  }
  async GetEvolinciteSchedule(id: string): Promise<GetEvolinciteScheduleQuery> {
    const statement = `query GetEvolinciteSchedule($id: ID!) {
        getEvolinciteSchedule(id: $id) {
          __typename
          id
          name
          description
          config
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteScheduleQuery>response.data.getEvolinciteSchedule;
  }
  async ListEvolinciteSchedules(
    filter?: ModelEvolinciteScheduleFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteSchedulesQuery> {
    const statement = `query ListEvolinciteSchedules($filter: ModelEvolinciteScheduleFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteSchedules(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            description
            config
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteSchedulesQuery>response.data.listEvolinciteSchedules;
  }
  async EvolinciteSchedulesByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteScheduleFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteSchedulesByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteSchedulesByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteScheduleFilterInput, $limit: Int, $nextToken: String) {
        evolinciteSchedulesByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            description
            config
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteSchedulesByEvolinciteCompanyIDQuery>(
      response.data.evolinciteSchedulesByEvolinciteCompanyID
    );
  }
  async EvolinciteSchedulesByEvolinciteUserIDAndCreatedAt(
    evolinciteUserID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteScheduleFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteSchedulesByEvolinciteUserIDAndCreatedAtQuery> {
    const statement = `query EvolinciteSchedulesByEvolinciteUserIDAndCreatedAt($evolinciteUserID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteScheduleFilterInput, $limit: Int, $nextToken: String) {
        evolinciteSchedulesByEvolinciteUserIDAndCreatedAt(
          evolinciteUserID: $evolinciteUserID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            description
            config
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteSchedulesByEvolinciteUserIDAndCreatedAtQuery>(
      response.data.evolinciteSchedulesByEvolinciteUserIDAndCreatedAt
    );
  }
  async GetEvolinciteTemplateRequest(
    id: string
  ): Promise<GetEvolinciteTemplateRequestQuery> {
    const statement = `query GetEvolinciteTemplateRequest($id: ID!) {
        getEvolinciteTemplateRequest(id: $id) {
          __typename
          id
          name
          description
          tags
          questions
          elementType
          documents
          meta
          owners
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteTemplateRequestQuery>(
      response.data.getEvolinciteTemplateRequest
    );
  }
  async ListEvolinciteTemplateRequests(
    filter?: ModelEvolinciteTemplateRequestFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteTemplateRequestsQuery> {
    const statement = `query ListEvolinciteTemplateRequests($filter: ModelEvolinciteTemplateRequestFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteTemplateRequests(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            description
            tags
            questions
            elementType
            documents
            meta
            owners
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteTemplateRequestsQuery>(
      response.data.listEvolinciteTemplateRequests
    );
  }
  async EvolinciteTemplateRequestsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteTemplateRequestFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteTemplateRequestsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteTemplateRequestsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteTemplateRequestFilterInput, $limit: Int, $nextToken: String) {
        evolinciteTemplateRequestsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            description
            tags
            questions
            elementType
            documents
            meta
            owners
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteTemplateRequestsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteTemplateRequestsByEvolinciteCompanyID
    );
  }
  async EvolinciteTemplateRequestsByEvolinciteUserIDAndCreatedAt(
    evolinciteUserID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteTemplateRequestFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteTemplateRequestsByEvolinciteUserIDAndCreatedAtQuery> {
    const statement = `query EvolinciteTemplateRequestsByEvolinciteUserIDAndCreatedAt($evolinciteUserID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteTemplateRequestFilterInput, $limit: Int, $nextToken: String) {
        evolinciteTemplateRequestsByEvolinciteUserIDAndCreatedAt(
          evolinciteUserID: $evolinciteUserID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            name
            description
            tags
            questions
            elementType
            documents
            meta
            owners
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteTemplateRequestsByEvolinciteUserIDAndCreatedAtQuery>(
      response.data.evolinciteTemplateRequestsByEvolinciteUserIDAndCreatedAt
    );
  }
  async GetEvolinciteRequest(id: string): Promise<GetEvolinciteRequestQuery> {
    const statement = `query GetEvolinciteRequest($id: ID!) {
        getEvolinciteRequest(id: $id) {
          __typename
          id
          templateID
          answers
          requester
          priority
          elementID
          elementType
          status
          meta
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteRequestQuery>response.data.getEvolinciteRequest;
  }
  async ListEvolinciteRequests(
    filter?: ModelEvolinciteRequestFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteRequestsQuery> {
    const statement = `query ListEvolinciteRequests($filter: ModelEvolinciteRequestFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteRequests(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            templateID
            answers
            requester
            priority
            elementID
            elementType
            status
            meta
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteRequestsQuery>response.data.listEvolinciteRequests;
  }
  async EvolinciteRequestsByTemplateID(
    templateID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteRequestFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteRequestsByTemplateIDQuery> {
    const statement = `query EvolinciteRequestsByTemplateID($templateID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteRequestFilterInput, $limit: Int, $nextToken: String) {
        evolinciteRequestsByTemplateID(
          templateID: $templateID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            templateID
            answers
            requester
            priority
            elementID
            elementType
            status
            meta
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      templateID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteRequestsByTemplateIDQuery>(
      response.data.evolinciteRequestsByTemplateID
    );
  }
  async EvolinciteRequestsByRequester(
    requester: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteRequestFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteRequestsByRequesterQuery> {
    const statement = `query EvolinciteRequestsByRequester($requester: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteRequestFilterInput, $limit: Int, $nextToken: String) {
        evolinciteRequestsByRequester(
          requester: $requester
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            templateID
            answers
            requester
            priority
            elementID
            elementType
            status
            meta
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      requester,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteRequestsByRequesterQuery>(
      response.data.evolinciteRequestsByRequester
    );
  }
  async EvolinciteRequestsByEvolinciteCompanyID(
    evolinciteCompanyID: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteRequestFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteRequestsByEvolinciteCompanyIDQuery> {
    const statement = `query EvolinciteRequestsByEvolinciteCompanyID($evolinciteCompanyID: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteRequestFilterInput, $limit: Int, $nextToken: String) {
        evolinciteRequestsByEvolinciteCompanyID(
          evolinciteCompanyID: $evolinciteCompanyID
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            templateID
            answers
            requester
            priority
            elementID
            elementType
            status
            meta
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCompanyID,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteRequestsByEvolinciteCompanyIDQuery>(
      response.data.evolinciteRequestsByEvolinciteCompanyID
    );
  }
  async EvolinciteRequestsByEvolinciteUserIDAndCreatedAt(
    evolinciteUserID: string,
    createdAt?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteRequestFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteRequestsByEvolinciteUserIDAndCreatedAtQuery> {
    const statement = `query EvolinciteRequestsByEvolinciteUserIDAndCreatedAt($evolinciteUserID: ID!, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteRequestFilterInput, $limit: Int, $nextToken: String) {
        evolinciteRequestsByEvolinciteUserIDAndCreatedAt(
          evolinciteUserID: $evolinciteUserID
          createdAt: $createdAt
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            templateID
            answers
            requester
            priority
            elementID
            elementType
            status
            meta
            state
            evolinciteCompanyID
            evolinciteUserID
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserID,
    };
    if (createdAt) {
      gqlAPIServiceArguments.createdAt = createdAt;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteRequestsByEvolinciteUserIDAndCreatedAtQuery>(
      response.data.evolinciteRequestsByEvolinciteUserIDAndCreatedAt
    );
  }
  async GetEvolinciteActivityEvolinciteUser(
    id: string
  ): Promise<GetEvolinciteActivityEvolinciteUserQuery> {
    const statement = `query GetEvolinciteActivityEvolinciteUser($id: ID!) {
        getEvolinciteActivityEvolinciteUser(id: $id) {
          __typename
          id
          evolinciteActivityId
          evolinciteUserId
          evolinciteActivity {
            __typename
            id
            name
            description
            startDate
            endDate
            color
            type
            priority
            meta
            taskState
            documents
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteActivityEvolinciteUserQuery>(
      response.data.getEvolinciteActivityEvolinciteUser
    );
  }
  async ListEvolinciteActivityEvolinciteUsers(
    filter?: ModelEvolinciteActivityEvolinciteUserFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteActivityEvolinciteUsersQuery> {
    const statement = `query ListEvolinciteActivityEvolinciteUsers($filter: ModelEvolinciteActivityEvolinciteUserFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteActivityEvolinciteUsers(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            evolinciteActivityId
            evolinciteUserId
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteActivityEvolinciteUsersQuery>(
      response.data.listEvolinciteActivityEvolinciteUsers
    );
  }
  async EvolinciteActivityEvolinciteUsersByEvolinciteActivityId(
    evolinciteActivityId: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteActivityEvolinciteUserFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteActivityEvolinciteUsersByEvolinciteActivityIdQuery> {
    const statement = `query EvolinciteActivityEvolinciteUsersByEvolinciteActivityId($evolinciteActivityId: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteActivityEvolinciteUserFilterInput, $limit: Int, $nextToken: String) {
        evolinciteActivityEvolinciteUsersByEvolinciteActivityId(
          evolinciteActivityId: $evolinciteActivityId
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            evolinciteActivityId
            evolinciteUserId
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteActivityId,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteActivityEvolinciteUsersByEvolinciteActivityIdQuery>(
      response.data.evolinciteActivityEvolinciteUsersByEvolinciteActivityId
    );
  }
  async EvolinciteActivityEvolinciteUsersByEvolinciteUserId(
    evolinciteUserId: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteActivityEvolinciteUserFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteActivityEvolinciteUsersByEvolinciteUserIdQuery> {
    const statement = `query EvolinciteActivityEvolinciteUsersByEvolinciteUserId($evolinciteUserId: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteActivityEvolinciteUserFilterInput, $limit: Int, $nextToken: String) {
        evolinciteActivityEvolinciteUsersByEvolinciteUserId(
          evolinciteUserId: $evolinciteUserId
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            evolinciteActivityId
            evolinciteUserId
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserId,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteActivityEvolinciteUsersByEvolinciteUserIdQuery>(
      response.data.evolinciteActivityEvolinciteUsersByEvolinciteUserId
    );
  }
  async GetEvolinciteUserEvolinciteCrmNegotiation(
    id: string
  ): Promise<GetEvolinciteUserEvolinciteCrmNegotiationQuery> {
    const statement = `query GetEvolinciteUserEvolinciteCrmNegotiation($id: ID!) {
        getEvolinciteUserEvolinciteCrmNegotiation(id: $id) {
          __typename
          id
          evolinciteCrmNegotiationId
          evolinciteUserId
          evolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteUserEvolinciteCrmNegotiationQuery>(
      response.data.getEvolinciteUserEvolinciteCrmNegotiation
    );
  }
  async ListEvolinciteUserEvolinciteCrmNegotiations(
    filter?: ModelEvolinciteUserEvolinciteCrmNegotiationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteUserEvolinciteCrmNegotiationsQuery> {
    const statement = `query ListEvolinciteUserEvolinciteCrmNegotiations($filter: ModelEvolinciteUserEvolinciteCrmNegotiationFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteUserEvolinciteCrmNegotiations(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            evolinciteCrmNegotiationId
            evolinciteUserId
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteUserEvolinciteCrmNegotiationsQuery>(
      response.data.listEvolinciteUserEvolinciteCrmNegotiations
    );
  }
  async EvolinciteUserEvolinciteCrmNegotiationsByEvolinciteCrmNegotiationId(
    evolinciteCrmNegotiationId: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteUserEvolinciteCrmNegotiationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteUserEvolinciteCrmNegotiationsByEvolinciteCrmNegotiationIdQuery> {
    const statement = `query EvolinciteUserEvolinciteCrmNegotiationsByEvolinciteCrmNegotiationId($evolinciteCrmNegotiationId: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteUserEvolinciteCrmNegotiationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteUserEvolinciteCrmNegotiationsByEvolinciteCrmNegotiationId(
          evolinciteCrmNegotiationId: $evolinciteCrmNegotiationId
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            evolinciteCrmNegotiationId
            evolinciteUserId
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteCrmNegotiationId,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <
      EvolinciteUserEvolinciteCrmNegotiationsByEvolinciteCrmNegotiationIdQuery
    >response.data
      .evolinciteUserEvolinciteCrmNegotiationsByEvolinciteCrmNegotiationId;
  }
  async EvolinciteUserEvolinciteCrmNegotiationsByEvolinciteUserId(
    evolinciteUserId: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteUserEvolinciteCrmNegotiationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteUserEvolinciteCrmNegotiationsByEvolinciteUserIdQuery> {
    const statement = `query EvolinciteUserEvolinciteCrmNegotiationsByEvolinciteUserId($evolinciteUserId: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteUserEvolinciteCrmNegotiationFilterInput, $limit: Int, $nextToken: String) {
        evolinciteUserEvolinciteCrmNegotiationsByEvolinciteUserId(
          evolinciteUserId: $evolinciteUserId
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            evolinciteCrmNegotiationId
            evolinciteUserId
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserId,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteUserEvolinciteCrmNegotiationsByEvolinciteUserIdQuery>(
      response.data.evolinciteUserEvolinciteCrmNegotiationsByEvolinciteUserId
    );
  }
  async GetEvolinciteRoomEvolinciteUser(
    id: string
  ): Promise<GetEvolinciteRoomEvolinciteUserQuery> {
    const statement = `query GetEvolinciteRoomEvolinciteUser($id: ID!) {
        getEvolinciteRoomEvolinciteUser(id: $id) {
          __typename
          id
          evolinciteRoomId
          evolinciteUserId
          evolinciteRoom {
            __typename
            id
            Key
            name
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
    };
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <GetEvolinciteRoomEvolinciteUserQuery>(
      response.data.getEvolinciteRoomEvolinciteUser
    );
  }
  async ListEvolinciteRoomEvolinciteUsers(
    filter?: ModelEvolinciteRoomEvolinciteUserFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEvolinciteRoomEvolinciteUsersQuery> {
    const statement = `query ListEvolinciteRoomEvolinciteUsers($filter: ModelEvolinciteRoomEvolinciteUserFilterInput, $limit: Int, $nextToken: String) {
        listEvolinciteRoomEvolinciteUsers(
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            evolinciteRoomId
            evolinciteUserId
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <ListEvolinciteRoomEvolinciteUsersQuery>(
      response.data.listEvolinciteRoomEvolinciteUsers
    );
  }
  async EvolinciteRoomEvolinciteUsersByEvolinciteRoomId(
    evolinciteRoomId: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteRoomEvolinciteUserFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteRoomEvolinciteUsersByEvolinciteRoomIdQuery> {
    const statement = `query EvolinciteRoomEvolinciteUsersByEvolinciteRoomId($evolinciteRoomId: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteRoomEvolinciteUserFilterInput, $limit: Int, $nextToken: String) {
        evolinciteRoomEvolinciteUsersByEvolinciteRoomId(
          evolinciteRoomId: $evolinciteRoomId
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            evolinciteRoomId
            evolinciteUserId
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteRoomId,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteRoomEvolinciteUsersByEvolinciteRoomIdQuery>(
      response.data.evolinciteRoomEvolinciteUsersByEvolinciteRoomId
    );
  }
  async EvolinciteRoomEvolinciteUsersByEvolinciteUserId(
    evolinciteUserId: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEvolinciteRoomEvolinciteUserFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<EvolinciteRoomEvolinciteUsersByEvolinciteUserIdQuery> {
    const statement = `query EvolinciteRoomEvolinciteUsersByEvolinciteUserId($evolinciteUserId: ID!, $sortDirection: ModelSortDirection, $filter: ModelEvolinciteRoomEvolinciteUserFilterInput, $limit: Int, $nextToken: String) {
        evolinciteRoomEvolinciteUsersByEvolinciteUserId(
          evolinciteUserId: $evolinciteUserId
          sortDirection: $sortDirection
          filter: $filter
          limit: $limit
          nextToken: $nextToken
        ) {
          __typename
          items {
            __typename
            id
            evolinciteRoomId
            evolinciteUserId
            createdAt
            updatedAt
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {
      evolinciteUserId,
    };
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    })) as any;
    return <EvolinciteRoomEvolinciteUsersByEvolinciteUserIdQuery>(
      response.data.evolinciteRoomEvolinciteUsersByEvolinciteUserId
    );
  }
  OnCreateEvolinciteCompetenceListener(
    filter?: ModelSubscriptionEvolinciteCompetenceFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteCompetence'>>
  > {
    const statement = `subscription OnCreateEvolinciteCompetence($filter: ModelSubscriptionEvolinciteCompetenceFilterInput) {
        onCreateEvolinciteCompetence(filter: $filter) {
          __typename
          id
          name
          description
          content
          application
          state
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteCompetenceEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteCompetenceListener(
    filter?: ModelSubscriptionEvolinciteCompetenceFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteCompetence'>>
  > {
    const statement = `subscription OnUpdateEvolinciteCompetence($filter: ModelSubscriptionEvolinciteCompetenceFilterInput) {
        onUpdateEvolinciteCompetence(filter: $filter) {
          __typename
          id
          name
          description
          content
          application
          state
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteCompetenceEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteCompetenceListener(
    filter?: ModelSubscriptionEvolinciteCompetenceFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteCompetence'>>
  > {
    const statement = `subscription OnDeleteEvolinciteCompetence($filter: ModelSubscriptionEvolinciteCompetenceFilterInput) {
        onDeleteEvolinciteCompetence(filter: $filter) {
          __typename
          id
          name
          description
          content
          application
          state
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteCompetenceEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteCourseListener(
    filter?: ModelSubscriptionEvolinciteCourseFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteCourse'>>
  > {
    const statement = `subscription OnCreateEvolinciteCourse($filter: ModelSubscriptionEvolinciteCourseFilterInput) {
        onCreateEvolinciteCourse(filter: $filter) {
          __typename
          id
          name
          description
          durationUnit
          duration
          objectives
          application
          state
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteCourseEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteCourseListener(
    filter?: ModelSubscriptionEvolinciteCourseFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteCourse'>>
  > {
    const statement = `subscription OnUpdateEvolinciteCourse($filter: ModelSubscriptionEvolinciteCourseFilterInput) {
        onUpdateEvolinciteCourse(filter: $filter) {
          __typename
          id
          name
          description
          durationUnit
          duration
          objectives
          application
          state
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteCourseEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteCourseListener(
    filter?: ModelSubscriptionEvolinciteCourseFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteCourse'>>
  > {
    const statement = `subscription OnDeleteEvolinciteCourse($filter: ModelSubscriptionEvolinciteCourseFilterInput) {
        onDeleteEvolinciteCourse(filter: $filter) {
          __typename
          id
          name
          description
          durationUnit
          duration
          objectives
          application
          state
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteCourseEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteSyllabusListener(
    filter?: ModelSubscriptionEvolinciteSyllabusFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteSyllabus'>>
  > {
    const statement = `subscription OnCreateEvolinciteSyllabus($filter: ModelSubscriptionEvolinciteSyllabusFilterInput) {
        onCreateEvolinciteSyllabus(filter: $filter) {
          __typename
          id
          name
          description
          content
          application
          state
          EvolinciteCompetence {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteCompetenceEvolinciteSyllabusId
          }
          createdAt
          updatedAt
          evolinciteSyllabusEvolinciteCompetenceId
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteSyllabusListener(
    filter?: ModelSubscriptionEvolinciteSyllabusFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteSyllabus'>>
  > {
    const statement = `subscription OnUpdateEvolinciteSyllabus($filter: ModelSubscriptionEvolinciteSyllabusFilterInput) {
        onUpdateEvolinciteSyllabus(filter: $filter) {
          __typename
          id
          name
          description
          content
          application
          state
          EvolinciteCompetence {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteCompetenceEvolinciteSyllabusId
          }
          createdAt
          updatedAt
          evolinciteSyllabusEvolinciteCompetenceId
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteSyllabusListener(
    filter?: ModelSubscriptionEvolinciteSyllabusFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteSyllabus'>>
  > {
    const statement = `subscription OnDeleteEvolinciteSyllabus($filter: ModelSubscriptionEvolinciteSyllabusFilterInput) {
        onDeleteEvolinciteSyllabus(filter: $filter) {
          __typename
          id
          name
          description
          content
          application
          state
          EvolinciteCompetence {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteCompetenceEvolinciteSyllabusId
          }
          createdAt
          updatedAt
          evolinciteSyllabusEvolinciteCompetenceId
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteUserAnswersListener(
    filter?: ModelSubscriptionEvolinciteUserAnswersFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteUserAnswers'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteUserAnswers($filter: ModelSubscriptionEvolinciteUserAnswersFilterInput) {
        onCreateEvolinciteUserAnswers(filter: $filter) {
          __typename
          id
          answers
          application
          state
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteUserAnswersEvolinciteUserId
          evolinciteUserAnswersEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteUserAnswersListener(
    filter?: ModelSubscriptionEvolinciteUserAnswersFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteUserAnswers'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteUserAnswers($filter: ModelSubscriptionEvolinciteUserAnswersFilterInput) {
        onUpdateEvolinciteUserAnswers(filter: $filter) {
          __typename
          id
          answers
          application
          state
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteUserAnswersEvolinciteUserId
          evolinciteUserAnswersEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteUserAnswersListener(
    filter?: ModelSubscriptionEvolinciteUserAnswersFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteUserAnswers'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteUserAnswers($filter: ModelSubscriptionEvolinciteUserAnswersFilterInput) {
        onDeleteEvolinciteUserAnswers(filter: $filter) {
          __typename
          id
          answers
          application
          state
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteSyllabus {
            __typename
            id
            name
            description
            content
            application
            state
            createdAt
            updatedAt
            evolinciteSyllabusEvolinciteCompetenceId
          }
          createdAt
          updatedAt
          evolinciteUserAnswersEvolinciteUserId
          evolinciteUserAnswersEvolinciteSyllabusId
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteProcessTypeListener(
    filter?: ModelSubscriptionEvolinciteProcessTypeFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteProcessType'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteProcessType($filter: ModelSubscriptionEvolinciteProcessTypeFilterInput) {
        onCreateEvolinciteProcessType(filter: $filter) {
          __typename
          id
          name
          order
          sellerCommission
          referrerCommission
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteProcessTypeListener(
    filter?: ModelSubscriptionEvolinciteProcessTypeFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteProcessType'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteProcessType($filter: ModelSubscriptionEvolinciteProcessTypeFilterInput) {
        onUpdateEvolinciteProcessType(filter: $filter) {
          __typename
          id
          name
          order
          sellerCommission
          referrerCommission
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteProcessTypeListener(
    filter?: ModelSubscriptionEvolinciteProcessTypeFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteProcessType'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteProcessType($filter: ModelSubscriptionEvolinciteProcessTypeFilterInput) {
        onDeleteEvolinciteProcessType(filter: $filter) {
          __typename
          id
          name
          order
          sellerCommission
          referrerCommission
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteExpenseTypeListener(
    filter?: ModelSubscriptionEvolinciteExpenseTypeFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteExpenseType'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteExpenseType($filter: ModelSubscriptionEvolinciteExpenseTypeFilterInput) {
        onCreateEvolinciteExpenseType(filter: $filter) {
          __typename
          id
          name
          type
          setting
          state
          EvolinciteExpenses {
            __typename
            nextToken
          }
          evolinciteCompanyID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteExpenseTypeListener(
    filter?: ModelSubscriptionEvolinciteExpenseTypeFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteExpenseType'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteExpenseType($filter: ModelSubscriptionEvolinciteExpenseTypeFilterInput) {
        onUpdateEvolinciteExpenseType(filter: $filter) {
          __typename
          id
          name
          type
          setting
          state
          EvolinciteExpenses {
            __typename
            nextToken
          }
          evolinciteCompanyID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteExpenseTypeListener(
    filter?: ModelSubscriptionEvolinciteExpenseTypeFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteExpenseType'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteExpenseType($filter: ModelSubscriptionEvolinciteExpenseTypeFilterInput) {
        onDeleteEvolinciteExpenseType(filter: $filter) {
          __typename
          id
          name
          type
          setting
          state
          EvolinciteExpenses {
            __typename
            nextToken
          }
          evolinciteCompanyID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteExpenseListener(
    filter?: ModelSubscriptionEvolinciteExpenseFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteExpense'>>
  > {
    const statement = `subscription OnCreateEvolinciteExpense($filter: ModelSubscriptionEvolinciteExpenseFilterInput) {
        onCreateEvolinciteExpense(filter: $filter) {
          __typename
          id
          amount
          process
          expenseState
          expenseDate
          observations
          voucher
          transactionType
          reference
          state
          evolinciteExpenseTypeID
          EvolinciteExpenseType {
            __typename
            id
            name
            type
            setting
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserResponsibleID
          EvolinciteUserResponsible {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteExpenseListener(
    filter?: ModelSubscriptionEvolinciteExpenseFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteExpense'>>
  > {
    const statement = `subscription OnUpdateEvolinciteExpense($filter: ModelSubscriptionEvolinciteExpenseFilterInput) {
        onUpdateEvolinciteExpense(filter: $filter) {
          __typename
          id
          amount
          process
          expenseState
          expenseDate
          observations
          voucher
          transactionType
          reference
          state
          evolinciteExpenseTypeID
          EvolinciteExpenseType {
            __typename
            id
            name
            type
            setting
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserResponsibleID
          EvolinciteUserResponsible {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteExpenseListener(
    filter?: ModelSubscriptionEvolinciteExpenseFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteExpense'>>
  > {
    const statement = `subscription OnDeleteEvolinciteExpense($filter: ModelSubscriptionEvolinciteExpenseFilterInput) {
        onDeleteEvolinciteExpense(filter: $filter) {
          __typename
          id
          amount
          process
          expenseState
          expenseDate
          observations
          voucher
          transactionType
          reference
          state
          evolinciteExpenseTypeID
          EvolinciteExpenseType {
            __typename
            id
            name
            type
            setting
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserResponsibleID
          EvolinciteUserResponsible {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteUserEvolinciteJobTitleListener(
    filter?: ModelSubscriptionEvolinciteUserEvolinciteJobTitleFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteUserEvolinciteJobTitle'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteUserEvolinciteJobTitle($filter: ModelSubscriptionEvolinciteUserEvolinciteJobTitleFilterInput) {
        onCreateEvolinciteUserEvolinciteJobTitle(filter: $filter) {
          __typename
          id
          state
          evolinciteJobTitleID
          EvolinciteJobTitle {
            __typename
            id
            name
            salary
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteUserEvolinciteJobTitleListener(
    filter?: ModelSubscriptionEvolinciteUserEvolinciteJobTitleFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteUserEvolinciteJobTitle'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteUserEvolinciteJobTitle($filter: ModelSubscriptionEvolinciteUserEvolinciteJobTitleFilterInput) {
        onUpdateEvolinciteUserEvolinciteJobTitle(filter: $filter) {
          __typename
          id
          state
          evolinciteJobTitleID
          EvolinciteJobTitle {
            __typename
            id
            name
            salary
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteUserEvolinciteJobTitleListener(
    filter?: ModelSubscriptionEvolinciteUserEvolinciteJobTitleFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteUserEvolinciteJobTitle'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteUserEvolinciteJobTitle($filter: ModelSubscriptionEvolinciteUserEvolinciteJobTitleFilterInput) {
        onDeleteEvolinciteUserEvolinciteJobTitle(filter: $filter) {
          __typename
          id
          state
          evolinciteJobTitleID
          EvolinciteJobTitle {
            __typename
            id
            name
            salary
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteJobTitleListener(
    filter?: ModelSubscriptionEvolinciteJobTitleFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteJobTitle'>>
  > {
    const statement = `subscription OnCreateEvolinciteJobTitle($filter: ModelSubscriptionEvolinciteJobTitleFilterInput) {
        onCreateEvolinciteJobTitle(filter: $filter) {
          __typename
          id
          name
          salary
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteJobTitleListener(
    filter?: ModelSubscriptionEvolinciteJobTitleFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteJobTitle'>>
  > {
    const statement = `subscription OnUpdateEvolinciteJobTitle($filter: ModelSubscriptionEvolinciteJobTitleFilterInput) {
        onUpdateEvolinciteJobTitle(filter: $filter) {
          __typename
          id
          name
          salary
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteJobTitleListener(
    filter?: ModelSubscriptionEvolinciteJobTitleFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteJobTitle'>>
  > {
    const statement = `subscription OnDeleteEvolinciteJobTitle($filter: ModelSubscriptionEvolinciteJobTitleFilterInput) {
        onDeleteEvolinciteJobTitle(filter: $filter) {
          __typename
          id
          name
          salary
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteWalletPaymentListener(
    filter?: ModelSubscriptionEvolinciteWalletPaymentFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteWalletPayment'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteWalletPayment($filter: ModelSubscriptionEvolinciteWalletPaymentFilterInput) {
        onCreateEvolinciteWalletPayment(filter: $filter) {
          __typename
          id
          amount
          scheduledDate
          datePayment
          paymentStatus
          prePayment
          postPayment
          observations
          voucher
          transactionType
          reference
          amountInterest
          amountCollection
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserReferrerID
          EvolinciteUserReferrer {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserSellerID
          EvolinciteUserSeller {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteCustomerID
          EvolinciteCustomer {
            __typename
            id
            name
            lastName
            documentType
            documentNumber
            phone
            optionalPhone
            email
            picture
            birthDate
            municipality
            documents
            address
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          evolinciteUserResponsibleID
          EvolinciteUserResponsible {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteWalletPaymentListener(
    filter?: ModelSubscriptionEvolinciteWalletPaymentFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteWalletPayment'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteWalletPayment($filter: ModelSubscriptionEvolinciteWalletPaymentFilterInput) {
        onUpdateEvolinciteWalletPayment(filter: $filter) {
          __typename
          id
          amount
          scheduledDate
          datePayment
          paymentStatus
          prePayment
          postPayment
          observations
          voucher
          transactionType
          reference
          amountInterest
          amountCollection
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserReferrerID
          EvolinciteUserReferrer {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserSellerID
          EvolinciteUserSeller {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteCustomerID
          EvolinciteCustomer {
            __typename
            id
            name
            lastName
            documentType
            documentNumber
            phone
            optionalPhone
            email
            picture
            birthDate
            municipality
            documents
            address
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          evolinciteUserResponsibleID
          EvolinciteUserResponsible {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteWalletPaymentListener(
    filter?: ModelSubscriptionEvolinciteWalletPaymentFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteWalletPayment'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteWalletPayment($filter: ModelSubscriptionEvolinciteWalletPaymentFilterInput) {
        onDeleteEvolinciteWalletPayment(filter: $filter) {
          __typename
          id
          amount
          scheduledDate
          datePayment
          paymentStatus
          prePayment
          postPayment
          observations
          voucher
          transactionType
          reference
          amountInterest
          amountCollection
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserReferrerID
          EvolinciteUserReferrer {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserSellerID
          EvolinciteUserSeller {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteCustomerID
          EvolinciteCustomer {
            __typename
            id
            name
            lastName
            documentType
            documentNumber
            phone
            optionalPhone
            email
            picture
            birthDate
            municipality
            documents
            address
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          evolinciteUserResponsibleID
          EvolinciteUserResponsible {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteCrmNegotiationFieldListener(
    filter?: ModelSubscriptionEvolinciteCrmNegotiationFieldFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteCrmNegotiationField'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteCrmNegotiationField($filter: ModelSubscriptionEvolinciteCrmNegotiationFieldFilterInput) {
        onCreateEvolinciteCrmNegotiationField(filter: $filter) {
          __typename
          id
          field
          type
          required
          order
          state
          meta
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFieldValues {
            __typename
            nextToken
          }
          evolinciteCrmNegotiationSectionID
          EvolinciteCrmNegotiationSection {
            __typename
            id
            name
            order
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteCrmNegotiationFieldListener(
    filter?: ModelSubscriptionEvolinciteCrmNegotiationFieldFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteCrmNegotiationField'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteCrmNegotiationField($filter: ModelSubscriptionEvolinciteCrmNegotiationFieldFilterInput) {
        onUpdateEvolinciteCrmNegotiationField(filter: $filter) {
          __typename
          id
          field
          type
          required
          order
          state
          meta
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFieldValues {
            __typename
            nextToken
          }
          evolinciteCrmNegotiationSectionID
          EvolinciteCrmNegotiationSection {
            __typename
            id
            name
            order
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteCrmNegotiationFieldListener(
    filter?: ModelSubscriptionEvolinciteCrmNegotiationFieldFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteCrmNegotiationField'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteCrmNegotiationField($filter: ModelSubscriptionEvolinciteCrmNegotiationFieldFilterInput) {
        onDeleteEvolinciteCrmNegotiationField(filter: $filter) {
          __typename
          id
          field
          type
          required
          order
          state
          meta
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFieldValues {
            __typename
            nextToken
          }
          evolinciteCrmNegotiationSectionID
          EvolinciteCrmNegotiationSection {
            __typename
            id
            name
            order
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteCrmNegotiationSectionListener(
    filter?: ModelSubscriptionEvolinciteCrmNegotiationSectionFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteCrmNegotiationSection'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteCrmNegotiationSection($filter: ModelSubscriptionEvolinciteCrmNegotiationSectionFilterInput) {
        onCreateEvolinciteCrmNegotiationSection(filter: $filter) {
          __typename
          id
          name
          order
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFields {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteCrmNegotiationSectionListener(
    filter?: ModelSubscriptionEvolinciteCrmNegotiationSectionFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteCrmNegotiationSection'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteCrmNegotiationSection($filter: ModelSubscriptionEvolinciteCrmNegotiationSectionFilterInput) {
        onUpdateEvolinciteCrmNegotiationSection(filter: $filter) {
          __typename
          id
          name
          order
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFields {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteCrmNegotiationSectionListener(
    filter?: ModelSubscriptionEvolinciteCrmNegotiationSectionFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteCrmNegotiationSection'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteCrmNegotiationSection($filter: ModelSubscriptionEvolinciteCrmNegotiationSectionFilterInput) {
        onDeleteEvolinciteCrmNegotiationSection(filter: $filter) {
          __typename
          id
          name
          order
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFields {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteCrmAutomationListener(
    filter?: ModelSubscriptionEvolinciteCrmAutomationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteCrmAutomation'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteCrmAutomation($filter: ModelSubscriptionEvolinciteCrmAutomationFilterInput) {
        onCreateEvolinciteCrmAutomation(filter: $filter) {
          __typename
          id
          name
          rule
          setting
          order
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteCrmStateID
          EvolinciteCrmState {
            __typename
            id
            name
            description
            publicDescription
            color
            order
            state
            evolinciteCompanyID
            evolinciteCrmPipelineID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteCrmAutomationListener(
    filter?: ModelSubscriptionEvolinciteCrmAutomationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteCrmAutomation'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteCrmAutomation($filter: ModelSubscriptionEvolinciteCrmAutomationFilterInput) {
        onUpdateEvolinciteCrmAutomation(filter: $filter) {
          __typename
          id
          name
          rule
          setting
          order
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteCrmStateID
          EvolinciteCrmState {
            __typename
            id
            name
            description
            publicDescription
            color
            order
            state
            evolinciteCompanyID
            evolinciteCrmPipelineID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteCrmAutomationListener(
    filter?: ModelSubscriptionEvolinciteCrmAutomationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteCrmAutomation'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteCrmAutomation($filter: ModelSubscriptionEvolinciteCrmAutomationFilterInput) {
        onDeleteEvolinciteCrmAutomation(filter: $filter) {
          __typename
          id
          name
          rule
          setting
          order
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteCrmStateID
          EvolinciteCrmState {
            __typename
            id
            name
            description
            publicDescription
            color
            order
            state
            evolinciteCompanyID
            evolinciteCrmPipelineID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteCommentListener(
    filter?: ModelSubscriptionEvolinciteCommentFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteComment'>>
  > {
    const statement = `subscription OnCreateEvolinciteComment($filter: ModelSubscriptionEvolinciteCommentFilterInput) {
        onCreateEvolinciteComment(filter: $filter) {
          __typename
          id
          files
          content
          pinned
          state
          evolinciteUserID
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteCommentListener(
    filter?: ModelSubscriptionEvolinciteCommentFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteComment'>>
  > {
    const statement = `subscription OnUpdateEvolinciteComment($filter: ModelSubscriptionEvolinciteCommentFilterInput) {
        onUpdateEvolinciteComment(filter: $filter) {
          __typename
          id
          files
          content
          pinned
          state
          evolinciteUserID
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteCommentListener(
    filter?: ModelSubscriptionEvolinciteCommentFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteComment'>>
  > {
    const statement = `subscription OnDeleteEvolinciteComment($filter: ModelSubscriptionEvolinciteCommentFilterInput) {
        onDeleteEvolinciteComment(filter: $filter) {
          __typename
          id
          files
          content
          pinned
          state
          evolinciteUserID
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteActivityListener(
    filter?: ModelSubscriptionEvolinciteActivityFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteActivity'>>
  > {
    const statement = `subscription OnCreateEvolinciteActivity($filter: ModelSubscriptionEvolinciteActivityFilterInput) {
        onCreateEvolinciteActivity(filter: $filter) {
          __typename
          id
          name
          description
          startDate
          endDate
          color
          type
          priority
          meta
          taskState
          documents
          state
          evolinciteUserID
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          Participants {
            __typename
            nextToken
          }
          evolinciteCompanyID
          evolinciteCrmNegotiationID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteActivityListener(
    filter?: ModelSubscriptionEvolinciteActivityFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteActivity'>>
  > {
    const statement = `subscription OnUpdateEvolinciteActivity($filter: ModelSubscriptionEvolinciteActivityFilterInput) {
        onUpdateEvolinciteActivity(filter: $filter) {
          __typename
          id
          name
          description
          startDate
          endDate
          color
          type
          priority
          meta
          taskState
          documents
          state
          evolinciteUserID
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          Participants {
            __typename
            nextToken
          }
          evolinciteCompanyID
          evolinciteCrmNegotiationID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteActivityListener(
    filter?: ModelSubscriptionEvolinciteActivityFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteActivity'>>
  > {
    const statement = `subscription OnDeleteEvolinciteActivity($filter: ModelSubscriptionEvolinciteActivityFilterInput) {
        onDeleteEvolinciteActivity(filter: $filter) {
          __typename
          id
          name
          description
          startDate
          endDate
          color
          type
          priority
          meta
          taskState
          documents
          state
          evolinciteUserID
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          Participants {
            __typename
            nextToken
          }
          evolinciteCompanyID
          evolinciteCrmNegotiationID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolincitePermissionsListener(
    filter?: ModelSubscriptionEvolincitePermissionsFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolincitePermissions'>
    >
  > {
    const statement = `subscription OnCreateEvolincitePermissions($filter: ModelSubscriptionEvolincitePermissionsFilterInput) {
        onCreateEvolincitePermissions(filter: $filter) {
          __typename
          id
          state
          evolinciteCompanyID
          evolinciteUserID
          evolinciteDepartmentID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteDepartment {
            __typename
            id
            name
            parent
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteRolID
          EvolinciteRol {
            __typename
            id
            name
            permissions
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolincitePermissionsListener(
    filter?: ModelSubscriptionEvolincitePermissionsFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolincitePermissions'>
    >
  > {
    const statement = `subscription OnUpdateEvolincitePermissions($filter: ModelSubscriptionEvolincitePermissionsFilterInput) {
        onUpdateEvolincitePermissions(filter: $filter) {
          __typename
          id
          state
          evolinciteCompanyID
          evolinciteUserID
          evolinciteDepartmentID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteDepartment {
            __typename
            id
            name
            parent
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteRolID
          EvolinciteRol {
            __typename
            id
            name
            permissions
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolincitePermissionsListener(
    filter?: ModelSubscriptionEvolincitePermissionsFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolincitePermissions'>
    >
  > {
    const statement = `subscription OnDeleteEvolincitePermissions($filter: ModelSubscriptionEvolincitePermissionsFilterInput) {
        onDeleteEvolincitePermissions(filter: $filter) {
          __typename
          id
          state
          evolinciteCompanyID
          evolinciteUserID
          evolinciteDepartmentID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteDepartment {
            __typename
            id
            name
            parent
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteRolID
          EvolinciteRol {
            __typename
            id
            name
            permissions
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteDepartmentListener(
    filter?: ModelSubscriptionEvolinciteDepartmentFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteDepartment'>>
  > {
    const statement = `subscription OnCreateEvolinciteDepartment($filter: ModelSubscriptionEvolinciteDepartmentFilterInput) {
        onCreateEvolinciteDepartment(filter: $filter) {
          __typename
          id
          name
          parent
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteDepartmentListener(
    filter?: ModelSubscriptionEvolinciteDepartmentFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteDepartment'>>
  > {
    const statement = `subscription OnUpdateEvolinciteDepartment($filter: ModelSubscriptionEvolinciteDepartmentFilterInput) {
        onUpdateEvolinciteDepartment(filter: $filter) {
          __typename
          id
          name
          parent
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteDepartmentListener(
    filter?: ModelSubscriptionEvolinciteDepartmentFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteDepartment'>>
  > {
    const statement = `subscription OnDeleteEvolinciteDepartment($filter: ModelSubscriptionEvolinciteDepartmentFilterInput) {
        onDeleteEvolinciteDepartment(filter: $filter) {
          __typename
          id
          name
          parent
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteSubscriptionListener(
    filter?: ModelSubscriptionEvolinciteSubscriptionFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteSubscription'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteSubscription($filter: ModelSubscriptionEvolinciteSubscriptionFilterInput) {
        onCreateEvolinciteSubscription(filter: $filter) {
          __typename
          id
          name
          price
          dateInitial
          dateFinal
          state
          EvolinciteCompanies {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteSubscriptionListener(
    filter?: ModelSubscriptionEvolinciteSubscriptionFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteSubscription'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteSubscription($filter: ModelSubscriptionEvolinciteSubscriptionFilterInput) {
        onUpdateEvolinciteSubscription(filter: $filter) {
          __typename
          id
          name
          price
          dateInitial
          dateFinal
          state
          EvolinciteCompanies {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteSubscriptionListener(
    filter?: ModelSubscriptionEvolinciteSubscriptionFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteSubscription'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteSubscription($filter: ModelSubscriptionEvolinciteSubscriptionFilterInput) {
        onDeleteEvolinciteSubscription(filter: $filter) {
          __typename
          id
          name
          price
          dateInitial
          dateFinal
          state
          EvolinciteCompanies {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteModuleListener(
    filter?: ModelSubscriptionEvolinciteModuleFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteModule'>>
  > {
    const statement = `subscription OnCreateEvolinciteModule($filter: ModelSubscriptionEvolinciteModuleFilterInput) {
        onCreateEvolinciteModule(filter: $filter) {
          __typename
          id
          name
          state
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteModuleListener(
    filter?: ModelSubscriptionEvolinciteModuleFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteModule'>>
  > {
    const statement = `subscription OnUpdateEvolinciteModule($filter: ModelSubscriptionEvolinciteModuleFilterInput) {
        onUpdateEvolinciteModule(filter: $filter) {
          __typename
          id
          name
          state
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteModuleListener(
    filter?: ModelSubscriptionEvolinciteModuleFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteModule'>>
  > {
    const statement = `subscription OnDeleteEvolinciteModule($filter: ModelSubscriptionEvolinciteModuleFilterInput) {
        onDeleteEvolinciteModule(filter: $filter) {
          __typename
          id
          name
          state
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteFunctionalityListener(
    filter?: ModelSubscriptionEvolinciteFunctionalityFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteFunctionality'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteFunctionality($filter: ModelSubscriptionEvolinciteFunctionalityFilterInput) {
        onCreateEvolinciteFunctionality(filter: $filter) {
          __typename
          id
          name
          functionalities
          state
          evolincitePackageID
          EvolincitePackage {
            __typename
            id
            name
            description
            goal
            duration
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteFunctionalityListener(
    filter?: ModelSubscriptionEvolinciteFunctionalityFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteFunctionality'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteFunctionality($filter: ModelSubscriptionEvolinciteFunctionalityFilterInput) {
        onUpdateEvolinciteFunctionality(filter: $filter) {
          __typename
          id
          name
          functionalities
          state
          evolincitePackageID
          EvolincitePackage {
            __typename
            id
            name
            description
            goal
            duration
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteFunctionalityListener(
    filter?: ModelSubscriptionEvolinciteFunctionalityFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteFunctionality'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteFunctionality($filter: ModelSubscriptionEvolinciteFunctionalityFilterInput) {
        onDeleteEvolinciteFunctionality(filter: $filter) {
          __typename
          id
          name
          functionalities
          state
          evolincitePackageID
          EvolincitePackage {
            __typename
            id
            name
            description
            goal
            duration
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteRolListener(
    filter?: ModelSubscriptionEvolinciteRolFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteRol'>>
  > {
    const statement = `subscription OnCreateEvolinciteRol($filter: ModelSubscriptionEvolinciteRolFilterInput) {
        onCreateEvolinciteRol(filter: $filter) {
          __typename
          id
          name
          permissions
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteRolListener(
    filter?: ModelSubscriptionEvolinciteRolFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteRol'>>
  > {
    const statement = `subscription OnUpdateEvolinciteRol($filter: ModelSubscriptionEvolinciteRolFilterInput) {
        onUpdateEvolinciteRol(filter: $filter) {
          __typename
          id
          name
          permissions
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteRolListener(
    filter?: ModelSubscriptionEvolinciteRolFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteRol'>>
  > {
    const statement = `subscription OnDeleteEvolinciteRol($filter: ModelSubscriptionEvolinciteRolFilterInput) {
        onDeleteEvolinciteRol(filter: $filter) {
          __typename
          id
          name
          permissions
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteCustomerListener(
    filter?: ModelSubscriptionEvolinciteCustomerFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteCustomer'>>
  > {
    const statement = `subscription OnCreateEvolinciteCustomer($filter: ModelSubscriptionEvolinciteCustomerFilterInput) {
        onCreateEvolinciteCustomer(filter: $filter) {
          __typename
          id
          name
          lastName
          documentType
          documentNumber
          phone
          optionalPhone
          email
          picture
          birthDate
          municipality
          documents
          address
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteCustomerListener(
    filter?: ModelSubscriptionEvolinciteCustomerFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteCustomer'>>
  > {
    const statement = `subscription OnUpdateEvolinciteCustomer($filter: ModelSubscriptionEvolinciteCustomerFilterInput) {
        onUpdateEvolinciteCustomer(filter: $filter) {
          __typename
          id
          name
          lastName
          documentType
          documentNumber
          phone
          optionalPhone
          email
          picture
          birthDate
          municipality
          documents
          address
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteCustomerListener(
    filter?: ModelSubscriptionEvolinciteCustomerFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteCustomer'>>
  > {
    const statement = `subscription OnDeleteEvolinciteCustomer($filter: ModelSubscriptionEvolinciteCustomerFilterInput) {
        onDeleteEvolinciteCustomer(filter: $filter) {
          __typename
          id
          name
          lastName
          documentType
          documentNumber
          phone
          optionalPhone
          email
          picture
          birthDate
          municipality
          documents
          address
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteUserSettingsListener(
    filter?: ModelSubscriptionEvolinciteUserSettingsFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteUserSettings'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteUserSettings($filter: ModelSubscriptionEvolinciteUserSettingsFilterInput) {
        onCreateEvolinciteUserSettings(filter: $filter) {
          __typename
          id
          settings
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteUserSettingsListener(
    filter?: ModelSubscriptionEvolinciteUserSettingsFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteUserSettings'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteUserSettings($filter: ModelSubscriptionEvolinciteUserSettingsFilterInput) {
        onUpdateEvolinciteUserSettings(filter: $filter) {
          __typename
          id
          settings
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteUserSettingsListener(
    filter?: ModelSubscriptionEvolinciteUserSettingsFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteUserSettings'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteUserSettings($filter: ModelSubscriptionEvolinciteUserSettingsFilterInput) {
        onDeleteEvolinciteUserSettings(filter: $filter) {
          __typename
          id
          settings
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteCrmPipelineListener(
    filter?: ModelSubscriptionEvolinciteCrmPipelineFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteCrmPipeline'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteCrmPipeline($filter: ModelSubscriptionEvolinciteCrmPipelineFilterInput) {
        onCreateEvolinciteCrmPipeline(filter: $filter) {
          __typename
          id
          name
          description
          publicDescription
          order
          state
          meta
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmStates {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteCrmPipelineListener(
    filter?: ModelSubscriptionEvolinciteCrmPipelineFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteCrmPipeline'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteCrmPipeline($filter: ModelSubscriptionEvolinciteCrmPipelineFilterInput) {
        onUpdateEvolinciteCrmPipeline(filter: $filter) {
          __typename
          id
          name
          description
          publicDescription
          order
          state
          meta
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmStates {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteCrmPipelineListener(
    filter?: ModelSubscriptionEvolinciteCrmPipelineFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteCrmPipeline'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteCrmPipeline($filter: ModelSubscriptionEvolinciteCrmPipelineFilterInput) {
        onDeleteEvolinciteCrmPipeline(filter: $filter) {
          __typename
          id
          name
          description
          publicDescription
          order
          state
          meta
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmStates {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteCrmStateListener(
    filter?: ModelSubscriptionEvolinciteCrmStateFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteCrmState'>>
  > {
    const statement = `subscription OnCreateEvolinciteCrmState($filter: ModelSubscriptionEvolinciteCrmStateFilterInput) {
        onCreateEvolinciteCrmState(filter: $filter) {
          __typename
          id
          name
          description
          publicDescription
          color
          order
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteCrmAutomations {
            __typename
            nextToken
          }
          evolinciteCrmPipelineID
          EvolinciteCrmPipeline {
            __typename
            id
            name
            description
            publicDescription
            order
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteCrmStateListener(
    filter?: ModelSubscriptionEvolinciteCrmStateFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteCrmState'>>
  > {
    const statement = `subscription OnUpdateEvolinciteCrmState($filter: ModelSubscriptionEvolinciteCrmStateFilterInput) {
        onUpdateEvolinciteCrmState(filter: $filter) {
          __typename
          id
          name
          description
          publicDescription
          color
          order
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteCrmAutomations {
            __typename
            nextToken
          }
          evolinciteCrmPipelineID
          EvolinciteCrmPipeline {
            __typename
            id
            name
            description
            publicDescription
            order
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteCrmStateListener(
    filter?: ModelSubscriptionEvolinciteCrmStateFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteCrmState'>>
  > {
    const statement = `subscription OnDeleteEvolinciteCrmState($filter: ModelSubscriptionEvolinciteCrmStateFilterInput) {
        onDeleteEvolinciteCrmState(filter: $filter) {
          __typename
          id
          name
          description
          publicDescription
          color
          order
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteCrmAutomations {
            __typename
            nextToken
          }
          evolinciteCrmPipelineID
          EvolinciteCrmPipeline {
            __typename
            id
            name
            description
            publicDescription
            order
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteCrmNegotiationLogListener(
    filter?: ModelSubscriptionEvolinciteCrmNegotiationLogFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteCrmNegotiationLog'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteCrmNegotiationLog($filter: ModelSubscriptionEvolinciteCrmNegotiationLogFilterInput) {
        onCreateEvolinciteCrmNegotiationLog(filter: $filter) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteCrmNegotiationID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteCrmNegotiationLogListener(
    filter?: ModelSubscriptionEvolinciteCrmNegotiationLogFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteCrmNegotiationLog'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteCrmNegotiationLog($filter: ModelSubscriptionEvolinciteCrmNegotiationLogFilterInput) {
        onUpdateEvolinciteCrmNegotiationLog(filter: $filter) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteCrmNegotiationID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteCrmNegotiationLogListener(
    filter?: ModelSubscriptionEvolinciteCrmNegotiationLogFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteCrmNegotiationLog'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteCrmNegotiationLog($filter: ModelSubscriptionEvolinciteCrmNegotiationLogFilterInput) {
        onDeleteEvolinciteCrmNegotiationLog(filter: $filter) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteCrmNegotiationID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteCrmNegotiationListener(
    filter?: ModelSubscriptionEvolinciteCrmNegotiationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteCrmNegotiation'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteCrmNegotiation($filter: ModelSubscriptionEvolinciteCrmNegotiationFilterInput) {
        onCreateEvolinciteCrmNegotiation(filter: $filter) {
          __typename
          id
          name
          value
          due
          parent
          date
          documents
          meta
          frozen
          valueInterest
          valueCollection
          observers
          exitDate
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserSellerID
          EvolinciteUserSeller {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserReferrerID
          EvolinciteUserReferrer {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserOwnerID
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFieldValues {
            __typename
            nextToken
          }
          evolinciteCrmStateID
          EvolinciteCrmState {
            __typename
            id
            name
            description
            publicDescription
            color
            order
            state
            evolinciteCompanyID
            evolinciteCrmPipelineID
            createdAt
            updatedAt
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          evolinciteCustomerID
          EvolinciteCustomer {
            __typename
            id
            name
            lastName
            documentType
            documentNumber
            phone
            optionalPhone
            email
            picture
            birthDate
            municipality
            documents
            address
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteComments {
            __typename
            nextToken
          }
          EvolinciteActivities {
            __typename
            nextToken
          }
          EvolinciteUsersObserver {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          evolinciteProcessTypeID
          EvolinciteProcessType {
            __typename
            id
            name
            order
            sellerCommission
            referrerCommission
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          initialGoalID
          InitialGoal {
            __typename
            id
            name
            description
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          finalGoalID
          FinalGoal {
            __typename
            id
            name
            description
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteCrmNegotiationListener(
    filter?: ModelSubscriptionEvolinciteCrmNegotiationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteCrmNegotiation'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteCrmNegotiation($filter: ModelSubscriptionEvolinciteCrmNegotiationFilterInput) {
        onUpdateEvolinciteCrmNegotiation(filter: $filter) {
          __typename
          id
          name
          value
          due
          parent
          date
          documents
          meta
          frozen
          valueInterest
          valueCollection
          observers
          exitDate
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserSellerID
          EvolinciteUserSeller {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserReferrerID
          EvolinciteUserReferrer {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserOwnerID
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFieldValues {
            __typename
            nextToken
          }
          evolinciteCrmStateID
          EvolinciteCrmState {
            __typename
            id
            name
            description
            publicDescription
            color
            order
            state
            evolinciteCompanyID
            evolinciteCrmPipelineID
            createdAt
            updatedAt
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          evolinciteCustomerID
          EvolinciteCustomer {
            __typename
            id
            name
            lastName
            documentType
            documentNumber
            phone
            optionalPhone
            email
            picture
            birthDate
            municipality
            documents
            address
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteComments {
            __typename
            nextToken
          }
          EvolinciteActivities {
            __typename
            nextToken
          }
          EvolinciteUsersObserver {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          evolinciteProcessTypeID
          EvolinciteProcessType {
            __typename
            id
            name
            order
            sellerCommission
            referrerCommission
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          initialGoalID
          InitialGoal {
            __typename
            id
            name
            description
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          finalGoalID
          FinalGoal {
            __typename
            id
            name
            description
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteCrmNegotiationListener(
    filter?: ModelSubscriptionEvolinciteCrmNegotiationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteCrmNegotiation'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteCrmNegotiation($filter: ModelSubscriptionEvolinciteCrmNegotiationFilterInput) {
        onDeleteEvolinciteCrmNegotiation(filter: $filter) {
          __typename
          id
          name
          value
          due
          parent
          date
          documents
          meta
          frozen
          valueInterest
          valueCollection
          observers
          exitDate
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserSellerID
          EvolinciteUserSeller {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserReferrerID
          EvolinciteUserReferrer {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteUserOwnerID
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationFieldValues {
            __typename
            nextToken
          }
          evolinciteCrmStateID
          EvolinciteCrmState {
            __typename
            id
            name
            description
            publicDescription
            color
            order
            state
            evolinciteCompanyID
            evolinciteCrmPipelineID
            createdAt
            updatedAt
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          evolinciteCustomerID
          EvolinciteCustomer {
            __typename
            id
            name
            lastName
            documentType
            documentNumber
            phone
            optionalPhone
            email
            picture
            birthDate
            municipality
            documents
            address
            meta
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteComments {
            __typename
            nextToken
          }
          EvolinciteActivities {
            __typename
            nextToken
          }
          EvolinciteUsersObserver {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          evolinciteProcessTypeID
          EvolinciteProcessType {
            __typename
            id
            name
            order
            sellerCommission
            referrerCommission
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          initialGoalID
          InitialGoal {
            __typename
            id
            name
            description
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          finalGoalID
          FinalGoal {
            __typename
            id
            name
            description
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteRoomListener(
    filter?: ModelSubscriptionEvolinciteRoomFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteRoom'>>
  > {
    const statement = `subscription OnCreateEvolinciteRoom($filter: ModelSubscriptionEvolinciteRoomFilterInput) {
        onCreateEvolinciteRoom(filter: $filter) {
          __typename
          id
          Key
          name
          state
          meta
          EvolinciteUsers {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteRoomListener(
    filter?: ModelSubscriptionEvolinciteRoomFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteRoom'>>
  > {
    const statement = `subscription OnUpdateEvolinciteRoom($filter: ModelSubscriptionEvolinciteRoomFilterInput) {
        onUpdateEvolinciteRoom(filter: $filter) {
          __typename
          id
          Key
          name
          state
          meta
          EvolinciteUsers {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteRoomListener(
    filter?: ModelSubscriptionEvolinciteRoomFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteRoom'>>
  > {
    const statement = `subscription OnDeleteEvolinciteRoom($filter: ModelSubscriptionEvolinciteRoomFilterInput) {
        onDeleteEvolinciteRoom(filter: $filter) {
          __typename
          id
          Key
          name
          state
          meta
          EvolinciteUsers {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteMessageListener(
    filter?: ModelSubscriptionEvolinciteMessageFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteMessage'>>
  > {
    const statement = `subscription OnCreateEvolinciteMessage($filter: ModelSubscriptionEvolinciteMessageFilterInput) {
        onCreateEvolinciteMessage(filter: $filter) {
          __typename
          id
          content
          type
          state
          createdAt
          updatedAt
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteRoomID
          EvolinciteRoom {
            __typename
            id
            Key
            name
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteMessageListener(
    filter?: ModelSubscriptionEvolinciteMessageFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteMessage'>>
  > {
    const statement = `subscription OnUpdateEvolinciteMessage($filter: ModelSubscriptionEvolinciteMessageFilterInput) {
        onUpdateEvolinciteMessage(filter: $filter) {
          __typename
          id
          content
          type
          state
          createdAt
          updatedAt
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteRoomID
          EvolinciteRoom {
            __typename
            id
            Key
            name
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteMessageListener(
    filter?: ModelSubscriptionEvolinciteMessageFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteMessage'>>
  > {
    const statement = `subscription OnDeleteEvolinciteMessage($filter: ModelSubscriptionEvolinciteMessageFilterInput) {
        onDeleteEvolinciteMessage(filter: $filter) {
          __typename
          id
          content
          type
          state
          createdAt
          updatedAt
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteRoomID
          EvolinciteRoom {
            __typename
            id
            Key
            name
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteCrmNegotiationFieldValueListener(
    filter?: ModelSubscriptionEvolinciteCrmNegotiationFieldValueFilterInput
  ): Observable<
    GraphQLResult<
      Pick<
        __SubscriptionContainer,
        'onCreateEvolinciteCrmNegotiationFieldValue'
      >
    >
  > {
    const statement = `subscription OnCreateEvolinciteCrmNegotiationFieldValue($filter: ModelSubscriptionEvolinciteCrmNegotiationFieldValueFilterInput) {
        onCreateEvolinciteCrmNegotiationFieldValue(filter: $filter) {
          __typename
          id
          value
          state
          evolinciteCrmNegotiationFieldID
          EvolinciteCrmNegotiationField {
            __typename
            id
            field
            type
            required
            order
            state
            meta
            evolinciteCompanyID
            evolinciteCrmNegotiationSectionID
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteCrmNegotiationFieldValueListener(
    filter?: ModelSubscriptionEvolinciteCrmNegotiationFieldValueFilterInput
  ): Observable<
    GraphQLResult<
      Pick<
        __SubscriptionContainer,
        'onUpdateEvolinciteCrmNegotiationFieldValue'
      >
    >
  > {
    const statement = `subscription OnUpdateEvolinciteCrmNegotiationFieldValue($filter: ModelSubscriptionEvolinciteCrmNegotiationFieldValueFilterInput) {
        onUpdateEvolinciteCrmNegotiationFieldValue(filter: $filter) {
          __typename
          id
          value
          state
          evolinciteCrmNegotiationFieldID
          EvolinciteCrmNegotiationField {
            __typename
            id
            field
            type
            required
            order
            state
            meta
            evolinciteCompanyID
            evolinciteCrmNegotiationSectionID
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteCrmNegotiationFieldValueListener(
    filter?: ModelSubscriptionEvolinciteCrmNegotiationFieldValueFilterInput
  ): Observable<
    GraphQLResult<
      Pick<
        __SubscriptionContainer,
        'onDeleteEvolinciteCrmNegotiationFieldValue'
      >
    >
  > {
    const statement = `subscription OnDeleteEvolinciteCrmNegotiationFieldValue($filter: ModelSubscriptionEvolinciteCrmNegotiationFieldValueFilterInput) {
        onDeleteEvolinciteCrmNegotiationFieldValue(filter: $filter) {
          __typename
          id
          value
          state
          evolinciteCrmNegotiationFieldID
          EvolinciteCrmNegotiationField {
            __typename
            id
            field
            type
            required
            order
            state
            meta
            evolinciteCompanyID
            evolinciteCrmNegotiationSectionID
            createdAt
            updatedAt
          }
          evolinciteCrmNegotiationID
          EvolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteEmailListener(
    filter?: ModelSubscriptionEvolinciteEmailFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteEmail'>>
  > {
    const statement = `subscription OnCreateEvolinciteEmail($filter: ModelSubscriptionEvolinciteEmailFilterInput) {
        onCreateEvolinciteEmail(filter: $filter) {
          __typename
          id
          from
          to
          content
          subject
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteEmailListener(
    filter?: ModelSubscriptionEvolinciteEmailFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteEmail'>>
  > {
    const statement = `subscription OnUpdateEvolinciteEmail($filter: ModelSubscriptionEvolinciteEmailFilterInput) {
        onUpdateEvolinciteEmail(filter: $filter) {
          __typename
          id
          from
          to
          content
          subject
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteEmailListener(
    filter?: ModelSubscriptionEvolinciteEmailFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteEmail'>>
  > {
    const statement = `subscription OnDeleteEvolinciteEmail($filter: ModelSubscriptionEvolinciteEmailFilterInput) {
        onDeleteEvolinciteEmail(filter: $filter) {
          __typename
          id
          from
          to
          content
          subject
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteEmailTemplateListener(
    filter?: ModelSubscriptionEvolinciteEmailTemplateFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteEmailTemplate'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteEmailTemplate($filter: ModelSubscriptionEvolinciteEmailTemplateFilterInput) {
        onCreateEvolinciteEmailTemplate(filter: $filter) {
          __typename
          id
          content
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteEmailTemplateListener(
    filter?: ModelSubscriptionEvolinciteEmailTemplateFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteEmailTemplate'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteEmailTemplate($filter: ModelSubscriptionEvolinciteEmailTemplateFilterInput) {
        onUpdateEvolinciteEmailTemplate(filter: $filter) {
          __typename
          id
          content
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteEmailTemplateListener(
    filter?: ModelSubscriptionEvolinciteEmailTemplateFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteEmailTemplate'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteEmailTemplate($filter: ModelSubscriptionEvolinciteEmailTemplateFilterInput) {
        onDeleteEvolinciteEmailTemplate(filter: $filter) {
          __typename
          id
          content
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteNotificationListener(
    filter?: ModelSubscriptionEvolinciteNotificationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteNotification'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteNotification($filter: ModelSubscriptionEvolinciteNotificationFilterInput) {
        onCreateEvolinciteNotification(filter: $filter) {
          __typename
          id
          content
          title
          priority
          type
          meta
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteNotificationListener(
    filter?: ModelSubscriptionEvolinciteNotificationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteNotification'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteNotification($filter: ModelSubscriptionEvolinciteNotificationFilterInput) {
        onUpdateEvolinciteNotification(filter: $filter) {
          __typename
          id
          content
          title
          priority
          type
          meta
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteNotificationListener(
    filter?: ModelSubscriptionEvolinciteNotificationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteNotification'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteNotification($filter: ModelSubscriptionEvolinciteNotificationFilterInput) {
        onDeleteEvolinciteNotification(filter: $filter) {
          __typename
          id
          content
          title
          priority
          type
          meta
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteUserDepartmentListener(
    filter?: ModelSubscriptionEvolinciteUserDepartmentFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteUserDepartment'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteUserDepartment($filter: ModelSubscriptionEvolinciteUserDepartmentFilterInput) {
        onCreateEvolinciteUserDepartment(filter: $filter) {
          __typename
          id
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteDepartmentID
          EvolinciteDepartment {
            __typename
            id
            name
            parent
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteUserDepartmentListener(
    filter?: ModelSubscriptionEvolinciteUserDepartmentFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteUserDepartment'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteUserDepartment($filter: ModelSubscriptionEvolinciteUserDepartmentFilterInput) {
        onUpdateEvolinciteUserDepartment(filter: $filter) {
          __typename
          id
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteDepartmentID
          EvolinciteDepartment {
            __typename
            id
            name
            parent
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteUserDepartmentListener(
    filter?: ModelSubscriptionEvolinciteUserDepartmentFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteUserDepartment'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteUserDepartment($filter: ModelSubscriptionEvolinciteUserDepartmentFilterInput) {
        onDeleteEvolinciteUserDepartment(filter: $filter) {
          __typename
          id
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteDepartmentID
          EvolinciteDepartment {
            __typename
            id
            name
            parent
            state
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteUserEvolinciteCompanyListener(
    filter?: ModelSubscriptionEvolinciteUserEvolinciteCompanyFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteUserEvolinciteCompany'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteUserEvolinciteCompany($filter: ModelSubscriptionEvolinciteUserEvolinciteCompanyFilterInput) {
        onCreateEvolinciteUserEvolinciteCompany(filter: $filter) {
          __typename
          id
          state
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteUserEvolinciteCompanyListener(
    filter?: ModelSubscriptionEvolinciteUserEvolinciteCompanyFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteUserEvolinciteCompany'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteUserEvolinciteCompany($filter: ModelSubscriptionEvolinciteUserEvolinciteCompanyFilterInput) {
        onUpdateEvolinciteUserEvolinciteCompany(filter: $filter) {
          __typename
          id
          state
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteUserEvolinciteCompanyListener(
    filter?: ModelSubscriptionEvolinciteUserEvolinciteCompanyFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteUserEvolinciteCompany'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteUserEvolinciteCompany($filter: ModelSubscriptionEvolinciteUserEvolinciteCompanyFilterInput) {
        onDeleteEvolinciteUserEvolinciteCompany(filter: $filter) {
          __typename
          id
          state
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteUserListener(
    filter?: ModelSubscriptionEvolinciteUserFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteUser'>>
  > {
    const statement = `subscription OnCreateEvolinciteUser($filter: ModelSubscriptionEvolinciteUserFilterInput) {
        onCreateEvolinciteUser(filter: $filter) {
          __typename
          id
          name
          nit
          phone
          picture
          email
          sub
          meta
          cv
          contract
          memos
          personalMail
          personalPhone
          state
          EvolinciteUserEvolinciteCompanies {
            __typename
            nextToken
          }
          EvolinciteActivitiesOwner {
            __typename
            nextToken
          }
          EvolinciteActivitiesParticipants {
            __typename
            nextToken
          }
          EvolinciteRooms {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsOwner {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsReferrer {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsSeller {
            __typename
            nextToken
          }
          EvolincitePaymentsUserSeller {
            __typename
            nextToken
          }
          EvolincitePaymentsUserReferrer {
            __typename
            nextToken
          }
          EvolinciteNotifications {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteComments {
            __typename
            nextToken
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteUserSettings {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsObserver {
            __typename
            nextToken
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          EvolinciteTicket {
            __typename
            nextToken
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          EvolinciteFolders {
            __typename
            nextToken
          }
          EvolinciteArticles {
            __typename
            nextToken
          }
          EvolinciteArticleComments {
            __typename
            nextToken
          }
          EvolinciteFoldersOwner {
            __typename
            nextToken
          }
          EvolinciteFormConfigurations {
            __typename
            nextToken
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          EvolinciteMails {
            __typename
            nextToken
          }
          EvolinciteEmployeeObservations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteUserListener(
    filter?: ModelSubscriptionEvolinciteUserFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteUser'>>
  > {
    const statement = `subscription OnUpdateEvolinciteUser($filter: ModelSubscriptionEvolinciteUserFilterInput) {
        onUpdateEvolinciteUser(filter: $filter) {
          __typename
          id
          name
          nit
          phone
          picture
          email
          sub
          meta
          cv
          contract
          memos
          personalMail
          personalPhone
          state
          EvolinciteUserEvolinciteCompanies {
            __typename
            nextToken
          }
          EvolinciteActivitiesOwner {
            __typename
            nextToken
          }
          EvolinciteActivitiesParticipants {
            __typename
            nextToken
          }
          EvolinciteRooms {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsOwner {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsReferrer {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsSeller {
            __typename
            nextToken
          }
          EvolincitePaymentsUserSeller {
            __typename
            nextToken
          }
          EvolincitePaymentsUserReferrer {
            __typename
            nextToken
          }
          EvolinciteNotifications {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteComments {
            __typename
            nextToken
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteUserSettings {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsObserver {
            __typename
            nextToken
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          EvolinciteTicket {
            __typename
            nextToken
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          EvolinciteFolders {
            __typename
            nextToken
          }
          EvolinciteArticles {
            __typename
            nextToken
          }
          EvolinciteArticleComments {
            __typename
            nextToken
          }
          EvolinciteFoldersOwner {
            __typename
            nextToken
          }
          EvolinciteFormConfigurations {
            __typename
            nextToken
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          EvolinciteMails {
            __typename
            nextToken
          }
          EvolinciteEmployeeObservations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteUserListener(
    filter?: ModelSubscriptionEvolinciteUserFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteUser'>>
  > {
    const statement = `subscription OnDeleteEvolinciteUser($filter: ModelSubscriptionEvolinciteUserFilterInput) {
        onDeleteEvolinciteUser(filter: $filter) {
          __typename
          id
          name
          nit
          phone
          picture
          email
          sub
          meta
          cv
          contract
          memos
          personalMail
          personalPhone
          state
          EvolinciteUserEvolinciteCompanies {
            __typename
            nextToken
          }
          EvolinciteActivitiesOwner {
            __typename
            nextToken
          }
          EvolinciteActivitiesParticipants {
            __typename
            nextToken
          }
          EvolinciteRooms {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsOwner {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsReferrer {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsSeller {
            __typename
            nextToken
          }
          EvolincitePaymentsUserSeller {
            __typename
            nextToken
          }
          EvolincitePaymentsUserReferrer {
            __typename
            nextToken
          }
          EvolinciteNotifications {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteComments {
            __typename
            nextToken
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteUserSettings {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsObserver {
            __typename
            nextToken
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          EvolinciteTicket {
            __typename
            nextToken
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          EvolinciteFolders {
            __typename
            nextToken
          }
          EvolinciteArticles {
            __typename
            nextToken
          }
          EvolinciteArticleComments {
            __typename
            nextToken
          }
          EvolinciteFoldersOwner {
            __typename
            nextToken
          }
          EvolinciteFormConfigurations {
            __typename
            nextToken
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          EvolinciteMails {
            __typename
            nextToken
          }
          EvolinciteEmployeeObservations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteCompanyListener(
    filter?: ModelSubscriptionEvolinciteCompanyFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteCompany'>>
  > {
    const statement = `subscription OnCreateEvolinciteCompany($filter: ModelSubscriptionEvolinciteCompanyFilterInput) {
        onCreateEvolinciteCompany(filter: $filter) {
          __typename
          id
          name
          nit
          picture
          meta
          state
          EvolinciteUserEvolinciteCompanies {
            __typename
            nextToken
          }
          evolinciteSubscriptionID
          EvolinciteSubscription {
            __typename
            id
            name
            price
            dateInitial
            dateFinal
            state
            createdAt
            updatedAt
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationFields {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationSections {
            __typename
            nextToken
          }
          EvolinciteCrmAutomations {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          EvolinciteDepartments {
            __typename
            nextToken
          }
          EvolinciteCustomers {
            __typename
            nextToken
          }
          EvolinciteCrmPipelines {
            __typename
            nextToken
          }
          EvolinciteCrmStates {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteJobTitles {
            __typename
            nextToken
          }
          EvolinciteNotifications {
            __typename
            nextToken
          }
          EvolinciteEmailTemplates {
            __typename
            nextToken
          }
          EvolinciteEmails {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteActivities {
            __typename
            nextToken
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteRoles {
            __typename
            nextToken
          }
          EvolinciteUserSettings {
            __typename
            nextToken
          }
          EvolinciteRooms {
            __typename
            nextToken
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          EvolinciteExpenseTypes {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          EvolinciteProcessTypes {
            __typename
            nextToken
          }
          EvolinciteGoal {
            __typename
            nextToken
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          EvolinciteTicketOwner {
            __typename
            nextToken
          }
          EvolinciteTicketOrigin {
            __typename
            nextToken
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          EvolinciteFolders {
            __typename
            nextToken
          }
          EvolinciteArticles {
            __typename
            nextToken
          }
          EvolinciteFormConfigurations {
            __typename
            nextToken
          }
          EvolincitePaymentAutomations {
            __typename
            nextToken
          }
          EvolinciteMails {
            __typename
            nextToken
          }
          EvolinciteMailTemplates {
            __typename
            nextToken
          }
          EvolinciteCompanySubscriptions {
            __typename
            nextToken
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          EvolinciteEmployeeObservations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteCompanyListener(
    filter?: ModelSubscriptionEvolinciteCompanyFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteCompany'>>
  > {
    const statement = `subscription OnUpdateEvolinciteCompany($filter: ModelSubscriptionEvolinciteCompanyFilterInput) {
        onUpdateEvolinciteCompany(filter: $filter) {
          __typename
          id
          name
          nit
          picture
          meta
          state
          EvolinciteUserEvolinciteCompanies {
            __typename
            nextToken
          }
          evolinciteSubscriptionID
          EvolinciteSubscription {
            __typename
            id
            name
            price
            dateInitial
            dateFinal
            state
            createdAt
            updatedAt
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationFields {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationSections {
            __typename
            nextToken
          }
          EvolinciteCrmAutomations {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          EvolinciteDepartments {
            __typename
            nextToken
          }
          EvolinciteCustomers {
            __typename
            nextToken
          }
          EvolinciteCrmPipelines {
            __typename
            nextToken
          }
          EvolinciteCrmStates {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteJobTitles {
            __typename
            nextToken
          }
          EvolinciteNotifications {
            __typename
            nextToken
          }
          EvolinciteEmailTemplates {
            __typename
            nextToken
          }
          EvolinciteEmails {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteActivities {
            __typename
            nextToken
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteRoles {
            __typename
            nextToken
          }
          EvolinciteUserSettings {
            __typename
            nextToken
          }
          EvolinciteRooms {
            __typename
            nextToken
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          EvolinciteExpenseTypes {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          EvolinciteProcessTypes {
            __typename
            nextToken
          }
          EvolinciteGoal {
            __typename
            nextToken
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          EvolinciteTicketOwner {
            __typename
            nextToken
          }
          EvolinciteTicketOrigin {
            __typename
            nextToken
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          EvolinciteFolders {
            __typename
            nextToken
          }
          EvolinciteArticles {
            __typename
            nextToken
          }
          EvolinciteFormConfigurations {
            __typename
            nextToken
          }
          EvolincitePaymentAutomations {
            __typename
            nextToken
          }
          EvolinciteMails {
            __typename
            nextToken
          }
          EvolinciteMailTemplates {
            __typename
            nextToken
          }
          EvolinciteCompanySubscriptions {
            __typename
            nextToken
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          EvolinciteEmployeeObservations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteCompanyListener(
    filter?: ModelSubscriptionEvolinciteCompanyFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteCompany'>>
  > {
    const statement = `subscription OnDeleteEvolinciteCompany($filter: ModelSubscriptionEvolinciteCompanyFilterInput) {
        onDeleteEvolinciteCompany(filter: $filter) {
          __typename
          id
          name
          nit
          picture
          meta
          state
          EvolinciteUserEvolinciteCompanies {
            __typename
            nextToken
          }
          evolinciteSubscriptionID
          EvolinciteSubscription {
            __typename
            id
            name
            price
            dateInitial
            dateFinal
            state
            createdAt
            updatedAt
          }
          EvolinciteWalletPayments {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationFields {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationSections {
            __typename
            nextToken
          }
          EvolinciteCrmAutomations {
            __typename
            nextToken
          }
          EvolinciteUserDepartments {
            __typename
            nextToken
          }
          EvolinciteDepartments {
            __typename
            nextToken
          }
          EvolinciteCustomers {
            __typename
            nextToken
          }
          EvolinciteCrmPipelines {
            __typename
            nextToken
          }
          EvolinciteCrmStates {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiations {
            __typename
            nextToken
          }
          EvolinciteJobTitles {
            __typename
            nextToken
          }
          EvolinciteNotifications {
            __typename
            nextToken
          }
          EvolinciteEmailTemplates {
            __typename
            nextToken
          }
          EvolinciteEmails {
            __typename
            nextToken
          }
          EvolinciteMessages {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationLogs {
            __typename
            nextToken
          }
          EvolinciteActivities {
            __typename
            nextToken
          }
          EvolincitePermissions {
            __typename
            nextToken
          }
          EvolinciteRoles {
            __typename
            nextToken
          }
          EvolinciteUserSettings {
            __typename
            nextToken
          }
          EvolinciteRooms {
            __typename
            nextToken
          }
          EvolinciteUserEvolinciteJobTitle {
            __typename
            nextToken
          }
          EvolinciteExpenseTypes {
            __typename
            nextToken
          }
          EvolinciteExpenses {
            __typename
            nextToken
          }
          EvolinciteProcessTypes {
            __typename
            nextToken
          }
          EvolinciteGoal {
            __typename
            nextToken
          }
          EvolinciteWalletPaymentLogs {
            __typename
            nextToken
          }
          EvolinciteExpenseLogs {
            __typename
            nextToken
          }
          EvolinciteTicketOwner {
            __typename
            nextToken
          }
          EvolinciteTicketOrigin {
            __typename
            nextToken
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          EvolinciteFolders {
            __typename
            nextToken
          }
          EvolinciteArticles {
            __typename
            nextToken
          }
          EvolinciteFormConfigurations {
            __typename
            nextToken
          }
          EvolincitePaymentAutomations {
            __typename
            nextToken
          }
          EvolinciteMails {
            __typename
            nextToken
          }
          EvolinciteMailTemplates {
            __typename
            nextToken
          }
          EvolinciteCompanySubscriptions {
            __typename
            nextToken
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          EvolinciteEmployeeObservations {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteGoalListener(
    filter?: ModelSubscriptionEvolinciteGoalFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteGoal'>>
  > {
    const statement = `subscription OnCreateEvolinciteGoal($filter: ModelSubscriptionEvolinciteGoalFilterInput) {
        onCreateEvolinciteGoal(filter: $filter) {
          __typename
          id
          name
          description
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationsInitial {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsFinal {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteGoalListener(
    filter?: ModelSubscriptionEvolinciteGoalFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteGoal'>>
  > {
    const statement = `subscription OnUpdateEvolinciteGoal($filter: ModelSubscriptionEvolinciteGoalFilterInput) {
        onUpdateEvolinciteGoal(filter: $filter) {
          __typename
          id
          name
          description
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationsInitial {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsFinal {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteGoalListener(
    filter?: ModelSubscriptionEvolinciteGoalFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteGoal'>>
  > {
    const statement = `subscription OnDeleteEvolinciteGoal($filter: ModelSubscriptionEvolinciteGoalFilterInput) {
        onDeleteEvolinciteGoal(filter: $filter) {
          __typename
          id
          name
          description
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCrmNegotiationsInitial {
            __typename
            nextToken
          }
          EvolinciteCrmNegotiationsFinal {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteWalletPaymentLogListener(
    filter?: ModelSubscriptionEvolinciteWalletPaymentLogFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteWalletPaymentLog'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteWalletPaymentLog($filter: ModelSubscriptionEvolinciteWalletPaymentLogFilterInput) {
        onCreateEvolinciteWalletPaymentLog(filter: $filter) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteWalletPaymentID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteWalletPayment {
            __typename
            id
            amount
            scheduledDate
            datePayment
            paymentStatus
            prePayment
            postPayment
            observations
            voucher
            transactionType
            reference
            amountInterest
            amountCollection
            state
            evolinciteCompanyID
            evolinciteUserReferrerID
            evolinciteUserSellerID
            evolinciteCrmNegotiationID
            evolinciteCustomerID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteWalletPaymentLogListener(
    filter?: ModelSubscriptionEvolinciteWalletPaymentLogFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteWalletPaymentLog'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteWalletPaymentLog($filter: ModelSubscriptionEvolinciteWalletPaymentLogFilterInput) {
        onUpdateEvolinciteWalletPaymentLog(filter: $filter) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteWalletPaymentID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteWalletPayment {
            __typename
            id
            amount
            scheduledDate
            datePayment
            paymentStatus
            prePayment
            postPayment
            observations
            voucher
            transactionType
            reference
            amountInterest
            amountCollection
            state
            evolinciteCompanyID
            evolinciteUserReferrerID
            evolinciteUserSellerID
            evolinciteCrmNegotiationID
            evolinciteCustomerID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteWalletPaymentLogListener(
    filter?: ModelSubscriptionEvolinciteWalletPaymentLogFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteWalletPaymentLog'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteWalletPaymentLog($filter: ModelSubscriptionEvolinciteWalletPaymentLogFilterInput) {
        onDeleteEvolinciteWalletPaymentLog(filter: $filter) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteWalletPaymentID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteWalletPayment {
            __typename
            id
            amount
            scheduledDate
            datePayment
            paymentStatus
            prePayment
            postPayment
            observations
            voucher
            transactionType
            reference
            amountInterest
            amountCollection
            state
            evolinciteCompanyID
            evolinciteUserReferrerID
            evolinciteUserSellerID
            evolinciteCrmNegotiationID
            evolinciteCustomerID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteExpenseLogListener(
    filter?: ModelSubscriptionEvolinciteExpenseLogFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteExpenseLog'>>
  > {
    const statement = `subscription OnCreateEvolinciteExpenseLog($filter: ModelSubscriptionEvolinciteExpenseLogFilterInput) {
        onCreateEvolinciteExpenseLog(filter: $filter) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteExpenseID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteExpense {
            __typename
            id
            amount
            process
            expenseState
            expenseDate
            observations
            voucher
            transactionType
            reference
            state
            evolinciteExpenseTypeID
            evolinciteCrmNegotiationID
            evolinciteCompanyID
            evolinciteUserID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteExpenseLogListener(
    filter?: ModelSubscriptionEvolinciteExpenseLogFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteExpenseLog'>>
  > {
    const statement = `subscription OnUpdateEvolinciteExpenseLog($filter: ModelSubscriptionEvolinciteExpenseLogFilterInput) {
        onUpdateEvolinciteExpenseLog(filter: $filter) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteExpenseID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteExpense {
            __typename
            id
            amount
            process
            expenseState
            expenseDate
            observations
            voucher
            transactionType
            reference
            state
            evolinciteExpenseTypeID
            evolinciteCrmNegotiationID
            evolinciteCompanyID
            evolinciteUserID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteExpenseLogListener(
    filter?: ModelSubscriptionEvolinciteExpenseLogFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteExpenseLog'>>
  > {
    const statement = `subscription OnDeleteEvolinciteExpenseLog($filter: ModelSubscriptionEvolinciteExpenseLogFilterInput) {
        onDeleteEvolinciteExpenseLog(filter: $filter) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteExpenseID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteExpense {
            __typename
            id
            amount
            process
            expenseState
            expenseDate
            observations
            voucher
            transactionType
            reference
            state
            evolinciteExpenseTypeID
            evolinciteCrmNegotiationID
            evolinciteCompanyID
            evolinciteUserID
            evolinciteUserResponsibleID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteTicketListener(
    filter?: ModelSubscriptionEvolinciteTicketFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteTicket'>>
  > {
    const statement = `subscription OnCreateEvolinciteTicket($filter: ModelSubscriptionEvolinciteTicketFilterInput) {
        onCreateEvolinciteTicket(filter: $filter) {
          __typename
          id
          name
          description
          documents
          meta
          ticketState
          state
          evolinciteUserID
          evolinciteCompanyOwnerID
          evolinciteCompanyOriginID
          EvolinciteCompanyOwner {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCompanyOrigin {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteTicketListener(
    filter?: ModelSubscriptionEvolinciteTicketFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteTicket'>>
  > {
    const statement = `subscription OnUpdateEvolinciteTicket($filter: ModelSubscriptionEvolinciteTicketFilterInput) {
        onUpdateEvolinciteTicket(filter: $filter) {
          __typename
          id
          name
          description
          documents
          meta
          ticketState
          state
          evolinciteUserID
          evolinciteCompanyOwnerID
          evolinciteCompanyOriginID
          EvolinciteCompanyOwner {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCompanyOrigin {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteTicketListener(
    filter?: ModelSubscriptionEvolinciteTicketFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteTicket'>>
  > {
    const statement = `subscription OnDeleteEvolinciteTicket($filter: ModelSubscriptionEvolinciteTicketFilterInput) {
        onDeleteEvolinciteTicket(filter: $filter) {
          __typename
          id
          name
          description
          documents
          meta
          ticketState
          state
          evolinciteUserID
          evolinciteCompanyOwnerID
          evolinciteCompanyOriginID
          EvolinciteCompanyOwner {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteCompanyOrigin {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteTicketLogs {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteTicketLogListener(
    filter?: ModelSubscriptionEvolinciteTicketLogFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteTicketLog'>>
  > {
    const statement = `subscription OnCreateEvolinciteTicketLog($filter: ModelSubscriptionEvolinciteTicketLogFilterInput) {
        onCreateEvolinciteTicketLog(filter: $filter) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteTicketID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteTicket {
            __typename
            id
            name
            description
            documents
            meta
            ticketState
            state
            evolinciteUserID
            evolinciteCompanyOwnerID
            evolinciteCompanyOriginID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteTicketLogListener(
    filter?: ModelSubscriptionEvolinciteTicketLogFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteTicketLog'>>
  > {
    const statement = `subscription OnUpdateEvolinciteTicketLog($filter: ModelSubscriptionEvolinciteTicketLogFilterInput) {
        onUpdateEvolinciteTicketLog(filter: $filter) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteTicketID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteTicket {
            __typename
            id
            name
            description
            documents
            meta
            ticketState
            state
            evolinciteUserID
            evolinciteCompanyOwnerID
            evolinciteCompanyOriginID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteTicketLogListener(
    filter?: ModelSubscriptionEvolinciteTicketLogFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteTicketLog'>>
  > {
    const statement = `subscription OnDeleteEvolinciteTicketLog($filter: ModelSubscriptionEvolinciteTicketLogFilterInput) {
        onDeleteEvolinciteTicketLog(filter: $filter) {
          __typename
          id
          log
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteTicketID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteTicket {
            __typename
            id
            name
            description
            documents
            meta
            ticketState
            state
            evolinciteUserID
            evolinciteCompanyOwnerID
            evolinciteCompanyOriginID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteFileListener(
    filter?: ModelSubscriptionEvolinciteFileFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteFile'>>
  > {
    const statement = `subscription OnCreateEvolinciteFile($filter: ModelSubscriptionEvolinciteFileFilterInput) {
        onCreateEvolinciteFile(filter: $filter) {
          __typename
          id
          name
          size
          meta
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteFolderID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFolder {
            __typename
            id
            parent
            name
            meta
            state
            evolinciteUserID
            evolinciteUserOwnerID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteFileListener(
    filter?: ModelSubscriptionEvolinciteFileFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteFile'>>
  > {
    const statement = `subscription OnUpdateEvolinciteFile($filter: ModelSubscriptionEvolinciteFileFilterInput) {
        onUpdateEvolinciteFile(filter: $filter) {
          __typename
          id
          name
          size
          meta
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteFolderID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFolder {
            __typename
            id
            parent
            name
            meta
            state
            evolinciteUserID
            evolinciteUserOwnerID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteFileListener(
    filter?: ModelSubscriptionEvolinciteFileFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteFile'>>
  > {
    const statement = `subscription OnDeleteEvolinciteFile($filter: ModelSubscriptionEvolinciteFileFilterInput) {
        onDeleteEvolinciteFile(filter: $filter) {
          __typename
          id
          name
          size
          meta
          state
          evolinciteUserID
          evolinciteCompanyID
          evolinciteFolderID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFolder {
            __typename
            id
            parent
            name
            meta
            state
            evolinciteUserID
            evolinciteUserOwnerID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteFolderListener(
    filter?: ModelSubscriptionEvolinciteFolderFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteFolder'>>
  > {
    const statement = `subscription OnCreateEvolinciteFolder($filter: ModelSubscriptionEvolinciteFolderFilterInput) {
        onCreateEvolinciteFolder(filter: $filter) {
          __typename
          id
          parent
          name
          meta
          state
          evolinciteUserID
          evolinciteUserOwnerID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteFolderListener(
    filter?: ModelSubscriptionEvolinciteFolderFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteFolder'>>
  > {
    const statement = `subscription OnUpdateEvolinciteFolder($filter: ModelSubscriptionEvolinciteFolderFilterInput) {
        onUpdateEvolinciteFolder(filter: $filter) {
          __typename
          id
          parent
          name
          meta
          state
          evolinciteUserID
          evolinciteUserOwnerID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteFolderListener(
    filter?: ModelSubscriptionEvolinciteFolderFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteFolder'>>
  > {
    const statement = `subscription OnDeleteEvolinciteFolder($filter: ModelSubscriptionEvolinciteFolderFilterInput) {
        onDeleteEvolinciteFolder(filter: $filter) {
          __typename
          id
          parent
          name
          meta
          state
          evolinciteUserID
          evolinciteUserOwnerID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteUserOwner {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFiles {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteArticleListener(
    filter?: ModelSubscriptionEvolinciteArticleFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteArticle'>>
  > {
    const statement = `subscription OnCreateEvolinciteArticle($filter: ModelSubscriptionEvolinciteArticleFilterInput) {
        onCreateEvolinciteArticle(filter: $filter) {
          __typename
          id
          front
          cover
          title
          content
          articleState
          visibility
          publicationDate
          meta
          files
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteArticleComments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteArticleListener(
    filter?: ModelSubscriptionEvolinciteArticleFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteArticle'>>
  > {
    const statement = `subscription OnUpdateEvolinciteArticle($filter: ModelSubscriptionEvolinciteArticleFilterInput) {
        onUpdateEvolinciteArticle(filter: $filter) {
          __typename
          id
          front
          cover
          title
          content
          articleState
          visibility
          publicationDate
          meta
          files
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteArticleComments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteArticleListener(
    filter?: ModelSubscriptionEvolinciteArticleFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteArticle'>>
  > {
    const statement = `subscription OnDeleteEvolinciteArticle($filter: ModelSubscriptionEvolinciteArticleFilterInput) {
        onDeleteEvolinciteArticle(filter: $filter) {
          __typename
          id
          front
          cover
          title
          content
          articleState
          visibility
          publicationDate
          meta
          files
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteArticleComments {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteArticleCommentListener(
    filter?: ModelSubscriptionEvolinciteArticleCommentFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteArticleComment'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteArticleComment($filter: ModelSubscriptionEvolinciteArticleCommentFilterInput) {
        onCreateEvolinciteArticleComment(filter: $filter) {
          __typename
          id
          content
          state
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteArticleID
          EvolinciteArticle {
            __typename
            id
            front
            cover
            title
            content
            articleState
            visibility
            publicationDate
            meta
            files
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteArticleCommentListener(
    filter?: ModelSubscriptionEvolinciteArticleCommentFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteArticleComment'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteArticleComment($filter: ModelSubscriptionEvolinciteArticleCommentFilterInput) {
        onUpdateEvolinciteArticleComment(filter: $filter) {
          __typename
          id
          content
          state
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteArticleID
          EvolinciteArticle {
            __typename
            id
            front
            cover
            title
            content
            articleState
            visibility
            publicationDate
            meta
            files
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteArticleCommentListener(
    filter?: ModelSubscriptionEvolinciteArticleCommentFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteArticleComment'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteArticleComment($filter: ModelSubscriptionEvolinciteArticleCommentFilterInput) {
        onDeleteEvolinciteArticleComment(filter: $filter) {
          __typename
          id
          content
          state
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteArticleID
          EvolinciteArticle {
            __typename
            id
            front
            cover
            title
            content
            articleState
            visibility
            publicationDate
            meta
            files
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteFormConfigurationListener(
    filter?: ModelSubscriptionEvolinciteFormConfigurationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteFormConfiguration'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteFormConfiguration($filter: ModelSubscriptionEvolinciteFormConfigurationFilterInput) {
        onCreateEvolinciteFormConfiguration(filter: $filter) {
          __typename
          id
          key
          name
          config
          meta
          title
          description
          observations
          front
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteFormConfigurationListener(
    filter?: ModelSubscriptionEvolinciteFormConfigurationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteFormConfiguration'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteFormConfiguration($filter: ModelSubscriptionEvolinciteFormConfigurationFilterInput) {
        onUpdateEvolinciteFormConfiguration(filter: $filter) {
          __typename
          id
          key
          name
          config
          meta
          title
          description
          observations
          front
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteFormConfigurationListener(
    filter?: ModelSubscriptionEvolinciteFormConfigurationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteFormConfiguration'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteFormConfiguration($filter: ModelSubscriptionEvolinciteFormConfigurationFilterInput) {
        onDeleteEvolinciteFormConfiguration(filter: $filter) {
          __typename
          id
          key
          name
          config
          meta
          title
          description
          observations
          front
          state
          evolinciteUserID
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          EvolinciteFormAnswers {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteFormAnswerListener(
    filter?: ModelSubscriptionEvolinciteFormAnswerFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteFormAnswer'>>
  > {
    const statement = `subscription OnCreateEvolinciteFormAnswer($filter: ModelSubscriptionEvolinciteFormAnswerFilterInput) {
        onCreateEvolinciteFormAnswer(filter: $filter) {
          __typename
          id
          meta
          answerState
          state
          evolinciteUserID
          evolinciteFormConfigurationID
          EvolinciteFormConfiguration {
            __typename
            id
            key
            name
            config
            meta
            title
            description
            observations
            front
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteFormAnswerListener(
    filter?: ModelSubscriptionEvolinciteFormAnswerFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteFormAnswer'>>
  > {
    const statement = `subscription OnUpdateEvolinciteFormAnswer($filter: ModelSubscriptionEvolinciteFormAnswerFilterInput) {
        onUpdateEvolinciteFormAnswer(filter: $filter) {
          __typename
          id
          meta
          answerState
          state
          evolinciteUserID
          evolinciteFormConfigurationID
          EvolinciteFormConfiguration {
            __typename
            id
            key
            name
            config
            meta
            title
            description
            observations
            front
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteFormAnswerListener(
    filter?: ModelSubscriptionEvolinciteFormAnswerFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteFormAnswer'>>
  > {
    const statement = `subscription OnDeleteEvolinciteFormAnswer($filter: ModelSubscriptionEvolinciteFormAnswerFilterInput) {
        onDeleteEvolinciteFormAnswer(filter: $filter) {
          __typename
          id
          meta
          answerState
          state
          evolinciteUserID
          evolinciteFormConfigurationID
          EvolinciteFormConfiguration {
            __typename
            id
            key
            name
            config
            meta
            title
            description
            observations
            front
            state
            evolinciteUserID
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolincitePaymentAutomationListener(
    filter?: ModelSubscriptionEvolincitePaymentAutomationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolincitePaymentAutomation'>
    >
  > {
    const statement = `subscription OnCreateEvolincitePaymentAutomation($filter: ModelSubscriptionEvolincitePaymentAutomationFilterInput) {
        onCreateEvolincitePaymentAutomation(filter: $filter) {
          __typename
          id
          name
          setting
          order
          repeat
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolincitePaymentAutomationListener(
    filter?: ModelSubscriptionEvolincitePaymentAutomationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolincitePaymentAutomation'>
    >
  > {
    const statement = `subscription OnUpdateEvolincitePaymentAutomation($filter: ModelSubscriptionEvolincitePaymentAutomationFilterInput) {
        onUpdateEvolincitePaymentAutomation(filter: $filter) {
          __typename
          id
          name
          setting
          order
          repeat
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolincitePaymentAutomationListener(
    filter?: ModelSubscriptionEvolincitePaymentAutomationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolincitePaymentAutomation'>
    >
  > {
    const statement = `subscription OnDeleteEvolincitePaymentAutomation($filter: ModelSubscriptionEvolincitePaymentAutomationFilterInput) {
        onDeleteEvolincitePaymentAutomation(filter: $filter) {
          __typename
          id
          name
          setting
          order
          repeat
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteMailListener(
    filter?: ModelSubscriptionEvolinciteMailFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteMail'>>
  > {
    const statement = `subscription OnCreateEvolinciteMail($filter: ModelSubscriptionEvolinciteMailFilterInput) {
        onCreateEvolinciteMail(filter: $filter) {
          __typename
          id
          destinations
          subject
          content
          submissionStatus
          setting
          response
          files
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteMailListener(
    filter?: ModelSubscriptionEvolinciteMailFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteMail'>>
  > {
    const statement = `subscription OnUpdateEvolinciteMail($filter: ModelSubscriptionEvolinciteMailFilterInput) {
        onUpdateEvolinciteMail(filter: $filter) {
          __typename
          id
          destinations
          subject
          content
          submissionStatus
          setting
          response
          files
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteMailListener(
    filter?: ModelSubscriptionEvolinciteMailFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteMail'>>
  > {
    const statement = `subscription OnDeleteEvolinciteMail($filter: ModelSubscriptionEvolinciteMailFilterInput) {
        onDeleteEvolinciteMail(filter: $filter) {
          __typename
          id
          destinations
          subject
          content
          submissionStatus
          setting
          response
          files
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteMailConfigurationListener(
    filter?: ModelSubscriptionEvolinciteMailConfigurationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteMailConfiguration'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteMailConfiguration($filter: ModelSubscriptionEvolinciteMailConfigurationFilterInput) {
        onCreateEvolinciteMailConfiguration(filter: $filter) {
          __typename
          id
          SMTP
          email
          password
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteMailConfigurationListener(
    filter?: ModelSubscriptionEvolinciteMailConfigurationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteMailConfiguration'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteMailConfiguration($filter: ModelSubscriptionEvolinciteMailConfigurationFilterInput) {
        onUpdateEvolinciteMailConfiguration(filter: $filter) {
          __typename
          id
          SMTP
          email
          password
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteMailConfigurationListener(
    filter?: ModelSubscriptionEvolinciteMailConfigurationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteMailConfiguration'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteMailConfiguration($filter: ModelSubscriptionEvolinciteMailConfigurationFilterInput) {
        onDeleteEvolinciteMailConfiguration(filter: $filter) {
          __typename
          id
          SMTP
          email
          password
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteMailTemplateListener(
    filter?: ModelSubscriptionEvolinciteMailTemplateFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteMailTemplate'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteMailTemplate($filter: ModelSubscriptionEvolinciteMailTemplateFilterInput) {
        onCreateEvolinciteMailTemplate(filter: $filter) {
          __typename
          id
          destinations
          subject
          content
          files
          transmitter
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteMailTemplateListener(
    filter?: ModelSubscriptionEvolinciteMailTemplateFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteMailTemplate'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteMailTemplate($filter: ModelSubscriptionEvolinciteMailTemplateFilterInput) {
        onUpdateEvolinciteMailTemplate(filter: $filter) {
          __typename
          id
          destinations
          subject
          content
          files
          transmitter
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteMailTemplateListener(
    filter?: ModelSubscriptionEvolinciteMailTemplateFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteMailTemplate'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteMailTemplate($filter: ModelSubscriptionEvolinciteMailTemplateFilterInput) {
        onDeleteEvolinciteMailTemplate(filter: $filter) {
          __typename
          id
          destinations
          subject
          content
          files
          transmitter
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteMailTemplateLogListener(
    filter?: ModelSubscriptionEvolinciteMailTemplateLogFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteMailTemplateLog'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteMailTemplateLog($filter: ModelSubscriptionEvolinciteMailTemplateLogFilterInput) {
        onCreateEvolinciteMailTemplateLog(filter: $filter) {
          __typename
          id
          key
          log
          date
          previousLog
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteMailTemplateLogListener(
    filter?: ModelSubscriptionEvolinciteMailTemplateLogFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteMailTemplateLog'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteMailTemplateLog($filter: ModelSubscriptionEvolinciteMailTemplateLogFilterInput) {
        onUpdateEvolinciteMailTemplateLog(filter: $filter) {
          __typename
          id
          key
          log
          date
          previousLog
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteMailTemplateLogListener(
    filter?: ModelSubscriptionEvolinciteMailTemplateLogFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteMailTemplateLog'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteMailTemplateLog($filter: ModelSubscriptionEvolinciteMailTemplateLogFilterInput) {
        onDeleteEvolinciteMailTemplateLog(filter: $filter) {
          __typename
          id
          key
          log
          date
          previousLog
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolincitePackageListener(
    filter?: ModelSubscriptionEvolincitePackageFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolincitePackage'>>
  > {
    const statement = `subscription OnCreateEvolincitePackage($filter: ModelSubscriptionEvolincitePackageFilterInput) {
        onCreateEvolincitePackage(filter: $filter) {
          __typename
          id
          name
          description
          goal
          duration
          state
          EvolinciteFunctionalities {
            __typename
            nextToken
          }
          EvolinciteCompanySubscriptions {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolincitePackageListener(
    filter?: ModelSubscriptionEvolincitePackageFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolincitePackage'>>
  > {
    const statement = `subscription OnUpdateEvolincitePackage($filter: ModelSubscriptionEvolincitePackageFilterInput) {
        onUpdateEvolincitePackage(filter: $filter) {
          __typename
          id
          name
          description
          goal
          duration
          state
          EvolinciteFunctionalities {
            __typename
            nextToken
          }
          EvolinciteCompanySubscriptions {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolincitePackageListener(
    filter?: ModelSubscriptionEvolincitePackageFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolincitePackage'>>
  > {
    const statement = `subscription OnDeleteEvolincitePackage($filter: ModelSubscriptionEvolincitePackageFilterInput) {
        onDeleteEvolincitePackage(filter: $filter) {
          __typename
          id
          name
          description
          goal
          duration
          state
          EvolinciteFunctionalities {
            __typename
            nextToken
          }
          EvolinciteCompanySubscriptions {
            __typename
            nextToken
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteCompanySubscriptionListener(
    filter?: ModelSubscriptionEvolinciteCompanySubscriptionFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteCompanySubscription'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteCompanySubscription($filter: ModelSubscriptionEvolinciteCompanySubscriptionFilterInput) {
        onCreateEvolinciteCompanySubscription(filter: $filter) {
          __typename
          id
          name
          price
          dateInitial
          dateFinal
          activatorUser
          state
          evolincitePackageID
          EvolincitePackage {
            __typename
            id
            name
            description
            goal
            duration
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteCompanySubscriptionListener(
    filter?: ModelSubscriptionEvolinciteCompanySubscriptionFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteCompanySubscription'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteCompanySubscription($filter: ModelSubscriptionEvolinciteCompanySubscriptionFilterInput) {
        onUpdateEvolinciteCompanySubscription(filter: $filter) {
          __typename
          id
          name
          price
          dateInitial
          dateFinal
          activatorUser
          state
          evolincitePackageID
          EvolincitePackage {
            __typename
            id
            name
            description
            goal
            duration
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteCompanySubscriptionListener(
    filter?: ModelSubscriptionEvolinciteCompanySubscriptionFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteCompanySubscription'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteCompanySubscription($filter: ModelSubscriptionEvolinciteCompanySubscriptionFilterInput) {
        onDeleteEvolinciteCompanySubscription(filter: $filter) {
          __typename
          id
          name
          price
          dateInitial
          dateFinal
          activatorUser
          state
          evolincitePackageID
          EvolincitePackage {
            __typename
            id
            name
            description
            goal
            duration
            state
            createdAt
            updatedAt
          }
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteEmployeeObservationListener(
    filter?: ModelSubscriptionEvolinciteEmployeeObservationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteEmployeeObservation'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteEmployeeObservation($filter: ModelSubscriptionEvolinciteEmployeeObservationFilterInput) {
        onCreateEvolinciteEmployeeObservation(filter: $filter) {
          __typename
          id
          name
          content
          isPublic
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteEmployeeObservationListener(
    filter?: ModelSubscriptionEvolinciteEmployeeObservationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteEmployeeObservation'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteEmployeeObservation($filter: ModelSubscriptionEvolinciteEmployeeObservationFilterInput) {
        onUpdateEvolinciteEmployeeObservation(filter: $filter) {
          __typename
          id
          name
          content
          isPublic
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteEmployeeObservationListener(
    filter?: ModelSubscriptionEvolinciteEmployeeObservationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteEmployeeObservation'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteEmployeeObservation($filter: ModelSubscriptionEvolinciteEmployeeObservationFilterInput) {
        onDeleteEvolinciteEmployeeObservation(filter: $filter) {
          __typename
          id
          name
          content
          isPublic
          meta
          state
          evolinciteCompanyID
          EvolinciteCompany {
            __typename
            id
            name
            nit
            picture
            meta
            state
            evolinciteSubscriptionID
            createdAt
            updatedAt
          }
          evolinciteUserID
          EvolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteTagListener(
    filter?: ModelSubscriptionEvolinciteTagFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteTag'>>
  > {
    const statement = `subscription OnCreateEvolinciteTag($filter: ModelSubscriptionEvolinciteTagFilterInput) {
        onCreateEvolinciteTag(filter: $filter) {
          __typename
          id
          name
          description
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteTagListener(
    filter?: ModelSubscriptionEvolinciteTagFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteTag'>>
  > {
    const statement = `subscription OnUpdateEvolinciteTag($filter: ModelSubscriptionEvolinciteTagFilterInput) {
        onUpdateEvolinciteTag(filter: $filter) {
          __typename
          id
          name
          description
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteTagListener(
    filter?: ModelSubscriptionEvolinciteTagFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteTag'>>
  > {
    const statement = `subscription OnDeleteEvolinciteTag($filter: ModelSubscriptionEvolinciteTagFilterInput) {
        onDeleteEvolinciteTag(filter: $filter) {
          __typename
          id
          name
          description
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteMilestoneListener(
    filter?: ModelSubscriptionEvolinciteMilestoneFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteMilestone'>>
  > {
    const statement = `subscription OnCreateEvolinciteMilestone($filter: ModelSubscriptionEvolinciteMilestoneFilterInput) {
        onCreateEvolinciteMilestone(filter: $filter) {
          __typename
          name
          description
          tags
          type
          config
          startDate
          endDate
          employees
          managers
          isClosed
          closingNotes
          log
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
          id
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteMilestoneListener(
    filter?: ModelSubscriptionEvolinciteMilestoneFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteMilestone'>>
  > {
    const statement = `subscription OnUpdateEvolinciteMilestone($filter: ModelSubscriptionEvolinciteMilestoneFilterInput) {
        onUpdateEvolinciteMilestone(filter: $filter) {
          __typename
          name
          description
          tags
          type
          config
          startDate
          endDate
          employees
          managers
          isClosed
          closingNotes
          log
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
          id
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteMilestoneListener(
    filter?: ModelSubscriptionEvolinciteMilestoneFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteMilestone'>>
  > {
    const statement = `subscription OnDeleteEvolinciteMilestone($filter: ModelSubscriptionEvolinciteMilestoneFilterInput) {
        onDeleteEvolinciteMilestone(filter: $filter) {
          __typename
          name
          description
          tags
          type
          config
          startDate
          endDate
          employees
          managers
          isClosed
          closingNotes
          log
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
          id
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteUserLogListener(
    filter?: ModelSubscriptionEvolinciteUserLogFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteUserLog'>>
  > {
    const statement = `subscription OnCreateEvolinciteUserLog($filter: ModelSubscriptionEvolinciteUserLogFilterInput) {
        onCreateEvolinciteUserLog(filter: $filter) {
          __typename
          id
          log
          functionality
          state
          key
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteUserLogListener(
    filter?: ModelSubscriptionEvolinciteUserLogFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteUserLog'>>
  > {
    const statement = `subscription OnUpdateEvolinciteUserLog($filter: ModelSubscriptionEvolinciteUserLogFilterInput) {
        onUpdateEvolinciteUserLog(filter: $filter) {
          __typename
          id
          log
          functionality
          state
          key
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteUserLogListener(
    filter?: ModelSubscriptionEvolinciteUserLogFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteUserLog'>>
  > {
    const statement = `subscription OnDeleteEvolinciteUserLog($filter: ModelSubscriptionEvolinciteUserLogFilterInput) {
        onDeleteEvolinciteUserLog(filter: $filter) {
          __typename
          id
          log
          functionality
          state
          key
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteUserTimeTrackingListener(
    filter?: ModelSubscriptionEvolinciteUserTimeTrackingFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteUserTimeTracking'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteUserTimeTracking($filter: ModelSubscriptionEvolinciteUserTimeTrackingFilterInput) {
        onCreateEvolinciteUserTimeTracking(filter: $filter) {
          __typename
          id
          time
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteUserTimeTrackingListener(
    filter?: ModelSubscriptionEvolinciteUserTimeTrackingFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteUserTimeTracking'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteUserTimeTracking($filter: ModelSubscriptionEvolinciteUserTimeTrackingFilterInput) {
        onUpdateEvolinciteUserTimeTracking(filter: $filter) {
          __typename
          id
          time
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteUserTimeTrackingListener(
    filter?: ModelSubscriptionEvolinciteUserTimeTrackingFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteUserTimeTracking'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteUserTimeTracking($filter: ModelSubscriptionEvolinciteUserTimeTrackingFilterInput) {
        onDeleteEvolinciteUserTimeTracking(filter: $filter) {
          __typename
          id
          time
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteScheduleListener(
    filter?: ModelSubscriptionEvolinciteScheduleFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteSchedule'>>
  > {
    const statement = `subscription OnCreateEvolinciteSchedule($filter: ModelSubscriptionEvolinciteScheduleFilterInput) {
        onCreateEvolinciteSchedule(filter: $filter) {
          __typename
          id
          name
          description
          config
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteScheduleListener(
    filter?: ModelSubscriptionEvolinciteScheduleFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteSchedule'>>
  > {
    const statement = `subscription OnUpdateEvolinciteSchedule($filter: ModelSubscriptionEvolinciteScheduleFilterInput) {
        onUpdateEvolinciteSchedule(filter: $filter) {
          __typename
          id
          name
          description
          config
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteScheduleListener(
    filter?: ModelSubscriptionEvolinciteScheduleFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteSchedule'>>
  > {
    const statement = `subscription OnDeleteEvolinciteSchedule($filter: ModelSubscriptionEvolinciteScheduleFilterInput) {
        onDeleteEvolinciteSchedule(filter: $filter) {
          __typename
          id
          name
          description
          config
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteTemplateRequestListener(
    filter?: ModelSubscriptionEvolinciteTemplateRequestFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteTemplateRequest'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteTemplateRequest($filter: ModelSubscriptionEvolinciteTemplateRequestFilterInput) {
        onCreateEvolinciteTemplateRequest(filter: $filter) {
          __typename
          id
          name
          description
          tags
          questions
          elementType
          documents
          meta
          owners
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteTemplateRequestListener(
    filter?: ModelSubscriptionEvolinciteTemplateRequestFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteTemplateRequest'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteTemplateRequest($filter: ModelSubscriptionEvolinciteTemplateRequestFilterInput) {
        onUpdateEvolinciteTemplateRequest(filter: $filter) {
          __typename
          id
          name
          description
          tags
          questions
          elementType
          documents
          meta
          owners
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteTemplateRequestListener(
    filter?: ModelSubscriptionEvolinciteTemplateRequestFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteTemplateRequest'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteTemplateRequest($filter: ModelSubscriptionEvolinciteTemplateRequestFilterInput) {
        onDeleteEvolinciteTemplateRequest(filter: $filter) {
          __typename
          id
          name
          description
          tags
          questions
          elementType
          documents
          meta
          owners
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteRequestListener(
    filter?: ModelSubscriptionEvolinciteRequestFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onCreateEvolinciteRequest'>>
  > {
    const statement = `subscription OnCreateEvolinciteRequest($filter: ModelSubscriptionEvolinciteRequestFilterInput) {
        onCreateEvolinciteRequest(filter: $filter) {
          __typename
          id
          templateID
          answers
          requester
          priority
          elementID
          elementType
          status
          meta
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteRequestListener(
    filter?: ModelSubscriptionEvolinciteRequestFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onUpdateEvolinciteRequest'>>
  > {
    const statement = `subscription OnUpdateEvolinciteRequest($filter: ModelSubscriptionEvolinciteRequestFilterInput) {
        onUpdateEvolinciteRequest(filter: $filter) {
          __typename
          id
          templateID
          answers
          requester
          priority
          elementID
          elementType
          status
          meta
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteRequestListener(
    filter?: ModelSubscriptionEvolinciteRequestFilterInput
  ): Observable<
    GraphQLResult<Pick<__SubscriptionContainer, 'onDeleteEvolinciteRequest'>>
  > {
    const statement = `subscription OnDeleteEvolinciteRequest($filter: ModelSubscriptionEvolinciteRequestFilterInput) {
        onDeleteEvolinciteRequest(filter: $filter) {
          __typename
          id
          templateID
          answers
          requester
          priority
          elementID
          elementType
          status
          meta
          state
          evolinciteCompanyID
          evolinciteUserID
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteActivityEvolinciteUserListener(
    filter?: ModelSubscriptionEvolinciteActivityEvolinciteUserFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteActivityEvolinciteUser'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteActivityEvolinciteUser($filter: ModelSubscriptionEvolinciteActivityEvolinciteUserFilterInput) {
        onCreateEvolinciteActivityEvolinciteUser(filter: $filter) {
          __typename
          id
          evolinciteActivityId
          evolinciteUserId
          evolinciteActivity {
            __typename
            id
            name
            description
            startDate
            endDate
            color
            type
            priority
            meta
            taskState
            documents
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteActivityEvolinciteUserListener(
    filter?: ModelSubscriptionEvolinciteActivityEvolinciteUserFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteActivityEvolinciteUser'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteActivityEvolinciteUser($filter: ModelSubscriptionEvolinciteActivityEvolinciteUserFilterInput) {
        onUpdateEvolinciteActivityEvolinciteUser(filter: $filter) {
          __typename
          id
          evolinciteActivityId
          evolinciteUserId
          evolinciteActivity {
            __typename
            id
            name
            description
            startDate
            endDate
            color
            type
            priority
            meta
            taskState
            documents
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteActivityEvolinciteUserListener(
    filter?: ModelSubscriptionEvolinciteActivityEvolinciteUserFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteActivityEvolinciteUser'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteActivityEvolinciteUser($filter: ModelSubscriptionEvolinciteActivityEvolinciteUserFilterInput) {
        onDeleteEvolinciteActivityEvolinciteUser(filter: $filter) {
          __typename
          id
          evolinciteActivityId
          evolinciteUserId
          evolinciteActivity {
            __typename
            id
            name
            description
            startDate
            endDate
            color
            type
            priority
            meta
            taskState
            documents
            state
            evolinciteUserID
            evolinciteCompanyID
            evolinciteCrmNegotiationID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteUserEvolinciteCrmNegotiationListener(
    filter?: ModelSubscriptionEvolinciteUserEvolinciteCrmNegotiationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<
        __SubscriptionContainer,
        'onCreateEvolinciteUserEvolinciteCrmNegotiation'
      >
    >
  > {
    const statement = `subscription OnCreateEvolinciteUserEvolinciteCrmNegotiation($filter: ModelSubscriptionEvolinciteUserEvolinciteCrmNegotiationFilterInput) {
        onCreateEvolinciteUserEvolinciteCrmNegotiation(filter: $filter) {
          __typename
          id
          evolinciteCrmNegotiationId
          evolinciteUserId
          evolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteUserEvolinciteCrmNegotiationListener(
    filter?: ModelSubscriptionEvolinciteUserEvolinciteCrmNegotiationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<
        __SubscriptionContainer,
        'onUpdateEvolinciteUserEvolinciteCrmNegotiation'
      >
    >
  > {
    const statement = `subscription OnUpdateEvolinciteUserEvolinciteCrmNegotiation($filter: ModelSubscriptionEvolinciteUserEvolinciteCrmNegotiationFilterInput) {
        onUpdateEvolinciteUserEvolinciteCrmNegotiation(filter: $filter) {
          __typename
          id
          evolinciteCrmNegotiationId
          evolinciteUserId
          evolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteUserEvolinciteCrmNegotiationListener(
    filter?: ModelSubscriptionEvolinciteUserEvolinciteCrmNegotiationFilterInput
  ): Observable<
    GraphQLResult<
      Pick<
        __SubscriptionContainer,
        'onDeleteEvolinciteUserEvolinciteCrmNegotiation'
      >
    >
  > {
    const statement = `subscription OnDeleteEvolinciteUserEvolinciteCrmNegotiation($filter: ModelSubscriptionEvolinciteUserEvolinciteCrmNegotiationFilterInput) {
        onDeleteEvolinciteUserEvolinciteCrmNegotiation(filter: $filter) {
          __typename
          id
          evolinciteCrmNegotiationId
          evolinciteUserId
          evolinciteCrmNegotiation {
            __typename
            id
            name
            value
            due
            parent
            date
            documents
            meta
            frozen
            valueInterest
            valueCollection
            observers
            exitDate
            state
            evolinciteCompanyID
            evolinciteUserSellerID
            evolinciteUserReferrerID
            evolinciteUserOwnerID
            evolinciteCrmStateID
            evolinciteCustomerID
            evolinciteProcessTypeID
            initialGoalID
            finalGoalID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnCreateEvolinciteRoomEvolinciteUserListener(
    filter?: ModelSubscriptionEvolinciteRoomEvolinciteUserFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onCreateEvolinciteRoomEvolinciteUser'>
    >
  > {
    const statement = `subscription OnCreateEvolinciteRoomEvolinciteUser($filter: ModelSubscriptionEvolinciteRoomEvolinciteUserFilterInput) {
        onCreateEvolinciteRoomEvolinciteUser(filter: $filter) {
          __typename
          id
          evolinciteRoomId
          evolinciteUserId
          evolinciteRoom {
            __typename
            id
            Key
            name
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnUpdateEvolinciteRoomEvolinciteUserListener(
    filter?: ModelSubscriptionEvolinciteRoomEvolinciteUserFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onUpdateEvolinciteRoomEvolinciteUser'>
    >
  > {
    const statement = `subscription OnUpdateEvolinciteRoomEvolinciteUser($filter: ModelSubscriptionEvolinciteRoomEvolinciteUserFilterInput) {
        onUpdateEvolinciteRoomEvolinciteUser(filter: $filter) {
          __typename
          id
          evolinciteRoomId
          evolinciteUserId
          evolinciteRoom {
            __typename
            id
            Key
            name
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }

  OnDeleteEvolinciteRoomEvolinciteUserListener(
    filter?: ModelSubscriptionEvolinciteRoomEvolinciteUserFilterInput
  ): Observable<
    GraphQLResult<
      Pick<__SubscriptionContainer, 'onDeleteEvolinciteRoomEvolinciteUser'>
    >
  > {
    const statement = `subscription OnDeleteEvolinciteRoomEvolinciteUser($filter: ModelSubscriptionEvolinciteRoomEvolinciteUserFilterInput) {
        onDeleteEvolinciteRoomEvolinciteUser(filter: $filter) {
          __typename
          id
          evolinciteRoomId
          evolinciteUserId
          evolinciteRoom {
            __typename
            id
            Key
            name
            state
            meta
            evolinciteCompanyID
            createdAt
            updatedAt
          }
          evolinciteUser {
            __typename
            id
            name
            nit
            phone
            picture
            email
            sub
            meta
            cv
            contract
            memos
            personalMail
            personalPhone
            state
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    return this.client.graphql({
      query: statement,
      variables: gqlAPIServiceArguments,
    }) as any;
  }
}
